import { __rest } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import { forwardRef } from 'react';
import Form from './components/Form';
/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */
export default function withTheme(themeProps) {
    return forwardRef((_a, ref) => {
        var _b;
        var { fields, widgets, templates } = _a, directProps = __rest(_a, ["fields", "widgets", "templates"]);
        fields = Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.fields), fields);
        widgets = Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.widgets), widgets);
        templates = Object.assign(Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.templates), templates), { ButtonTemplates: Object.assign(Object.assign({}, (_b = themeProps === null || themeProps === void 0 ? void 0 : themeProps.templates) === null || _b === void 0 ? void 0 : _b.ButtonTemplates), templates === null || templates === void 0 ? void 0 : templates.ButtonTemplates) });
        return (_jsx(Form, Object.assign({}, themeProps, directProps, { fields: fields, widgets: widgets, templates: templates, ref: ref })));
    });
}
//# sourceMappingURL=withTheme.js.map