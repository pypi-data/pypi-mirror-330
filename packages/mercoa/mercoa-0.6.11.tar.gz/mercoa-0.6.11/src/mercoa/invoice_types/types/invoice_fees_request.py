# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class InvoiceFeesRequest(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import InvoiceFeesRequest

    InvoiceFeesRequest(
        source_platform_markup_fee=0.2,
        destination_platform_markup_fee=1.5,
    )
    """

    source_platform_markup_fee: float = pydantic.Field(alias="sourcePlatformMarkupFee")
    """
    Fee charged to the payer (C2).
    """

    destination_platform_markup_fee: float = pydantic.Field(alias="destinationPlatformMarkupFee")
    """
    Fee charged to the payee (C3).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
