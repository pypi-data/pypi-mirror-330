# This file was auto-generated by Fern from our API Definition.

from .generic_payment_method_customization_request import GenericPaymentMethodCustomizationRequest
import typing
from ...invoice_types.types.check_delivery_method import CheckDeliveryMethod
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CheckPaymentMethodCustomizationRequest(GenericPaymentMethodCustomizationRequest):
    default_delivery_method: typing.Optional[CheckDeliveryMethod] = pydantic.Field(
        alias="defaultDeliveryMethod", default=None
    )
    """
    The default delivery method for this payment method.
    """

    print_description: typing.Optional[bool] = pydantic.Field(alias="printDescription", default=None)
    """
    If true, the check will be printed with the description.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
