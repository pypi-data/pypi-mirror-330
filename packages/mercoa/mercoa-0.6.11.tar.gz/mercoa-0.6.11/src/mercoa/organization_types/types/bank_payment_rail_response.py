# This file was auto-generated by Fern from our API Definition.

from .generic_payment_rail_response import GenericPaymentRailResponse
import typing
from ...invoice_types.types.bank_delivery_method import BankDeliveryMethod
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class BankPaymentRailResponse(GenericPaymentRailResponse):
    available_delivery_methods: typing.List[BankDeliveryMethod] = pydantic.Field(alias="availableDeliveryMethods")
    default_delivery_method: BankDeliveryMethod = pydantic.Field(alias="defaultDeliveryMethod")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
