# This file was auto-generated by Fern from our API Definition.

from .common_onboarding_options_request import CommonOnboardingOptionsRequest
import typing
from .onboarding_option_request import OnboardingOptionRequest
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class BusinessOnboardingOptionsRequest(CommonOnboardingOptionsRequest):
    type: typing.Optional[OnboardingOptionRequest] = None
    doing_business_as: typing.Optional[OnboardingOptionRequest] = pydantic.Field(alias="doingBusinessAs", default=None)
    ein: typing.Optional[OnboardingOptionRequest] = None
    mcc: typing.Optional[OnboardingOptionRequest] = None
    formation_date: typing.Optional[OnboardingOptionRequest] = pydantic.Field(alias="formationDate", default=None)
    website: typing.Optional[OnboardingOptionRequest] = None
    description: typing.Optional[OnboardingOptionRequest] = None
    representatives: typing.Optional[OnboardingOptionRequest] = None
    logo: typing.Optional[OnboardingOptionRequest] = None
    average_transaction_size: typing.Optional[OnboardingOptionRequest] = pydantic.Field(
        alias="averageTransactionSize", default=None
    )
    average_monthly_transaction_volume: typing.Optional[OnboardingOptionRequest] = pydantic.Field(
        alias="averageMonthlyTransactionVolume", default=None
    )
    max_transaction_size: typing.Optional[OnboardingOptionRequest] = pydantic.Field(
        alias="maxTransactionSize", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
