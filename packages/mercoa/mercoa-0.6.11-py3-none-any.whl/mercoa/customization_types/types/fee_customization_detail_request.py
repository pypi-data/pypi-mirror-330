# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .fee_customization_rail_request import FeeCustomizationRailRequest
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class FeeCustomizationDetailRequest(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.customization_types import (
        FeeCustomizationDetailRequest,
        FeeCustomizationRailRequest,
        PaymentMethodFee_Flat,
        PaymentMethodFee_Percentage,
    )

    FeeCustomizationDetailRequest(
        source=FeeCustomizationRailRequest(
            ach_standard=PaymentMethodFee_Flat(
                amount=2.5,
            ),
            ach_same_day=PaymentMethodFee_Percentage(
                amount=2.5,
            ),
            check_print=PaymentMethodFee_Flat(
                amount=2.5,
            ),
            check_mail=PaymentMethodFee_Flat(
                amount=2.5,
            ),
        ),
        destination=FeeCustomizationRailRequest(
            ach_standard=PaymentMethodFee_Flat(
                amount=2.5,
            ),
            ach_same_day=PaymentMethodFee_Percentage(
                amount=2.5,
            ),
            check_print=PaymentMethodFee_Flat(
                amount=2.5,
            ),
            check_mail=PaymentMethodFee_Flat(
                amount=2.5,
            ),
        ),
    )
    """

    source: typing.Optional[FeeCustomizationRailRequest] = pydantic.Field(default=None)
    """
    Fees to be applied to the source of the transaction.
    """

    destination: typing.Optional[FeeCustomizationRailRequest] = pydantic.Field(default=None)
    """
    Fees to be applied to the destination of the transaction.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
