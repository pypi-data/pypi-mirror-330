# This file was auto-generated by Fern from our API Definition.

from .common_onboarding_options_response import CommonOnboardingOptionsResponse
from .onboarding_option_response import OnboardingOptionResponse
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class BusinessOnboardingOptionsResponse(CommonOnboardingOptionsResponse):
    type: OnboardingOptionResponse
    doing_business_as: OnboardingOptionResponse = pydantic.Field(alias="doingBusinessAs")
    ein: OnboardingOptionResponse
    mcc: OnboardingOptionResponse
    formation_date: OnboardingOptionResponse = pydantic.Field(alias="formationDate")
    website: OnboardingOptionResponse
    description: OnboardingOptionResponse
    representatives: OnboardingOptionResponse
    logo: OnboardingOptionResponse
    average_transaction_size: OnboardingOptionResponse = pydantic.Field(alias="averageTransactionSize")
    average_monthly_transaction_volume: OnboardingOptionResponse = pydantic.Field(
        alias="averageMonthlyTransactionVolume"
    )
    max_transaction_size: OnboardingOptionResponse = pydantic.Field(alias="maxTransactionSize")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
