# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .approval_slot_id import ApprovalSlotId
import pydantic
from ...entity_types.types.entity_user_id import EntityUserId
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ApprovalSlotAssignment(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import ApprovalSlotAssignment

    ApprovalSlotAssignment(
        approval_slot_id="inap_9bb311c9-7c15-4c9e-8148-63814e0abec6",
        assigned_user_id="user_e24fc81c-c5ee-47e8-af42-4fe29d895506",
    )
    """

    approval_slot_id: ApprovalSlotId = pydantic.Field(alias="approvalSlotId")
    """
    The identifier for the approval slot this user is assigned to.
    """

    assigned_user_id: EntityUserId = pydantic.Field(alias="assignedUserId")
    """
    The ID of the user who is assigned to the approval slot. To assign all eligible users to an approval slot, use "ANY".
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
