# generated by datamodel-codegen:
#   filename:  warning_message.json

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from . import location


class When(Enum):
    """When the warning message is emitted."""

    config = "config"
    collect = "collect"
    runtest = "runtest"


@dataclass
class WarningMessage:
    """A warning message."""

    when: When
    """
    When the warning message is emitted.
    """
    node_id: str
    """
    The node ID of the node where the warning message is emitted.
    """
    location: location.Location
    """
    The location of the warning message.
    """
    message: str
    """
    The string content of the warning message.
    """
    event: str = "warning_message"
    """
    The event type. Always 'warning_message'.
    """
    category: str | None = None
    """
    The category of the warning message.
    """
