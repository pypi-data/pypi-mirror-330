# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SecurityProfileArgs', 'SecurityProfile']

@pulumi.input_type
class SecurityProfileArgs:
    def __init__(__self__, *,
                 organization_id: pulumi.Input[str],
                 profile_config: pulumi.Input['GoogleCloudApigeeV1ProfileConfigArgs'],
                 security_profile_id: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 scoring_configs: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]] = None):
        """
        The set of arguments for constructing a SecurityProfile resource.
        :param pulumi.Input['GoogleCloudApigeeV1ProfileConfigArgs'] profile_config: Customized profile configuration that computes the security score.
        :param pulumi.Input[str] security_profile_id: Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
        :param pulumi.Input[str] description: Description of the security profile.
        :param pulumi.Input[str] display_name: DEPRECATED: DO NOT USE Display name of the security profile.
        :param pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]] environments: List of environments attached to security profile.
        :param pulumi.Input[str] name: Immutable. Name of the security profile resource. Format: organizations/{org}/securityProfiles/{profile}
        :param pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]] scoring_configs: List of profile scoring configs in this revision.
        """
        pulumi.set(__self__, "organization_id", organization_id)
        pulumi.set(__self__, "profile_config", profile_config)
        pulumi.set(__self__, "security_profile_id", security_profile_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if display_name is not None:
            warnings.warn("""DEPRECATED: DO NOT USE Display name of the security profile.""", DeprecationWarning)
            pulumi.log.warn("""display_name is deprecated: DEPRECATED: DO NOT USE Display name of the security profile.""")
        if display_name is not None:
            pulumi.set(__self__, "display_name", display_name)
        if environments is not None:
            pulumi.set(__self__, "environments", environments)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if scoring_configs is not None:
            pulumi.set(__self__, "scoring_configs", scoring_configs)

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_id", value)

    @property
    @pulumi.getter(name="profileConfig")
    def profile_config(self) -> pulumi.Input['GoogleCloudApigeeV1ProfileConfigArgs']:
        """
        Customized profile configuration that computes the security score.
        """
        return pulumi.get(self, "profile_config")

    @profile_config.setter
    def profile_config(self, value: pulumi.Input['GoogleCloudApigeeV1ProfileConfigArgs']):
        pulumi.set(self, "profile_config", value)

    @property
    @pulumi.getter(name="securityProfileId")
    def security_profile_id(self) -> pulumi.Input[str]:
        """
        Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
        """
        return pulumi.get(self, "security_profile_id")

    @security_profile_id.setter
    def security_profile_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "security_profile_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the security profile.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="displayName")
    @_utilities.deprecated("""DEPRECATED: DO NOT USE Display name of the security profile.""")
    def display_name(self) -> Optional[pulumi.Input[str]]:
        """
        DEPRECATED: DO NOT USE Display name of the security profile.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter
    def environments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]]:
        """
        List of environments attached to security profile.
        """
        return pulumi.get(self, "environments")

    @environments.setter
    def environments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]]):
        pulumi.set(self, "environments", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Immutable. Name of the security profile resource. Format: organizations/{org}/securityProfiles/{profile}
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="scoringConfigs")
    def scoring_configs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]]:
        """
        List of profile scoring configs in this revision.
        """
        return pulumi.get(self, "scoring_configs")

    @scoring_configs.setter
    def scoring_configs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]]):
        pulumi.set(self, "scoring_configs", value)


class SecurityProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 profile_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1ProfileConfigArgs']]] = None,
                 scoring_configs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]]] = None,
                 security_profile_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        CreateSecurityProfile create a new custom security profile.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Description of the security profile.
        :param pulumi.Input[str] display_name: DEPRECATED: DO NOT USE Display name of the security profile.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]] environments: List of environments attached to security profile.
        :param pulumi.Input[str] name: Immutable. Name of the security profile resource. Format: organizations/{org}/securityProfiles/{profile}
        :param pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1ProfileConfigArgs']] profile_config: Customized profile configuration that computes the security score.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]] scoring_configs: List of profile scoring configs in this revision.
        :param pulumi.Input[str] security_profile_id: Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SecurityProfileArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        CreateSecurityProfile create a new custom security profile.

        :param str resource_name: The name of the resource.
        :param SecurityProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 environments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileEnvironmentArgs']]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 profile_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1ProfileConfigArgs']]] = None,
                 scoring_configs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudApigeeV1SecurityProfileScoringConfigArgs']]]]] = None,
                 security_profile_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityProfileArgs.__new__(SecurityProfileArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["environments"] = environments
            __props__.__dict__["name"] = name
            if organization_id is None and not opts.urn:
                raise TypeError("Missing required property 'organization_id'")
            __props__.__dict__["organization_id"] = organization_id
            if profile_config is None and not opts.urn:
                raise TypeError("Missing required property 'profile_config'")
            __props__.__dict__["profile_config"] = profile_config
            __props__.__dict__["scoring_configs"] = scoring_configs
            if security_profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'security_profile_id'")
            __props__.__dict__["security_profile_id"] = security_profile_id
            __props__.__dict__["max_score"] = None
            __props__.__dict__["min_score"] = None
            __props__.__dict__["revision_create_time"] = None
            __props__.__dict__["revision_id"] = None
            __props__.__dict__["revision_publish_time"] = None
            __props__.__dict__["revision_update_time"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["organizationId", "securityProfileId"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(SecurityProfile, __self__).__init__(
            'google-native:apigee/v1:SecurityProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'SecurityProfile':
        """
        Get an existing SecurityProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = SecurityProfileArgs.__new__(SecurityProfileArgs)

        __props__.__dict__["description"] = None
        __props__.__dict__["display_name"] = None
        __props__.__dict__["environments"] = None
        __props__.__dict__["max_score"] = None
        __props__.__dict__["min_score"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["organization_id"] = None
        __props__.__dict__["profile_config"] = None
        __props__.__dict__["revision_create_time"] = None
        __props__.__dict__["revision_id"] = None
        __props__.__dict__["revision_publish_time"] = None
        __props__.__dict__["revision_update_time"] = None
        __props__.__dict__["scoring_configs"] = None
        __props__.__dict__["security_profile_id"] = None
        return SecurityProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        Description of the security profile.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    @_utilities.deprecated("""DEPRECATED: DO NOT USE Display name of the security profile.""")
    def display_name(self) -> pulumi.Output[str]:
        """
        DEPRECATED: DO NOT USE Display name of the security profile.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def environments(self) -> pulumi.Output[Sequence['outputs.GoogleCloudApigeeV1SecurityProfileEnvironmentResponse']]:
        """
        List of environments attached to security profile.
        """
        return pulumi.get(self, "environments")

    @property
    @pulumi.getter(name="maxScore")
    def max_score(self) -> pulumi.Output[int]:
        """
        Maximum security score that can be generated by this profile.
        """
        return pulumi.get(self, "max_score")

    @property
    @pulumi.getter(name="minScore")
    def min_score(self) -> pulumi.Output[int]:
        """
        Minimum security score that can be generated by this profile.
        """
        return pulumi.get(self, "min_score")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Immutable. Name of the security profile resource. Format: organizations/{org}/securityProfiles/{profile}
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter(name="profileConfig")
    def profile_config(self) -> pulumi.Output['outputs.GoogleCloudApigeeV1ProfileConfigResponse']:
        """
        Customized profile configuration that computes the security score.
        """
        return pulumi.get(self, "profile_config")

    @property
    @pulumi.getter(name="revisionCreateTime")
    def revision_create_time(self) -> pulumi.Output[str]:
        """
        The time when revision was created.
        """
        return pulumi.get(self, "revision_create_time")

    @property
    @pulumi.getter(name="revisionId")
    def revision_id(self) -> pulumi.Output[str]:
        """
        Revision ID of the security profile.
        """
        return pulumi.get(self, "revision_id")

    @property
    @pulumi.getter(name="revisionPublishTime")
    @_utilities.deprecated("""Output only. DEPRECATED: DO NOT USE The time when revision was published. Once published, the security profile revision cannot be updated further and can be attached to environments.""")
    def revision_publish_time(self) -> pulumi.Output[str]:
        """
        DEPRECATED: DO NOT USE The time when revision was published. Once published, the security profile revision cannot be updated further and can be attached to environments.
        """
        return pulumi.get(self, "revision_publish_time")

    @property
    @pulumi.getter(name="revisionUpdateTime")
    def revision_update_time(self) -> pulumi.Output[str]:
        """
        The time when revision was updated.
        """
        return pulumi.get(self, "revision_update_time")

    @property
    @pulumi.getter(name="scoringConfigs")
    def scoring_configs(self) -> pulumi.Output[Sequence['outputs.GoogleCloudApigeeV1SecurityProfileScoringConfigResponse']]:
        """
        List of profile scoring configs in this revision.
        """
        return pulumi.get(self, "scoring_configs")

    @property
    @pulumi.getter(name="securityProfileId")
    def security_profile_id(self) -> pulumi.Output[str]:
        """
        Required. The ID to use for the SecurityProfile, which will become the final component of the action's resource name. This value should be 1-63 characters and validated by "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
        """
        return pulumi.get(self, "security_profile_id")

