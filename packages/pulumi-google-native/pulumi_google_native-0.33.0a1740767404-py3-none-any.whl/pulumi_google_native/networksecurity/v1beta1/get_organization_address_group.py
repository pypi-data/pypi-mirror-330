# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GetOrganizationAddressGroupResult',
    'AwaitableGetOrganizationAddressGroupResult',
    'get_organization_address_group',
    'get_organization_address_group_output',
]

@pulumi.output_type
class GetOrganizationAddressGroupResult:
    def __init__(__self__, capacity=None, create_time=None, description=None, items=None, labels=None, name=None, self_link=None, type=None, update_time=None):
        if capacity and not isinstance(capacity, int):
            raise TypeError("Expected argument 'capacity' to be a int")
        pulumi.set(__self__, "capacity", capacity)
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if labels and not isinstance(labels, dict):
            raise TypeError("Expected argument 'labels' to be a dict")
        pulumi.set(__self__, "labels", labels)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if self_link and not isinstance(self_link, str):
            raise TypeError("Expected argument 'self_link' to be a str")
        pulumi.set(__self__, "self_link", self_link)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter
    def capacity(self) -> int:
        """
        Capacity of the Address Group
        """
        return pulumi.get(self, "capacity")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        The timestamp when the resource was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Optional. Free-text description of the resource.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def items(self) -> Sequence[str]:
        """
        Optional. List of items.
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter
    def labels(self) -> Mapping[str, str]:
        """
        Optional. Set of label tags associated with the AddressGroup resource.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the AddressGroup resource. It matches pattern `projects/*/locations/{location}/addressGroups/`.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="selfLink")
    def self_link(self) -> str:
        """
        Server-defined fully-qualified URL for this resource.
        """
        return pulumi.get(self, "self_link")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of the Address Group. Possible values are "IPv4" or "IPV6".
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        The timestamp when the resource was updated.
        """
        return pulumi.get(self, "update_time")


class AwaitableGetOrganizationAddressGroupResult(GetOrganizationAddressGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationAddressGroupResult(
            capacity=self.capacity,
            create_time=self.create_time,
            description=self.description,
            items=self.items,
            labels=self.labels,
            name=self.name,
            self_link=self.self_link,
            type=self.type,
            update_time=self.update_time)


def get_organization_address_group(address_group_id: Optional[str] = None,
                                   location: Optional[str] = None,
                                   organization_id: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationAddressGroupResult:
    """
    Gets details of a single address group.
    """
    __args__ = dict()
    __args__['addressGroupId'] = address_group_id
    __args__['location'] = location
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:networksecurity/v1beta1:getOrganizationAddressGroup', __args__, opts=opts, typ=GetOrganizationAddressGroupResult).value

    return AwaitableGetOrganizationAddressGroupResult(
        capacity=pulumi.get(__ret__, 'capacity'),
        create_time=pulumi.get(__ret__, 'create_time'),
        description=pulumi.get(__ret__, 'description'),
        items=pulumi.get(__ret__, 'items'),
        labels=pulumi.get(__ret__, 'labels'),
        name=pulumi.get(__ret__, 'name'),
        self_link=pulumi.get(__ret__, 'self_link'),
        type=pulumi.get(__ret__, 'type'),
        update_time=pulumi.get(__ret__, 'update_time'))


@_utilities.lift_output_func(get_organization_address_group)
def get_organization_address_group_output(address_group_id: Optional[pulumi.Input[str]] = None,
                                          location: Optional[pulumi.Input[str]] = None,
                                          organization_id: Optional[pulumi.Input[str]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOrganizationAddressGroupResult]:
    """
    Gets details of a single address group.
    """
    ...
