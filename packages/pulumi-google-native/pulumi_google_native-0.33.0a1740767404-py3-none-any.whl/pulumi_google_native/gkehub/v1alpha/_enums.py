# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AuditLogConfigLogType',
    'BinaryAuthorizationConfigEvaluationMode',
    'CloudBuildMembershipSpecSecurityPolicy',
    'ConfigManagementPolicyControllerMonitoringBackendsItem',
    'FeatureSpecProvisionGoogleCa',
    'FleetObservabilityRoutingConfigMode',
    'MembershipSpecCertificateManagement',
    'MultiClusterIngressFeatureSpecBilling',
    'NamespaceActuationFeatureSpecActuationMode',
    'OnPremClusterClusterType',
    'OriginType',
    'PolicyControllerHubConfigInstallSpec',
    'PolicyControllerMonitoringConfigBackendsItem',
    'PolicyControllerPolicyControllerDeploymentConfigPodAffinity',
    'PolicyControllerTemplateLibraryConfigInstallation',
    'RolePredefinedRole',
    'SecurityPostureConfigMode',
    'SecurityPostureConfigVulnerabilityMode',
    'ServiceMeshMembershipSpecControlPlane',
    'ServiceMeshMembershipSpecDefaultChannel',
    'ServiceMeshMembershipSpecManagement',
]


class AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    """
    Default case. Should never be this.
    """
    ADMIN_READ = "ADMIN_READ"
    """
    Admin reads. Example: CloudIAM getIamPolicy
    """
    DATA_WRITE = "DATA_WRITE"
    """
    Data writes. Example: CloudSQL Users create
    """
    DATA_READ = "DATA_READ"
    """
    Data reads. Example: CloudSQL Users list
    """


class BinaryAuthorizationConfigEvaluationMode(str, Enum):
    """
    Optional. Mode of operation for binauthz policy evaluation.
    """
    EVALUATION_MODE_UNSPECIFIED = "EVALUATION_MODE_UNSPECIFIED"
    """
    Default value
    """
    DISABLED = "DISABLED"
    """
    Disable BinaryAuthorization
    """
    POLICY_BINDINGS = "POLICY_BINDINGS"
    """
    Use Binary Authorization with the policies specified in policy_bindings.
    """


class CloudBuildMembershipSpecSecurityPolicy(str, Enum):
    """
    Whether it is allowed to run the privileged builds on the cluster or not.
    """
    SECURITY_POLICY_UNSPECIFIED = "SECURITY_POLICY_UNSPECIFIED"
    """
    Unspecified policy
    """
    NON_PRIVILEGED = "NON_PRIVILEGED"
    """
    Privileged build pods are disallowed
    """
    PRIVILEGED = "PRIVILEGED"
    """
    Privileged build pods are allowed
    """


class ConfigManagementPolicyControllerMonitoringBackendsItem(str, Enum):
    MONITORING_BACKEND_UNSPECIFIED = "MONITORING_BACKEND_UNSPECIFIED"
    """
    Backend cannot be determined
    """
    PROMETHEUS = "PROMETHEUS"
    """
    Prometheus backend for monitoring
    """
    CLOUD_MONITORING = "CLOUD_MONITORING"
    """
    Stackdriver/Cloud Monitoring backend for monitoring
    """


class FeatureSpecProvisionGoogleCa(str, Enum):
    """
    Immutable. Specifies CA configuration.
    """
    GOOGLE_CA_PROVISIONING_UNSPECIFIED = "GOOGLE_CA_PROVISIONING_UNSPECIFIED"
    """
    Disable default Google managed CA.
    """
    DISABLED = "DISABLED"
    """
    Disable default Google managed CA.
    """
    ENABLED = "ENABLED"
    """
    Use default Google managed CA.
    """
    ENABLED_WITH_MANAGED_CA = "ENABLED_WITH_MANAGED_CA"
    """
    Workload certificate feature is enabled, and the entire certificate provisioning process is managed by Google with managed CAS which is more secure than the default CA.
    """
    ENABLED_WITH_DEFAULT_CA = "ENABLED_WITH_DEFAULT_CA"
    """
    Workload certificate feature is enabled, and the entire certificate provisioning process is using the default CA which is free.
    """


class FleetObservabilityRoutingConfigMode(str, Enum):
    """
    mode configures the logs routing mode.
    """
    MODE_UNSPECIFIED = "MODE_UNSPECIFIED"
    """
    If UNSPECIFIED, fleet logging feature is disabled.
    """
    COPY = "COPY"
    """
    logs will be copied to the destination project.
    """
    MOVE = "MOVE"
    """
    logs will be moved to the destination project.
    """


class MembershipSpecCertificateManagement(str, Enum):
    """
    Specifies workload certificate management.
    """
    CERTIFICATE_MANAGEMENT_UNSPECIFIED = "CERTIFICATE_MANAGEMENT_UNSPECIFIED"
    """
    Disable workload certificate feature.
    """
    DISABLED = "DISABLED"
    """
    Disable workload certificate feature.
    """
    ENABLED = "ENABLED"
    """
    Enable workload certificate feature.
    """


class MultiClusterIngressFeatureSpecBilling(str, Enum):
    """
    Deprecated: This field will be ignored and should not be set. Customer's billing structure.
    """
    BILLING_UNSPECIFIED = "BILLING_UNSPECIFIED"
    """
    Unknown
    """
    PAY_AS_YOU_GO = "PAY_AS_YOU_GO"
    """
    User pays a fee per-endpoint.
    """
    ANTHOS_LICENSE = "ANTHOS_LICENSE"
    """
    User is paying for Anthos as a whole.
    """


class NamespaceActuationFeatureSpecActuationMode(str, Enum):
    """
    actuation_mode controls the behavior of the controller
    """
    ACTUATION_MODE_UNSPECIFIED = "ACTUATION_MODE_UNSPECIFIED"
    """
    ACTUATION_MODE_UNSPECIFIED is similar to CREATE_AND_DELETE_IF_CREATED in the default controller behavior.
    """
    ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED = "ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED"
    """
    ACTUATION_MODE_CREATE_AND_DELETE_IF_CREATED has the controller create cluster namespaces for each fleet namespace and it deletes only the ones it created, which are identified by a label.
    """
    ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS = "ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS"
    """
    ACTUATION_MODE_ADD_AND_REMOVE_FLEET_LABELS has the controller only apply labels to cluster namespaces to signal fleet namespace enablement. It doesn't create or delete cluster namespaces.
    """


class OnPremClusterClusterType(str, Enum):
    """
    Immutable. The on prem cluster's type.
    """
    CLUSTERTYPE_UNSPECIFIED = "CLUSTERTYPE_UNSPECIFIED"
    """
    The ClusterType is not set.
    """
    BOOTSTRAP = "BOOTSTRAP"
    """
    The ClusterType is bootstrap cluster.
    """
    HYBRID = "HYBRID"
    """
    The ClusterType is baremetal hybrid cluster.
    """
    STANDALONE = "STANDALONE"
    """
    The ClusterType is baremetal standalone cluster.
    """
    USER = "USER"
    """
    The ClusterType is user cluster.
    """


class OriginType(str, Enum):
    """
    Type specifies which type of origin is set.
    """
    TYPE_UNSPECIFIED = "TYPE_UNSPECIFIED"
    """
    Type is unknown or not set.
    """
    FLEET = "FLEET"
    """
    Per-Membership spec was inherited from the fleet-level default.
    """
    FLEET_OUT_OF_SYNC = "FLEET_OUT_OF_SYNC"
    """
    Per-Membership spec was inherited from the fleet-level default but is now out of sync with the current default.
    """
    USER = "USER"
    """
    Per-Membership spec was inherited from a user specification.
    """


class PolicyControllerHubConfigInstallSpec(str, Enum):
    """
    The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.
    """
    INSTALL_SPEC_UNSPECIFIED = "INSTALL_SPEC_UNSPECIFIED"
    """
    Spec is unknown.
    """
    INSTALL_SPEC_NOT_INSTALLED = "INSTALL_SPEC_NOT_INSTALLED"
    """
    Request to uninstall Policy Controller.
    """
    INSTALL_SPEC_ENABLED = "INSTALL_SPEC_ENABLED"
    """
    Request to install and enable Policy Controller.
    """
    INSTALL_SPEC_SUSPENDED = "INSTALL_SPEC_SUSPENDED"
    """
    Request to suspend Policy Controller i.e. its webhooks. If Policy Controller is not installed, it will be installed but suspended.
    """
    INSTALL_SPEC_DETACHED = "INSTALL_SPEC_DETACHED"
    """
    Request to stop all reconciliation actions by PoCo Hub controller. This is a breakglass mechanism to stop PoCo Hub from affecting cluster resources.
    """


class PolicyControllerMonitoringConfigBackendsItem(str, Enum):
    MONITORING_BACKEND_UNSPECIFIED = "MONITORING_BACKEND_UNSPECIFIED"
    """
    Backend cannot be determined
    """
    PROMETHEUS = "PROMETHEUS"
    """
    Prometheus backend for monitoring
    """
    CLOUD_MONITORING = "CLOUD_MONITORING"
    """
    Stackdriver/Cloud Monitoring backend for monitoring
    """


class PolicyControllerPolicyControllerDeploymentConfigPodAffinity(str, Enum):
    """
    Pod affinity configuration.
    """
    AFFINITY_UNSPECIFIED = "AFFINITY_UNSPECIFIED"
    """
    No affinity configuration has been specified.
    """
    NO_AFFINITY = "NO_AFFINITY"
    """
    Affinity configurations will be removed from the deployment.
    """
    ANTI_AFFINITY = "ANTI_AFFINITY"
    """
    Anti-affinity configuration will be applied to this deployment. Default for admissions deployment.
    """


class PolicyControllerTemplateLibraryConfigInstallation(str, Enum):
    """
    Configures the manner in which the template library is installed on the cluster.
    """
    INSTALLATION_UNSPECIFIED = "INSTALLATION_UNSPECIFIED"
    """
    No installation strategy has been specified.
    """
    NOT_INSTALLED = "NOT_INSTALLED"
    """
    Do not install the template library.
    """
    ALL = "ALL"
    """
    Install the entire template library.
    """


class RolePredefinedRole(str, Enum):
    """
    predefined_role is the Kubernetes default role to use
    """
    UNKNOWN = "UNKNOWN"
    """
    UNKNOWN
    """
    ADMIN = "ADMIN"
    """
    ADMIN has EDIT and RBAC permissions
    """
    EDIT = "EDIT"
    """
    EDIT can edit all resources except RBAC
    """
    VIEW = "VIEW"
    """
    VIEW can only read resources
    """
    ANTHOS_SUPPORT = "ANTHOS_SUPPORT"
    """
    ANTHOS_SUPPORT gives Google Support read-only access to a number of cluster resources.
    """


class SecurityPostureConfigMode(str, Enum):
    """
    Sets which mode to use for Security Posture features.
    """
    MODE_UNSPECIFIED = "MODE_UNSPECIFIED"
    """
    Default value not specified.
    """
    DISABLED = "DISABLED"
    """
    Disables Security Posture features on the cluster.
    """
    BASIC = "BASIC"
    """
    Applies Security Posture features on the cluster.
    """


class SecurityPostureConfigVulnerabilityMode(str, Enum):
    """
    Sets which mode to use for vulnerability scanning.
    """
    VULNERABILITY_MODE_UNSPECIFIED = "VULNERABILITY_MODE_UNSPECIFIED"
    """
    Default value not specified.
    """
    VULNERABILITY_DISABLED = "VULNERABILITY_DISABLED"
    """
    Disables vulnerability scanning on the cluster.
    """
    VULNERABILITY_BASIC = "VULNERABILITY_BASIC"
    """
    Applies basic vulnerability scanning on the cluster.
    """
    VULNERABILITY_ENTERPRISE = "VULNERABILITY_ENTERPRISE"
    """
    Applies the Security Posture's vulnerability on cluster Enterprise level features.
    """


class ServiceMeshMembershipSpecControlPlane(str, Enum):
    """
    Deprecated: use `management` instead Enables automatic control plane management.
    """
    CONTROL_PLANE_MANAGEMENT_UNSPECIFIED = "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED"
    """
    Unspecified
    """
    AUTOMATIC = "AUTOMATIC"
    """
    Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.
    """
    MANUAL = "MANUAL"
    """
    User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)
    """


class ServiceMeshMembershipSpecDefaultChannel(str, Enum):
    """
    Determines which release channel to use for default injection and service mesh APIs.
    """
    CHANNEL_UNSPECIFIED = "CHANNEL_UNSPECIFIED"
    """
    Unspecified
    """
    RAPID = "RAPID"
    """
    RAPID channel is offered on an early access basis for customers who want to test new releases.
    """
    REGULAR = "REGULAR"
    """
    REGULAR channel is intended for production users who want to take advantage of new features.
    """
    STABLE = "STABLE"
    """
    STABLE channel includes versions that are known to be stable and reliable in production.
    """


class ServiceMeshMembershipSpecManagement(str, Enum):
    """
    Enables automatic Service Mesh management.
    """
    MANAGEMENT_UNSPECIFIED = "MANAGEMENT_UNSPECIFIED"
    """
    Unspecified
    """
    MANAGEMENT_AUTOMATIC = "MANAGEMENT_AUTOMATIC"
    """
    Google should manage my Service Mesh for the cluster.
    """
    MANAGEMENT_MANUAL = "MANAGEMENT_MANUAL"
    """
    User will manually configure their service mesh components.
    """
