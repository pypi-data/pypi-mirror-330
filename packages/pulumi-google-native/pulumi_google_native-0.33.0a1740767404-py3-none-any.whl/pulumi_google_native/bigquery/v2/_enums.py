# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'ArgumentArgumentKind',
    'ArgumentMode',
    'AuditLogConfigLogType',
    'DatasetAccessEntryTargetTypesItem',
    'RoutineDataGovernanceType',
    'RoutineDeterminismLevel',
    'RoutineLanguage',
    'RoutineRoutineType',
    'RoutineSecurityMode',
    'StandardSqlDataTypeTypeKind',
]


class ArgumentArgumentKind(str, Enum):
    """
    Optional. Defaults to FIXED_TYPE.
    """
    ARGUMENT_KIND_UNSPECIFIED = "ARGUMENT_KIND_UNSPECIFIED"
    """
    Default value.
    """
    FIXED_TYPE = "FIXED_TYPE"
    """
    The argument is a variable with fully specified type, which can be a struct or an array, but not a table.
    """
    ANY_TYPE = "ANY_TYPE"
    """
    The argument is any type, including struct or array, but not a table. To be added: FIXED_TABLE, ANY_TABLE
    """


class ArgumentMode(str, Enum):
    """
    Optional. Specifies whether the argument is input or output. Can be set for procedures only.
    """
    MODE_UNSPECIFIED = "MODE_UNSPECIFIED"
    """
    Default value.
    """
    IN_ = "IN"
    """
    The argument is input-only.
    """
    OUT = "OUT"
    """
    The argument is output-only.
    """
    INOUT = "INOUT"
    """
    The argument is both an input and an output.
    """


class AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    """
    Default case. Should never be this.
    """
    ADMIN_READ = "ADMIN_READ"
    """
    Admin reads. Example: CloudIAM getIamPolicy
    """
    DATA_WRITE = "DATA_WRITE"
    """
    Data writes. Example: CloudSQL Users create
    """
    DATA_READ = "DATA_READ"
    """
    Data reads. Example: CloudSQL Users list
    """


class DatasetAccessEntryTargetTypesItem(str, Enum):
    TARGET_TYPE_UNSPECIFIED = "TARGET_TYPE_UNSPECIFIED"
    """
    Do not use. You must set a target type explicitly.
    """
    VIEWS = "VIEWS"
    """
    This entry applies to views in the dataset.
    """
    ROUTINES = "ROUTINES"
    """
    This entry applies to routines in the dataset.
    """


class RoutineDataGovernanceType(str, Enum):
    """
    Optional. If set to `DATA_MASKING`, the function is validated and made available as a masking function. For more information, see [Create custom masking routines](https://cloud.google.com/bigquery/docs/user-defined-functions#custom-mask).
    """
    DATA_GOVERNANCE_TYPE_UNSPECIFIED = "DATA_GOVERNANCE_TYPE_UNSPECIFIED"
    """
    The data governance type is unspecified.
    """
    DATA_MASKING = "DATA_MASKING"
    """
    The data governance type is data masking.
    """


class RoutineDeterminismLevel(str, Enum):
    """
    Optional. The determinism level of the JavaScript UDF, if defined.
    """
    DETERMINISM_LEVEL_UNSPECIFIED = "DETERMINISM_LEVEL_UNSPECIFIED"
    """
    The determinism of the UDF is unspecified.
    """
    DETERMINISTIC = "DETERMINISTIC"
    """
    The UDF is deterministic, meaning that 2 function calls with the same inputs always produce the same result, even across 2 query runs.
    """
    NOT_DETERMINISTIC = "NOT_DETERMINISTIC"
    """
    The UDF is not deterministic.
    """


class RoutineLanguage(str, Enum):
    """
    Optional. Defaults to "SQL" if remote_function_options field is absent, not set otherwise.
    """
    LANGUAGE_UNSPECIFIED = "LANGUAGE_UNSPECIFIED"
    """
    Default value.
    """
    SQL = "SQL"
    """
    SQL language.
    """
    JAVASCRIPT = "JAVASCRIPT"
    """
    JavaScript language.
    """
    PYTHON = "PYTHON"
    """
    Python language.
    """
    JAVA = "JAVA"
    """
    Java language.
    """
    SCALA = "SCALA"
    """
    Scala language.
    """


class RoutineRoutineType(str, Enum):
    """
    Required. The type of routine.
    """
    ROUTINE_TYPE_UNSPECIFIED = "ROUTINE_TYPE_UNSPECIFIED"
    """
    Default value.
    """
    SCALAR_FUNCTION = "SCALAR_FUNCTION"
    """
    Non-built-in persistent scalar function.
    """
    PROCEDURE = "PROCEDURE"
    """
    Stored procedure.
    """
    TABLE_VALUED_FUNCTION = "TABLE_VALUED_FUNCTION"
    """
    Non-built-in persistent TVF.
    """
    AGGREGATE_FUNCTION = "AGGREGATE_FUNCTION"
    """
    Non-built-in persistent aggregate function.
    """


class RoutineSecurityMode(str, Enum):
    """
    Optional. The security mode of the routine, if defined. If not defined, the security mode is automatically determined from the routine's configuration.
    """
    SECURITY_MODE_UNSPECIFIED = "SECURITY_MODE_UNSPECIFIED"
    """
    The security mode of the routine is unspecified.
    """
    DEFINER = "DEFINER"
    """
    The routine is to be executed with the privileges of the user who defines it.
    """
    INVOKER = "INVOKER"
    """
    The routine is to be executed with the privileges of the user who invokes it.
    """


class StandardSqlDataTypeTypeKind(str, Enum):
    """
    Required. The top level type of this field. Can be any GoogleSQL data type (e.g., "INT64", "DATE", "ARRAY").
    """
    TYPE_KIND_UNSPECIFIED = "TYPE_KIND_UNSPECIFIED"
    """
    Invalid type.
    """
    INT64 = "INT64"
    """
    Encoded as a string in decimal format.
    """
    BOOL = "BOOL"
    """
    Encoded as a boolean "false" or "true".
    """
    FLOAT64 = "FLOAT64"
    """
    Encoded as a number, or string "NaN", "Infinity" or "-Infinity".
    """
    STRING = "STRING"
    """
    Encoded as a string value.
    """
    BYTES = "BYTES"
    """
    Encoded as a base64 string per RFC 4648, section 4.
    """
    TIMESTAMP = "TIMESTAMP"
    """
    Encoded as an RFC 3339 timestamp with mandatory "Z" time zone string: 1985-04-12T23:20:50.52Z
    """
    DATE = "DATE"
    """
    Encoded as RFC 3339 full-date format string: 1985-04-12
    """
    TIME = "TIME"
    """
    Encoded as RFC 3339 partial-time format string: 23:20:50.52
    """
    DATETIME = "DATETIME"
    """
    Encoded as RFC 3339 full-date "T" partial-time: 1985-04-12T23:20:50.52
    """
    INTERVAL = "INTERVAL"
    """
    Encoded as fully qualified 3 part: 0-5 15 2:30:45.6
    """
    GEOGRAPHY = "GEOGRAPHY"
    """
    Encoded as WKT
    """
    NUMERIC = "NUMERIC"
    """
    Encoded as a decimal string.
    """
    BIGNUMERIC = "BIGNUMERIC"
    """
    Encoded as a decimal string.
    """
    JSON = "JSON"
    """
    Encoded as a string.
    """
    ARRAY = "ARRAY"
    """
    Encoded as a list with types matching Type.array_type.
    """
    STRUCT = "STRUCT"
    """
    Encoded as a list with fields of type Type.struct_type[i]. List is used because a JSON object cannot have duplicate field names.
    """
    RANGE = "RANGE"
    """
    Encoded as a pair with types matching range_element_type. Pairs must begin with "[", end with ")", and be separated by ", ".
    """
