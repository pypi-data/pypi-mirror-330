# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GetManagementDnsZoneBindingResult',
    'AwaitableGetManagementDnsZoneBindingResult',
    'get_management_dns_zone_binding',
    'get_management_dns_zone_binding_output',
]

@pulumi.output_type
class GetManagementDnsZoneBindingResult:
    def __init__(__self__, create_time=None, description=None, name=None, state=None, uid=None, update_time=None, vmware_engine_network=None, vpc_network=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if uid and not isinstance(uid, str):
            raise TypeError("Expected argument 'uid' to be a str")
        pulumi.set(__self__, "uid", uid)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)
        if vmware_engine_network and not isinstance(vmware_engine_network, str):
            raise TypeError("Expected argument 'vmware_engine_network' to be a str")
        pulumi.set(__self__, "vmware_engine_network", vmware_engine_network)
        if vpc_network and not isinstance(vpc_network, str):
            raise TypeError("Expected argument 'vpc_network' to be a str")
        pulumi.set(__self__, "vpc_network", vpc_network)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Creation time of this resource.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        User-provided description for this resource.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The resource name of this binding. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The state of the resource.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def uid(self) -> str:
        """
        System-generated unique identifier for the resource.
        """
        return pulumi.get(self, "uid")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        Last update time of this resource.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="vmwareEngineNetwork")
    def vmware_engine_network(self) -> str:
        """
        Network to bind is a VMware Engine network. Specify the name in the following form for VMware engine network: `projects/{project}/locations/global/vmwareEngineNetworks/{vmware_engine_network_id}`. `{project}` can either be a project number or a project ID.
        """
        return pulumi.get(self, "vmware_engine_network")

    @property
    @pulumi.getter(name="vpcNetwork")
    def vpc_network(self) -> str:
        """
        Network to bind is a standard consumer VPC. Specify the name in the following form for consumer VPC network: `projects/{project}/global/networks/{network_id}`. `{project}` can either be a project number or a project ID.
        """
        return pulumi.get(self, "vpc_network")


class AwaitableGetManagementDnsZoneBindingResult(GetManagementDnsZoneBindingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetManagementDnsZoneBindingResult(
            create_time=self.create_time,
            description=self.description,
            name=self.name,
            state=self.state,
            uid=self.uid,
            update_time=self.update_time,
            vmware_engine_network=self.vmware_engine_network,
            vpc_network=self.vpc_network)


def get_management_dns_zone_binding(location: Optional[str] = None,
                                    management_dns_zone_binding_id: Optional[str] = None,
                                    private_cloud_id: Optional[str] = None,
                                    project: Optional[str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetManagementDnsZoneBindingResult:
    """
    Retrieves a 'ManagementDnsZoneBinding' resource by its resource name.
    """
    __args__ = dict()
    __args__['location'] = location
    __args__['managementDnsZoneBindingId'] = management_dns_zone_binding_id
    __args__['privateCloudId'] = private_cloud_id
    __args__['project'] = project
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:vmwareengine/v1:getManagementDnsZoneBinding', __args__, opts=opts, typ=GetManagementDnsZoneBindingResult).value

    return AwaitableGetManagementDnsZoneBindingResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        description=pulumi.get(__ret__, 'description'),
        name=pulumi.get(__ret__, 'name'),
        state=pulumi.get(__ret__, 'state'),
        uid=pulumi.get(__ret__, 'uid'),
        update_time=pulumi.get(__ret__, 'update_time'),
        vmware_engine_network=pulumi.get(__ret__, 'vmware_engine_network'),
        vpc_network=pulumi.get(__ret__, 'vpc_network'))


@_utilities.lift_output_func(get_management_dns_zone_binding)
def get_management_dns_zone_binding_output(location: Optional[pulumi.Input[str]] = None,
                                           management_dns_zone_binding_id: Optional[pulumi.Input[str]] = None,
                                           private_cloud_id: Optional[pulumi.Input[str]] = None,
                                           project: Optional[pulumi.Input[Optional[str]]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetManagementDnsZoneBindingResult]:
    """
    Retrieves a 'ManagementDnsZoneBinding' resource by its resource name.
    """
    ...
