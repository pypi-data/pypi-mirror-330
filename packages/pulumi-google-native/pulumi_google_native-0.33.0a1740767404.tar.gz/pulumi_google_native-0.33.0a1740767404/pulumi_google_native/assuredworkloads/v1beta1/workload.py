# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['WorkloadArgs', 'Workload']

@pulumi.input_type
class WorkloadArgs:
    def __init__(__self__, *,
                 compliance_regime: pulumi.Input['WorkloadComplianceRegime'],
                 display_name: pulumi.Input[str],
                 organization_id: pulumi.Input[str],
                 billing_account: Optional[pulumi.Input[str]] = None,
                 cjis_settings: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']] = None,
                 enable_sovereign_controls: Optional[pulumi.Input[bool]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 fedramp_high_settings: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']] = None,
                 fedramp_moderate_settings: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']] = None,
                 il4_settings: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']] = None,
                 kms_settings: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 partner: Optional[pulumi.Input['WorkloadPartner']] = None,
                 partner_permissions: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']] = None,
                 provisioned_resources_parent: Optional[pulumi.Input[str]] = None,
                 resource_settings: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]] = None,
                 violation_notifications_enabled: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a Workload resource.
        :param pulumi.Input['WorkloadComplianceRegime'] compliance_regime: Immutable. Compliance Regime associated with this workload.
        :param pulumi.Input[str] display_name: The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
        :param pulumi.Input[str] billing_account: Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs'] cjis_settings: Input only. Immutable. Settings specific to resources needed for CJIS.
        :param pulumi.Input[bool] enable_sovereign_controls: Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers.
        :param pulumi.Input[str] etag: Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
        :param pulumi.Input[str] external_id: Optional. A identifier associated with the workload and underlying projects which allows for the break down of billing costs for a workload. The value provided for the identifier will add a label to the workload and contained projects with the identifier as the value.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs'] fedramp_high_settings: Input only. Immutable. Settings specific to resources needed for FedRAMP High.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs'] fedramp_moderate_settings: Input only. Immutable. Settings specific to resources needed for FedRAMP Moderate.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs'] il4_settings: Input only. Immutable. Settings specific to resources needed for IL4.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs'] kms_settings: Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: Optional. Labels applied to the workload.
        :param pulumi.Input[str] name: Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
        :param pulumi.Input['WorkloadPartner'] partner: Optional. Partner regime associated with this workload.
        :param pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs'] partner_permissions: Optional. Permissions granted to the AW Partner SA account for the customer workload
        :param pulumi.Input[str] provisioned_resources_parent: Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}
        :param pulumi.Input[Sequence[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]] resource_settings: Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional.
        :param pulumi.Input[bool] violation_notifications_enabled: Optional. Indicates whether the e-mail notification for a violation is enabled for a workload. This value will be by default True, and if not present will be considered as true. This should only be updated via updateWorkload call. Any Changes to this field during the createWorkload call will not be honored. This will always be true while creating the workload.
        """
        pulumi.set(__self__, "compliance_regime", compliance_regime)
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "organization_id", organization_id)
        if billing_account is not None:
            pulumi.set(__self__, "billing_account", billing_account)
        if cjis_settings is not None:
            pulumi.set(__self__, "cjis_settings", cjis_settings)
        if enable_sovereign_controls is not None:
            pulumi.set(__self__, "enable_sovereign_controls", enable_sovereign_controls)
        if etag is not None:
            pulumi.set(__self__, "etag", etag)
        if external_id is not None:
            pulumi.set(__self__, "external_id", external_id)
        if fedramp_high_settings is not None:
            pulumi.set(__self__, "fedramp_high_settings", fedramp_high_settings)
        if fedramp_moderate_settings is not None:
            pulumi.set(__self__, "fedramp_moderate_settings", fedramp_moderate_settings)
        if il4_settings is not None:
            pulumi.set(__self__, "il4_settings", il4_settings)
        if kms_settings is not None:
            warnings.warn("""Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.""", DeprecationWarning)
            pulumi.log.warn("""kms_settings is deprecated: Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.""")
        if kms_settings is not None:
            pulumi.set(__self__, "kms_settings", kms_settings)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if partner is not None:
            pulumi.set(__self__, "partner", partner)
        if partner_permissions is not None:
            pulumi.set(__self__, "partner_permissions", partner_permissions)
        if provisioned_resources_parent is not None:
            pulumi.set(__self__, "provisioned_resources_parent", provisioned_resources_parent)
        if resource_settings is not None:
            pulumi.set(__self__, "resource_settings", resource_settings)
        if violation_notifications_enabled is not None:
            pulumi.set(__self__, "violation_notifications_enabled", violation_notifications_enabled)

    @property
    @pulumi.getter(name="complianceRegime")
    def compliance_regime(self) -> pulumi.Input['WorkloadComplianceRegime']:
        """
        Immutable. Compliance Regime associated with this workload.
        """
        return pulumi.get(self, "compliance_regime")

    @compliance_regime.setter
    def compliance_regime(self, value: pulumi.Input['WorkloadComplianceRegime']):
        pulumi.set(self, "compliance_regime", value)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Input[str]:
        """
        The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_id", value)

    @property
    @pulumi.getter(name="billingAccount")
    def billing_account(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
        """
        return pulumi.get(self, "billing_account")

    @billing_account.setter
    def billing_account(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "billing_account", value)

    @property
    @pulumi.getter(name="cjisSettings")
    def cjis_settings(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']]:
        """
        Input only. Immutable. Settings specific to resources needed for CJIS.
        """
        return pulumi.get(self, "cjis_settings")

    @cjis_settings.setter
    def cjis_settings(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']]):
        pulumi.set(self, "cjis_settings", value)

    @property
    @pulumi.getter(name="enableSovereignControls")
    def enable_sovereign_controls(self) -> Optional[pulumi.Input[bool]]:
        """
        Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers.
        """
        return pulumi.get(self, "enable_sovereign_controls")

    @enable_sovereign_controls.setter
    def enable_sovereign_controls(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_sovereign_controls", value)

    @property
    @pulumi.getter
    def etag(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
        """
        return pulumi.get(self, "etag")

    @etag.setter
    def etag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "etag", value)

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. A identifier associated with the workload and underlying projects which allows for the break down of billing costs for a workload. The value provided for the identifier will add a label to the workload and contained projects with the identifier as the value.
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external_id", value)

    @property
    @pulumi.getter(name="fedrampHighSettings")
    def fedramp_high_settings(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']]:
        """
        Input only. Immutable. Settings specific to resources needed for FedRAMP High.
        """
        return pulumi.get(self, "fedramp_high_settings")

    @fedramp_high_settings.setter
    def fedramp_high_settings(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']]):
        pulumi.set(self, "fedramp_high_settings", value)

    @property
    @pulumi.getter(name="fedrampModerateSettings")
    def fedramp_moderate_settings(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']]:
        """
        Input only. Immutable. Settings specific to resources needed for FedRAMP Moderate.
        """
        return pulumi.get(self, "fedramp_moderate_settings")

    @fedramp_moderate_settings.setter
    def fedramp_moderate_settings(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']]):
        pulumi.set(self, "fedramp_moderate_settings", value)

    @property
    @pulumi.getter(name="il4Settings")
    def il4_settings(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']]:
        """
        Input only. Immutable. Settings specific to resources needed for IL4.
        """
        return pulumi.get(self, "il4_settings")

    @il4_settings.setter
    def il4_settings(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']]):
        pulumi.set(self, "il4_settings", value)

    @property
    @pulumi.getter(name="kmsSettings")
    @_utilities.deprecated("""Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.""")
    def kms_settings(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']]:
        """
        Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.
        """
        return pulumi.get(self, "kms_settings")

    @kms_settings.setter
    def kms_settings(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']]):
        pulumi.set(self, "kms_settings", value)

    @property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Optional. Labels applied to the workload.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "labels", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def partner(self) -> Optional[pulumi.Input['WorkloadPartner']]:
        """
        Optional. Partner regime associated with this workload.
        """
        return pulumi.get(self, "partner")

    @partner.setter
    def partner(self, value: Optional[pulumi.Input['WorkloadPartner']]):
        pulumi.set(self, "partner", value)

    @property
    @pulumi.getter(name="partnerPermissions")
    def partner_permissions(self) -> Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']]:
        """
        Optional. Permissions granted to the AW Partner SA account for the customer workload
        """
        return pulumi.get(self, "partner_permissions")

    @partner_permissions.setter
    def partner_permissions(self, value: Optional[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']]):
        pulumi.set(self, "partner_permissions", value)

    @property
    @pulumi.getter(name="provisionedResourcesParent")
    def provisioned_resources_parent(self) -> Optional[pulumi.Input[str]]:
        """
        Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}
        """
        return pulumi.get(self, "provisioned_resources_parent")

    @provisioned_resources_parent.setter
    def provisioned_resources_parent(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "provisioned_resources_parent", value)

    @property
    @pulumi.getter(name="resourceSettings")
    def resource_settings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]]:
        """
        Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional.
        """
        return pulumi.get(self, "resource_settings")

    @resource_settings.setter
    def resource_settings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]]):
        pulumi.set(self, "resource_settings", value)

    @property
    @pulumi.getter(name="violationNotificationsEnabled")
    def violation_notifications_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Optional. Indicates whether the e-mail notification for a violation is enabled for a workload. This value will be by default True, and if not present will be considered as true. This should only be updated via updateWorkload call. Any Changes to this field during the createWorkload call will not be honored. This will always be true while creating the workload.
        """
        return pulumi.get(self, "violation_notifications_enabled")

    @violation_notifications_enabled.setter
    def violation_notifications_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "violation_notifications_enabled", value)


class Workload(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_account: Optional[pulumi.Input[str]] = None,
                 cjis_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']]] = None,
                 compliance_regime: Optional[pulumi.Input['WorkloadComplianceRegime']] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 enable_sovereign_controls: Optional[pulumi.Input[bool]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 fedramp_high_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']]] = None,
                 fedramp_moderate_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']]] = None,
                 il4_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']]] = None,
                 kms_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 partner: Optional[pulumi.Input['WorkloadPartner']] = None,
                 partner_permissions: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']]] = None,
                 provisioned_resources_parent: Optional[pulumi.Input[str]] = None,
                 resource_settings: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]]] = None,
                 violation_notifications_enabled: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Creates Assured Workload.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] billing_account: Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']] cjis_settings: Input only. Immutable. Settings specific to resources needed for CJIS.
        :param pulumi.Input['WorkloadComplianceRegime'] compliance_regime: Immutable. Compliance Regime associated with this workload.
        :param pulumi.Input[str] display_name: The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
        :param pulumi.Input[bool] enable_sovereign_controls: Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers.
        :param pulumi.Input[str] etag: Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
        :param pulumi.Input[str] external_id: Optional. A identifier associated with the workload and underlying projects which allows for the break down of billing costs for a workload. The value provided for the identifier will add a label to the workload and contained projects with the identifier as the value.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']] fedramp_high_settings: Input only. Immutable. Settings specific to resources needed for FedRAMP High.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']] fedramp_moderate_settings: Input only. Immutable. Settings specific to resources needed for FedRAMP Moderate.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']] il4_settings: Input only. Immutable. Settings specific to resources needed for IL4.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']] kms_settings: Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: Optional. Labels applied to the workload.
        :param pulumi.Input[str] name: Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
        :param pulumi.Input['WorkloadPartner'] partner: Optional. Partner regime associated with this workload.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']] partner_permissions: Optional. Permissions granted to the AW Partner SA account for the customer workload
        :param pulumi.Input[str] provisioned_resources_parent: Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]] resource_settings: Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional.
        :param pulumi.Input[bool] violation_notifications_enabled: Optional. Indicates whether the e-mail notification for a violation is enabled for a workload. This value will be by default True, and if not present will be considered as true. This should only be updated via updateWorkload call. Any Changes to this field during the createWorkload call will not be honored. This will always be true while creating the workload.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: WorkloadArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Creates Assured Workload.

        :param str resource_name: The name of the resource.
        :param WorkloadArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(WorkloadArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 billing_account: Optional[pulumi.Input[str]] = None,
                 cjis_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsArgs']]] = None,
                 compliance_regime: Optional[pulumi.Input['WorkloadComplianceRegime']] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 enable_sovereign_controls: Optional[pulumi.Input[bool]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 fedramp_high_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsArgs']]] = None,
                 fedramp_moderate_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsArgs']]] = None,
                 il4_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsArgs']]] = None,
                 kms_settings: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsArgs']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 partner: Optional[pulumi.Input['WorkloadPartner']] = None,
                 partner_permissions: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsArgs']]] = None,
                 provisioned_resources_parent: Optional[pulumi.Input[str]] = None,
                 resource_settings: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsArgs']]]]] = None,
                 violation_notifications_enabled: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = WorkloadArgs.__new__(WorkloadArgs)

            __props__.__dict__["billing_account"] = billing_account
            __props__.__dict__["cjis_settings"] = cjis_settings
            if compliance_regime is None and not opts.urn:
                raise TypeError("Missing required property 'compliance_regime'")
            __props__.__dict__["compliance_regime"] = compliance_regime
            if display_name is None and not opts.urn:
                raise TypeError("Missing required property 'display_name'")
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["enable_sovereign_controls"] = enable_sovereign_controls
            __props__.__dict__["etag"] = etag
            __props__.__dict__["external_id"] = external_id
            __props__.__dict__["fedramp_high_settings"] = fedramp_high_settings
            __props__.__dict__["fedramp_moderate_settings"] = fedramp_moderate_settings
            __props__.__dict__["il4_settings"] = il4_settings
            __props__.__dict__["kms_settings"] = kms_settings
            __props__.__dict__["labels"] = labels
            __props__.__dict__["location"] = location
            __props__.__dict__["name"] = name
            if organization_id is None and not opts.urn:
                raise TypeError("Missing required property 'organization_id'")
            __props__.__dict__["organization_id"] = organization_id
            __props__.__dict__["partner"] = partner
            __props__.__dict__["partner_permissions"] = partner_permissions
            __props__.__dict__["provisioned_resources_parent"] = provisioned_resources_parent
            __props__.__dict__["resource_settings"] = resource_settings
            __props__.__dict__["violation_notifications_enabled"] = violation_notifications_enabled
            __props__.__dict__["compliance_status"] = None
            __props__.__dict__["compliant_but_disallowed_services"] = None
            __props__.__dict__["create_time"] = None
            __props__.__dict__["ekm_provisioning_response"] = None
            __props__.__dict__["kaj_enrollment_state"] = None
            __props__.__dict__["resource_monitoring_enabled"] = None
            __props__.__dict__["resources"] = None
            __props__.__dict__["saa_enrollment_response"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["location", "organizationId"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(Workload, __self__).__init__(
            'google-native:assuredworkloads/v1beta1:Workload',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Workload':
        """
        Get an existing Workload resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = WorkloadArgs.__new__(WorkloadArgs)

        __props__.__dict__["billing_account"] = None
        __props__.__dict__["cjis_settings"] = None
        __props__.__dict__["compliance_regime"] = None
        __props__.__dict__["compliance_status"] = None
        __props__.__dict__["compliant_but_disallowed_services"] = None
        __props__.__dict__["create_time"] = None
        __props__.__dict__["display_name"] = None
        __props__.__dict__["ekm_provisioning_response"] = None
        __props__.__dict__["enable_sovereign_controls"] = None
        __props__.__dict__["etag"] = None
        __props__.__dict__["external_id"] = None
        __props__.__dict__["fedramp_high_settings"] = None
        __props__.__dict__["fedramp_moderate_settings"] = None
        __props__.__dict__["il4_settings"] = None
        __props__.__dict__["kaj_enrollment_state"] = None
        __props__.__dict__["kms_settings"] = None
        __props__.__dict__["labels"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["organization_id"] = None
        __props__.__dict__["partner"] = None
        __props__.__dict__["partner_permissions"] = None
        __props__.__dict__["provisioned_resources_parent"] = None
        __props__.__dict__["resource_monitoring_enabled"] = None
        __props__.__dict__["resource_settings"] = None
        __props__.__dict__["resources"] = None
        __props__.__dict__["saa_enrollment_response"] = None
        __props__.__dict__["violation_notifications_enabled"] = None
        return Workload(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="billingAccount")
    def billing_account(self) -> pulumi.Output[str]:
        """
        Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`.
        """
        return pulumi.get(self, "billing_account")

    @property
    @pulumi.getter(name="cjisSettings")
    def cjis_settings(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadCJISSettingsResponse']:
        """
        Input only. Immutable. Settings specific to resources needed for CJIS.
        """
        return pulumi.get(self, "cjis_settings")

    @property
    @pulumi.getter(name="complianceRegime")
    def compliance_regime(self) -> pulumi.Output[str]:
        """
        Immutable. Compliance Regime associated with this workload.
        """
        return pulumi.get(self, "compliance_regime")

    @property
    @pulumi.getter(name="complianceStatus")
    def compliance_status(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadComplianceStatusResponse']:
        """
        Count of active Violations in the Workload.
        """
        return pulumi.get(self, "compliance_status")

    @property
    @pulumi.getter(name="compliantButDisallowedServices")
    def compliant_but_disallowed_services(self) -> pulumi.Output[Sequence[str]]:
        """
        Urls for services which are compliant for this Assured Workload, but which are currently disallowed by the ResourceUsageRestriction org policy. Invoke RestrictAllowedResources endpoint to allow your project developers to use these services in their environment.
        """
        return pulumi.get(self, "compliant_but_disallowed_services")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        Immutable. The Workload creation timestamp.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[str]:
        """
        The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="ekmProvisioningResponse")
    def ekm_provisioning_response(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadEkmProvisioningResponseResponse']:
        """
        Represents the Ekm Provisioning State of the given workload.
        """
        return pulumi.get(self, "ekm_provisioning_response")

    @property
    @pulumi.getter(name="enableSovereignControls")
    def enable_sovereign_controls(self) -> pulumi.Output[bool]:
        """
        Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers.
        """
        return pulumi.get(self, "enable_sovereign_controls")

    @property
    @pulumi.getter
    def etag(self) -> pulumi.Output[str]:
        """
        Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations.
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> pulumi.Output[Optional[str]]:
        """
        Optional. A identifier associated with the workload and underlying projects which allows for the break down of billing costs for a workload. The value provided for the identifier will add a label to the workload and contained projects with the identifier as the value.
        """
        return pulumi.get(self, "external_id")

    @property
    @pulumi.getter(name="fedrampHighSettings")
    def fedramp_high_settings(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampHighSettingsResponse']:
        """
        Input only. Immutable. Settings specific to resources needed for FedRAMP High.
        """
        return pulumi.get(self, "fedramp_high_settings")

    @property
    @pulumi.getter(name="fedrampModerateSettings")
    def fedramp_moderate_settings(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadFedrampModerateSettingsResponse']:
        """
        Input only. Immutable. Settings specific to resources needed for FedRAMP Moderate.
        """
        return pulumi.get(self, "fedramp_moderate_settings")

    @property
    @pulumi.getter(name="il4Settings")
    def il4_settings(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadIL4SettingsResponse']:
        """
        Input only. Immutable. Settings specific to resources needed for IL4.
        """
        return pulumi.get(self, "il4_settings")

    @property
    @pulumi.getter(name="kajEnrollmentState")
    def kaj_enrollment_state(self) -> pulumi.Output[str]:
        """
        Represents the KAJ enrollment state of the given workload.
        """
        return pulumi.get(self, "kaj_enrollment_state")

    @property
    @pulumi.getter(name="kmsSettings")
    @_utilities.deprecated("""Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.""")
    def kms_settings(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadKMSSettingsResponse']:
        """
        Input only. Settings used to create a CMEK crypto key. When set, a project with a KMS CMEK key is provisioned. This field is deprecated as of Feb 28, 2022. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field.
        """
        return pulumi.get(self, "kms_settings")

    @property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Mapping[str, str]]:
        """
        Optional. Labels applied to the workload.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter
    def partner(self) -> pulumi.Output[str]:
        """
        Optional. Partner regime associated with this workload.
        """
        return pulumi.get(self, "partner")

    @property
    @pulumi.getter(name="partnerPermissions")
    def partner_permissions(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadPartnerPermissionsResponse']:
        """
        Optional. Permissions granted to the AW Partner SA account for the customer workload
        """
        return pulumi.get(self, "partner_permissions")

    @property
    @pulumi.getter(name="provisionedResourcesParent")
    def provisioned_resources_parent(self) -> pulumi.Output[str]:
        """
        Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}
        """
        return pulumi.get(self, "provisioned_resources_parent")

    @property
    @pulumi.getter(name="resourceMonitoringEnabled")
    def resource_monitoring_enabled(self) -> pulumi.Output[bool]:
        """
        Indicates whether resource monitoring is enabled for workload or not. It is true when Resource feed is subscribed to AWM topic and AWM Service Agent Role is binded to AW Service Account for resource Assured workload.
        """
        return pulumi.get(self, "resource_monitoring_enabled")

    @property
    @pulumi.getter(name="resourceSettings")
    def resource_settings(self) -> pulumi.Output[Sequence['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadResourceSettingsResponse']]:
        """
        Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional.
        """
        return pulumi.get(self, "resource_settings")

    @property
    @pulumi.getter
    def resources(self) -> pulumi.Output[Sequence['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadResourceInfoResponse']]:
        """
        The resources associated with this workload. These resources will be created when creating the workload. If any of the projects already exist, the workload creation will fail. Always read only.
        """
        return pulumi.get(self, "resources")

    @property
    @pulumi.getter(name="saaEnrollmentResponse")
    def saa_enrollment_response(self) -> pulumi.Output['outputs.GoogleCloudAssuredworkloadsV1beta1WorkloadSaaEnrollmentResponseResponse']:
        """
        Represents the SAA enrollment response of the given workload. SAA enrollment response is queried during GetWorkload call. In failure cases, user friendly error message is shown in SAA details page.
        """
        return pulumi.get(self, "saa_enrollment_response")

    @property
    @pulumi.getter(name="violationNotificationsEnabled")
    def violation_notifications_enabled(self) -> pulumi.Output[bool]:
        """
        Optional. Indicates whether the e-mail notification for a violation is enabled for a workload. This value will be by default True, and if not present will be considered as true. This should only be updated via updateWorkload call. Any Changes to this field during the createWorkload call will not be honored. This will always be true while creating the workload.
        """
        return pulumi.get(self, "violation_notifications_enabled")

