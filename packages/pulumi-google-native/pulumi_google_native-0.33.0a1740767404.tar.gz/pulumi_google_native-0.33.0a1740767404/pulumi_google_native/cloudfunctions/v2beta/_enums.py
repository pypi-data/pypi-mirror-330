# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AuditLogConfigLogType',
    'BuildConfigDockerRegistry',
    'EventTriggerRetryPolicy',
    'FunctionEnvironment',
    'ServiceConfigIngressSettings',
    'ServiceConfigSecurityLevel',
    'ServiceConfigVpcConnectorEgressSettings',
]


class AuditLogConfigLogType(str, Enum):
    """
    The log type that this config enables.
    """
    LOG_TYPE_UNSPECIFIED = "LOG_TYPE_UNSPECIFIED"
    """
    Default case. Should never be this.
    """
    ADMIN_READ = "ADMIN_READ"
    """
    Admin reads. Example: CloudIAM getIamPolicy
    """
    DATA_WRITE = "DATA_WRITE"
    """
    Data writes. Example: CloudSQL Users create
    """
    DATA_READ = "DATA_READ"
    """
    Data reads. Example: CloudSQL Users list
    """


class BuildConfigDockerRegistry(str, Enum):
    """
    Docker Registry to use for this deployment. This configuration is only applicable to 1st Gen functions, 2nd Gen functions can only use Artifact Registry. If `docker_repository` field is specified, this field will be automatically set as `ARTIFACT_REGISTRY`. If unspecified, it currently defaults to `CONTAINER_REGISTRY`. This field may be overridden by the backend for eligible deployments.
    """
    DOCKER_REGISTRY_UNSPECIFIED = "DOCKER_REGISTRY_UNSPECIFIED"
    """
    Unspecified.
    """
    CONTAINER_REGISTRY = "CONTAINER_REGISTRY"
    """
    Docker images will be stored in multi-regional Container Registry repositories named `gcf`.
    """
    ARTIFACT_REGISTRY = "ARTIFACT_REGISTRY"
    """
    Docker images will be stored in regional Artifact Registry repositories. By default, GCF will create and use repositories named `gcf-artifacts` in every region in which a function is deployed. But the repository to use can also be specified by the user using the `docker_repository` field.
    """


class EventTriggerRetryPolicy(str, Enum):
    """
    Optional. If unset, then defaults to ignoring failures (i.e. not retrying them).
    """
    RETRY_POLICY_UNSPECIFIED = "RETRY_POLICY_UNSPECIFIED"
    """
    Not specified.
    """
    RETRY_POLICY_DO_NOT_RETRY = "RETRY_POLICY_DO_NOT_RETRY"
    """
    Do not retry.
    """
    RETRY_POLICY_RETRY = "RETRY_POLICY_RETRY"
    """
    Retry on any failure, retry up to 7 days with an exponential backoff (capped at 10 seconds).
    """


class FunctionEnvironment(str, Enum):
    """
    Describe whether the function is 1st Gen or 2nd Gen.
    """
    ENVIRONMENT_UNSPECIFIED = "ENVIRONMENT_UNSPECIFIED"
    """
    Unspecified
    """
    GEN1 = "GEN_1"
    """
    Gen 1
    """
    GEN2 = "GEN_2"
    """
    Gen 2
    """


class ServiceConfigIngressSettings(str, Enum):
    """
    The ingress settings for the function, controlling what traffic can reach it.
    """
    INGRESS_SETTINGS_UNSPECIFIED = "INGRESS_SETTINGS_UNSPECIFIED"
    """
    Unspecified.
    """
    ALLOW_ALL = "ALLOW_ALL"
    """
    Allow HTTP traffic from public and private sources.
    """
    ALLOW_INTERNAL_ONLY = "ALLOW_INTERNAL_ONLY"
    """
    Allow HTTP traffic from only private VPC sources.
    """
    ALLOW_INTERNAL_AND_GCLB = "ALLOW_INTERNAL_AND_GCLB"
    """
    Allow HTTP traffic from private VPC sources and through GCLB.
    """


class ServiceConfigSecurityLevel(str, Enum):
    """
    Security level configure whether the function only accepts https. This configuration is only applicable to 1st Gen functions with Http trigger. By default https is optional for 1st Gen functions; 2nd Gen functions are https ONLY.
    """
    SECURITY_LEVEL_UNSPECIFIED = "SECURITY_LEVEL_UNSPECIFIED"
    """
    Unspecified.
    """
    SECURE_ALWAYS = "SECURE_ALWAYS"
    """
    Requests for a URL that match this handler that do not use HTTPS are automatically redirected to the HTTPS URL with the same path. Query parameters are reserved for the redirect.
    """
    SECURE_OPTIONAL = "SECURE_OPTIONAL"
    """
    Both HTTP and HTTPS requests with URLs that match the handler succeed without redirects. The application can examine the request to determine which protocol was used and respond accordingly.
    """


class ServiceConfigVpcConnectorEgressSettings(str, Enum):
    """
    The egress settings for the connector, controlling what traffic is diverted through it.
    """
    VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"
    """
    Unspecified.
    """
    PRIVATE_RANGES_ONLY = "PRIVATE_RANGES_ONLY"
    """
    Use the VPC Access Connector only for private IP space from RFC1918.
    """
    ALL_TRAFFIC = "ALL_TRAFFIC"
    """
    Force the use of VPC Access Connector for all egress traffic from the function.
    """
