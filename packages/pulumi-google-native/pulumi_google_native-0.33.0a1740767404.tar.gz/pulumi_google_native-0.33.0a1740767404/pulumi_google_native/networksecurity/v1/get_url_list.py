# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'GetUrlListResult',
    'AwaitableGetUrlListResult',
    'get_url_list',
    'get_url_list_output',
]

@pulumi.output_type
class GetUrlListResult:
    def __init__(__self__, create_time=None, description=None, name=None, update_time=None, values=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Time when the security policy was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Optional. Free-text description of the resource.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the resource provided by the user. Name is of the form projects/{project}/locations/{location}/urlLists/{url_list} url_list should match the pattern:(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        Time when the security policy was updated.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        FQDNs and URLs.
        """
        return pulumi.get(self, "values")


class AwaitableGetUrlListResult(GetUrlListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUrlListResult(
            create_time=self.create_time,
            description=self.description,
            name=self.name,
            update_time=self.update_time,
            values=self.values)


def get_url_list(location: Optional[str] = None,
                 project: Optional[str] = None,
                 url_list_id: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUrlListResult:
    """
    Gets details of a single UrlList.
    """
    __args__ = dict()
    __args__['location'] = location
    __args__['project'] = project
    __args__['urlListId'] = url_list_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('google-native:networksecurity/v1:getUrlList', __args__, opts=opts, typ=GetUrlListResult).value

    return AwaitableGetUrlListResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        description=pulumi.get(__ret__, 'description'),
        name=pulumi.get(__ret__, 'name'),
        update_time=pulumi.get(__ret__, 'update_time'),
        values=pulumi.get(__ret__, 'values'))


@_utilities.lift_output_func(get_url_list)
def get_url_list_output(location: Optional[pulumi.Input[str]] = None,
                        project: Optional[pulumi.Input[Optional[str]]] = None,
                        url_list_id: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUrlListResult]:
    """
    Gets details of a single UrlList.
    """
    ...
