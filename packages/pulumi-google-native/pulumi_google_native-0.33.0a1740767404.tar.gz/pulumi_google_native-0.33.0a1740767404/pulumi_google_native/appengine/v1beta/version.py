# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['VersionArgs', 'Version']

@pulumi.input_type
class VersionArgs:
    def __init__(__self__, *,
                 app_id: pulumi.Input[str],
                 service_id: pulumi.Input[str],
                 api_config: Optional[pulumi.Input['ApiConfigHandlerArgs']] = None,
                 app_engine_apis: Optional[pulumi.Input[bool]] = None,
                 automatic_scaling: Optional[pulumi.Input['AutomaticScalingArgs']] = None,
                 basic_scaling: Optional[pulumi.Input['BasicScalingArgs']] = None,
                 beta_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 build_env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 default_expiration: Optional[pulumi.Input[str]] = None,
                 deployment: Optional[pulumi.Input['DeploymentArgs']] = None,
                 endpoints_api_service: Optional[pulumi.Input['EndpointsApiServiceArgs']] = None,
                 entrypoint: Optional[pulumi.Input['EntrypointArgs']] = None,
                 env: Optional[pulumi.Input[str]] = None,
                 env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 error_handlers: Optional[pulumi.Input[Sequence[pulumi.Input['ErrorHandlerArgs']]]] = None,
                 flexible_runtime_settings: Optional[pulumi.Input['FlexibleRuntimeSettingsArgs']] = None,
                 generated_customer_metadata: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 handlers: Optional[pulumi.Input[Sequence[pulumi.Input['UrlMapArgs']]]] = None,
                 health_check: Optional[pulumi.Input['HealthCheckArgs']] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 inbound_services: Optional[pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]]] = None,
                 instance_class: Optional[pulumi.Input[str]] = None,
                 libraries: Optional[pulumi.Input[Sequence[pulumi.Input['LibraryArgs']]]] = None,
                 liveness_check: Optional[pulumi.Input['LivenessCheckArgs']] = None,
                 manual_scaling: Optional[pulumi.Input['ManualScalingArgs']] = None,
                 network: Optional[pulumi.Input['NetworkArgs']] = None,
                 nobuild_files_regex: Optional[pulumi.Input[str]] = None,
                 readiness_check: Optional[pulumi.Input['ReadinessCheckArgs']] = None,
                 resources: Optional[pulumi.Input['ResourcesArgs']] = None,
                 runtime: Optional[pulumi.Input[str]] = None,
                 runtime_api_version: Optional[pulumi.Input[str]] = None,
                 runtime_channel: Optional[pulumi.Input[str]] = None,
                 runtime_main_executable_path: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None,
                 serving_status: Optional[pulumi.Input['VersionServingStatus']] = None,
                 threadsafe: Optional[pulumi.Input[bool]] = None,
                 vm: Optional[pulumi.Input[bool]] = None,
                 vpc_access_connector: Optional[pulumi.Input['VpcAccessConnectorArgs']] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Version resource.
        :param pulumi.Input['ApiConfigHandlerArgs'] api_config: Serving configuration for Google Cloud Endpoints (https://cloud.google.com/endpoints).Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[bool] app_engine_apis: Allows App Engine second generation runtimes to access the legacy bundled services.
        :param pulumi.Input['AutomaticScalingArgs'] automatic_scaling: Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
        :param pulumi.Input['BasicScalingArgs'] basic_scaling: A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] beta_settings: Metadata settings that are supplied to this version to enable beta runtime features.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] build_env_variables: Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[str] default_expiration: Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['DeploymentArgs'] deployment: Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['EndpointsApiServiceArgs'] endpoints_api_service: Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
        :param pulumi.Input['EntrypointArgs'] entrypoint: The entrypoint for the application.
        :param pulumi.Input[str] env: App Engine execution environment for this version.Defaults to standard.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] env_variables: Environment variables available to the application.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[Sequence[pulumi.Input['ErrorHandlerArgs']]] error_handlers: Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['FlexibleRuntimeSettingsArgs'] flexible_runtime_settings: Settings for App Engine flexible runtimes.
        :param pulumi.Input[Mapping[str, Any]] generated_customer_metadata: Additional Google Generated Customer Metadata, this field won't be provided by default and can be requested by setting the IncludeExtraData field in GetVersionRequest
        :param pulumi.Input[Sequence[pulumi.Input['UrlMapArgs']]] handlers: An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['HealthCheckArgs'] health_check: Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] id: Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-".
        :param pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]] inbound_services: Before an application can receive email or XMPP messages, the application must be configured to enable the service.
        :param pulumi.Input[str] instance_class: Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
        :param pulumi.Input[Sequence[pulumi.Input['LibraryArgs']]] libraries: Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['LivenessCheckArgs'] liveness_check: Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instances
        :param pulumi.Input['ManualScalingArgs'] manual_scaling: A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as "backends".
        :param pulumi.Input['NetworkArgs'] network: Extra network settings. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] nobuild_files_regex: Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input['ReadinessCheckArgs'] readiness_check: Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
        :param pulumi.Input['ResourcesArgs'] resources: Machine resources for this version. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] runtime: Desired runtime. Example: python27.
        :param pulumi.Input[str] runtime_api_version: The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        :param pulumi.Input[str] runtime_channel: The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
        :param pulumi.Input[str] runtime_main_executable_path: The path or name of the app's main executable.
        :param pulumi.Input[str] service_account: The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
        :param pulumi.Input['VersionServingStatus'] serving_status: Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
        :param pulumi.Input[bool] threadsafe: Whether multiple requests can be dispatched to this version at once.
        :param pulumi.Input[bool] vm: Whether to deploy this version in a container on a virtual machine.
        :param pulumi.Input['VpcAccessConnectorArgs'] vpc_access_connector: Enables VPC connectivity for standard apps.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] zones: The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
        """
        pulumi.set(__self__, "app_id", app_id)
        pulumi.set(__self__, "service_id", service_id)
        if api_config is not None:
            pulumi.set(__self__, "api_config", api_config)
        if app_engine_apis is not None:
            pulumi.set(__self__, "app_engine_apis", app_engine_apis)
        if automatic_scaling is not None:
            pulumi.set(__self__, "automatic_scaling", automatic_scaling)
        if basic_scaling is not None:
            pulumi.set(__self__, "basic_scaling", basic_scaling)
        if beta_settings is not None:
            pulumi.set(__self__, "beta_settings", beta_settings)
        if build_env_variables is not None:
            pulumi.set(__self__, "build_env_variables", build_env_variables)
        if default_expiration is not None:
            pulumi.set(__self__, "default_expiration", default_expiration)
        if deployment is not None:
            pulumi.set(__self__, "deployment", deployment)
        if endpoints_api_service is not None:
            pulumi.set(__self__, "endpoints_api_service", endpoints_api_service)
        if entrypoint is not None:
            pulumi.set(__self__, "entrypoint", entrypoint)
        if env is not None:
            pulumi.set(__self__, "env", env)
        if env_variables is not None:
            pulumi.set(__self__, "env_variables", env_variables)
        if error_handlers is not None:
            pulumi.set(__self__, "error_handlers", error_handlers)
        if flexible_runtime_settings is not None:
            pulumi.set(__self__, "flexible_runtime_settings", flexible_runtime_settings)
        if generated_customer_metadata is not None:
            pulumi.set(__self__, "generated_customer_metadata", generated_customer_metadata)
        if handlers is not None:
            pulumi.set(__self__, "handlers", handlers)
        if health_check is not None:
            pulumi.set(__self__, "health_check", health_check)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if inbound_services is not None:
            pulumi.set(__self__, "inbound_services", inbound_services)
        if instance_class is not None:
            pulumi.set(__self__, "instance_class", instance_class)
        if libraries is not None:
            pulumi.set(__self__, "libraries", libraries)
        if liveness_check is not None:
            pulumi.set(__self__, "liveness_check", liveness_check)
        if manual_scaling is not None:
            pulumi.set(__self__, "manual_scaling", manual_scaling)
        if network is not None:
            pulumi.set(__self__, "network", network)
        if nobuild_files_regex is not None:
            pulumi.set(__self__, "nobuild_files_regex", nobuild_files_regex)
        if readiness_check is not None:
            pulumi.set(__self__, "readiness_check", readiness_check)
        if resources is not None:
            pulumi.set(__self__, "resources", resources)
        if runtime is not None:
            pulumi.set(__self__, "runtime", runtime)
        if runtime_api_version is not None:
            pulumi.set(__self__, "runtime_api_version", runtime_api_version)
        if runtime_channel is not None:
            pulumi.set(__self__, "runtime_channel", runtime_channel)
        if runtime_main_executable_path is not None:
            pulumi.set(__self__, "runtime_main_executable_path", runtime_main_executable_path)
        if service_account is not None:
            pulumi.set(__self__, "service_account", service_account)
        if serving_status is not None:
            pulumi.set(__self__, "serving_status", serving_status)
        if threadsafe is not None:
            pulumi.set(__self__, "threadsafe", threadsafe)
        if vm is not None:
            pulumi.set(__self__, "vm", vm)
        if vpc_access_connector is not None:
            pulumi.set(__self__, "vpc_access_connector", vpc_access_connector)
        if zones is not None:
            warnings.warn("""The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.""", DeprecationWarning)
            pulumi.log.warn("""zones is deprecated: The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.""")
        if zones is not None:
            pulumi.set(__self__, "zones", zones)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "service_id")

    @service_id.setter
    def service_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "service_id", value)

    @property
    @pulumi.getter(name="apiConfig")
    def api_config(self) -> Optional[pulumi.Input['ApiConfigHandlerArgs']]:
        """
        Serving configuration for Google Cloud Endpoints (https://cloud.google.com/endpoints).Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "api_config")

    @api_config.setter
    def api_config(self, value: Optional[pulumi.Input['ApiConfigHandlerArgs']]):
        pulumi.set(self, "api_config", value)

    @property
    @pulumi.getter(name="appEngineApis")
    def app_engine_apis(self) -> Optional[pulumi.Input[bool]]:
        """
        Allows App Engine second generation runtimes to access the legacy bundled services.
        """
        return pulumi.get(self, "app_engine_apis")

    @app_engine_apis.setter
    def app_engine_apis(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "app_engine_apis", value)

    @property
    @pulumi.getter(name="automaticScaling")
    def automatic_scaling(self) -> Optional[pulumi.Input['AutomaticScalingArgs']]:
        """
        Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
        """
        return pulumi.get(self, "automatic_scaling")

    @automatic_scaling.setter
    def automatic_scaling(self, value: Optional[pulumi.Input['AutomaticScalingArgs']]):
        pulumi.set(self, "automatic_scaling", value)

    @property
    @pulumi.getter(name="basicScaling")
    def basic_scaling(self) -> Optional[pulumi.Input['BasicScalingArgs']]:
        """
        A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
        """
        return pulumi.get(self, "basic_scaling")

    @basic_scaling.setter
    def basic_scaling(self, value: Optional[pulumi.Input['BasicScalingArgs']]):
        pulumi.set(self, "basic_scaling", value)

    @property
    @pulumi.getter(name="betaSettings")
    def beta_settings(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Metadata settings that are supplied to this version to enable beta runtime features.
        """
        return pulumi.get(self, "beta_settings")

    @beta_settings.setter
    def beta_settings(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "beta_settings", value)

    @property
    @pulumi.getter(name="buildEnvVariables")
    def build_env_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "build_env_variables")

    @build_env_variables.setter
    def build_env_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "build_env_variables", value)

    @property
    @pulumi.getter(name="defaultExpiration")
    def default_expiration(self) -> Optional[pulumi.Input[str]]:
        """
        Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "default_expiration")

    @default_expiration.setter
    def default_expiration(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_expiration", value)

    @property
    @pulumi.getter
    def deployment(self) -> Optional[pulumi.Input['DeploymentArgs']]:
        """
        Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "deployment")

    @deployment.setter
    def deployment(self, value: Optional[pulumi.Input['DeploymentArgs']]):
        pulumi.set(self, "deployment", value)

    @property
    @pulumi.getter(name="endpointsApiService")
    def endpoints_api_service(self) -> Optional[pulumi.Input['EndpointsApiServiceArgs']]:
        """
        Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
        """
        return pulumi.get(self, "endpoints_api_service")

    @endpoints_api_service.setter
    def endpoints_api_service(self, value: Optional[pulumi.Input['EndpointsApiServiceArgs']]):
        pulumi.set(self, "endpoints_api_service", value)

    @property
    @pulumi.getter
    def entrypoint(self) -> Optional[pulumi.Input['EntrypointArgs']]:
        """
        The entrypoint for the application.
        """
        return pulumi.get(self, "entrypoint")

    @entrypoint.setter
    def entrypoint(self, value: Optional[pulumi.Input['EntrypointArgs']]):
        pulumi.set(self, "entrypoint", value)

    @property
    @pulumi.getter
    def env(self) -> Optional[pulumi.Input[str]]:
        """
        App Engine execution environment for this version.Defaults to standard.
        """
        return pulumi.get(self, "env")

    @env.setter
    def env(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "env", value)

    @property
    @pulumi.getter(name="envVariables")
    def env_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Environment variables available to the application.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "env_variables")

    @env_variables.setter
    def env_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "env_variables", value)

    @property
    @pulumi.getter(name="errorHandlers")
    def error_handlers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ErrorHandlerArgs']]]]:
        """
        Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "error_handlers")

    @error_handlers.setter
    def error_handlers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ErrorHandlerArgs']]]]):
        pulumi.set(self, "error_handlers", value)

    @property
    @pulumi.getter(name="flexibleRuntimeSettings")
    def flexible_runtime_settings(self) -> Optional[pulumi.Input['FlexibleRuntimeSettingsArgs']]:
        """
        Settings for App Engine flexible runtimes.
        """
        return pulumi.get(self, "flexible_runtime_settings")

    @flexible_runtime_settings.setter
    def flexible_runtime_settings(self, value: Optional[pulumi.Input['FlexibleRuntimeSettingsArgs']]):
        pulumi.set(self, "flexible_runtime_settings", value)

    @property
    @pulumi.getter(name="generatedCustomerMetadata")
    def generated_customer_metadata(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Additional Google Generated Customer Metadata, this field won't be provided by default and can be requested by setting the IncludeExtraData field in GetVersionRequest
        """
        return pulumi.get(self, "generated_customer_metadata")

    @generated_customer_metadata.setter
    def generated_customer_metadata(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "generated_customer_metadata", value)

    @property
    @pulumi.getter
    def handlers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['UrlMapArgs']]]]:
        """
        An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "handlers")

    @handlers.setter
    def handlers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['UrlMapArgs']]]]):
        pulumi.set(self, "handlers", value)

    @property
    @pulumi.getter(name="healthCheck")
    def health_check(self) -> Optional[pulumi.Input['HealthCheckArgs']]:
        """
        Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "health_check")

    @health_check.setter
    def health_check(self, value: Optional[pulumi.Input['HealthCheckArgs']]):
        pulumi.set(self, "health_check", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[str]]:
        """
        Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-".
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="inboundServices")
    def inbound_services(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]]]:
        """
        Before an application can receive email or XMPP messages, the application must be configured to enable the service.
        """
        return pulumi.get(self, "inbound_services")

    @inbound_services.setter
    def inbound_services(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]]]):
        pulumi.set(self, "inbound_services", value)

    @property
    @pulumi.getter(name="instanceClass")
    def instance_class(self) -> Optional[pulumi.Input[str]]:
        """
        Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
        """
        return pulumi.get(self, "instance_class")

    @instance_class.setter
    def instance_class(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_class", value)

    @property
    @pulumi.getter
    def libraries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LibraryArgs']]]]:
        """
        Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "libraries")

    @libraries.setter
    def libraries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LibraryArgs']]]]):
        pulumi.set(self, "libraries", value)

    @property
    @pulumi.getter(name="livenessCheck")
    def liveness_check(self) -> Optional[pulumi.Input['LivenessCheckArgs']]:
        """
        Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instances
        """
        return pulumi.get(self, "liveness_check")

    @liveness_check.setter
    def liveness_check(self, value: Optional[pulumi.Input['LivenessCheckArgs']]):
        pulumi.set(self, "liveness_check", value)

    @property
    @pulumi.getter(name="manualScaling")
    def manual_scaling(self) -> Optional[pulumi.Input['ManualScalingArgs']]:
        """
        A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as "backends".
        """
        return pulumi.get(self, "manual_scaling")

    @manual_scaling.setter
    def manual_scaling(self, value: Optional[pulumi.Input['ManualScalingArgs']]):
        pulumi.set(self, "manual_scaling", value)

    @property
    @pulumi.getter
    def network(self) -> Optional[pulumi.Input['NetworkArgs']]:
        """
        Extra network settings. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "network")

    @network.setter
    def network(self, value: Optional[pulumi.Input['NetworkArgs']]):
        pulumi.set(self, "network", value)

    @property
    @pulumi.getter(name="nobuildFilesRegex")
    def nobuild_files_regex(self) -> Optional[pulumi.Input[str]]:
        """
        Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "nobuild_files_regex")

    @nobuild_files_regex.setter
    def nobuild_files_regex(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nobuild_files_regex", value)

    @property
    @pulumi.getter(name="readinessCheck")
    def readiness_check(self) -> Optional[pulumi.Input['ReadinessCheckArgs']]:
        """
        Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
        """
        return pulumi.get(self, "readiness_check")

    @readiness_check.setter
    def readiness_check(self, value: Optional[pulumi.Input['ReadinessCheckArgs']]):
        pulumi.set(self, "readiness_check", value)

    @property
    @pulumi.getter
    def resources(self) -> Optional[pulumi.Input['ResourcesArgs']]:
        """
        Machine resources for this version. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "resources")

    @resources.setter
    def resources(self, value: Optional[pulumi.Input['ResourcesArgs']]):
        pulumi.set(self, "resources", value)

    @property
    @pulumi.getter
    def runtime(self) -> Optional[pulumi.Input[str]]:
        """
        Desired runtime. Example: python27.
        """
        return pulumi.get(self, "runtime")

    @runtime.setter
    def runtime(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "runtime", value)

    @property
    @pulumi.getter(name="runtimeApiVersion")
    def runtime_api_version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        """
        return pulumi.get(self, "runtime_api_version")

    @runtime_api_version.setter
    def runtime_api_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "runtime_api_version", value)

    @property
    @pulumi.getter(name="runtimeChannel")
    def runtime_channel(self) -> Optional[pulumi.Input[str]]:
        """
        The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
        """
        return pulumi.get(self, "runtime_channel")

    @runtime_channel.setter
    def runtime_channel(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "runtime_channel", value)

    @property
    @pulumi.getter(name="runtimeMainExecutablePath")
    def runtime_main_executable_path(self) -> Optional[pulumi.Input[str]]:
        """
        The path or name of the app's main executable.
        """
        return pulumi.get(self, "runtime_main_executable_path")

    @runtime_main_executable_path.setter
    def runtime_main_executable_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "runtime_main_executable_path", value)

    @property
    @pulumi.getter(name="serviceAccount")
    def service_account(self) -> Optional[pulumi.Input[str]]:
        """
        The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
        """
        return pulumi.get(self, "service_account")

    @service_account.setter
    def service_account(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_account", value)

    @property
    @pulumi.getter(name="servingStatus")
    def serving_status(self) -> Optional[pulumi.Input['VersionServingStatus']]:
        """
        Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
        """
        return pulumi.get(self, "serving_status")

    @serving_status.setter
    def serving_status(self, value: Optional[pulumi.Input['VersionServingStatus']]):
        pulumi.set(self, "serving_status", value)

    @property
    @pulumi.getter
    def threadsafe(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether multiple requests can be dispatched to this version at once.
        """
        return pulumi.get(self, "threadsafe")

    @threadsafe.setter
    def threadsafe(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "threadsafe", value)

    @property
    @pulumi.getter
    def vm(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to deploy this version in a container on a virtual machine.
        """
        return pulumi.get(self, "vm")

    @vm.setter
    def vm(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "vm", value)

    @property
    @pulumi.getter(name="vpcAccessConnector")
    def vpc_access_connector(self) -> Optional[pulumi.Input['VpcAccessConnectorArgs']]:
        """
        Enables VPC connectivity for standard apps.
        """
        return pulumi.get(self, "vpc_access_connector")

    @vpc_access_connector.setter
    def vpc_access_connector(self, value: Optional[pulumi.Input['VpcAccessConnectorArgs']]):
        pulumi.set(self, "vpc_access_connector", value)

    @property
    @pulumi.getter
    @_utilities.deprecated("""The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.""")
    def zones(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
        """
        return pulumi.get(self, "zones")

    @zones.setter
    def zones(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "zones", value)


class Version(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_config: Optional[pulumi.Input[pulumi.InputType['ApiConfigHandlerArgs']]] = None,
                 app_engine_apis: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 automatic_scaling: Optional[pulumi.Input[pulumi.InputType['AutomaticScalingArgs']]] = None,
                 basic_scaling: Optional[pulumi.Input[pulumi.InputType['BasicScalingArgs']]] = None,
                 beta_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 build_env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 default_expiration: Optional[pulumi.Input[str]] = None,
                 deployment: Optional[pulumi.Input[pulumi.InputType['DeploymentArgs']]] = None,
                 endpoints_api_service: Optional[pulumi.Input[pulumi.InputType['EndpointsApiServiceArgs']]] = None,
                 entrypoint: Optional[pulumi.Input[pulumi.InputType['EntrypointArgs']]] = None,
                 env: Optional[pulumi.Input[str]] = None,
                 env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 error_handlers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ErrorHandlerArgs']]]]] = None,
                 flexible_runtime_settings: Optional[pulumi.Input[pulumi.InputType['FlexibleRuntimeSettingsArgs']]] = None,
                 generated_customer_metadata: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 handlers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UrlMapArgs']]]]] = None,
                 health_check: Optional[pulumi.Input[pulumi.InputType['HealthCheckArgs']]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 inbound_services: Optional[pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]]] = None,
                 instance_class: Optional[pulumi.Input[str]] = None,
                 libraries: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LibraryArgs']]]]] = None,
                 liveness_check: Optional[pulumi.Input[pulumi.InputType['LivenessCheckArgs']]] = None,
                 manual_scaling: Optional[pulumi.Input[pulumi.InputType['ManualScalingArgs']]] = None,
                 network: Optional[pulumi.Input[pulumi.InputType['NetworkArgs']]] = None,
                 nobuild_files_regex: Optional[pulumi.Input[str]] = None,
                 readiness_check: Optional[pulumi.Input[pulumi.InputType['ReadinessCheckArgs']]] = None,
                 resources: Optional[pulumi.Input[pulumi.InputType['ResourcesArgs']]] = None,
                 runtime: Optional[pulumi.Input[str]] = None,
                 runtime_api_version: Optional[pulumi.Input[str]] = None,
                 runtime_channel: Optional[pulumi.Input[str]] = None,
                 runtime_main_executable_path: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None,
                 service_id: Optional[pulumi.Input[str]] = None,
                 serving_status: Optional[pulumi.Input['VersionServingStatus']] = None,
                 threadsafe: Optional[pulumi.Input[bool]] = None,
                 vm: Optional[pulumi.Input[bool]] = None,
                 vpc_access_connector: Optional[pulumi.Input[pulumi.InputType['VpcAccessConnectorArgs']]] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Deploys code and resource files to a new version.
        Auto-naming is currently not supported for this resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ApiConfigHandlerArgs']] api_config: Serving configuration for Google Cloud Endpoints (https://cloud.google.com/endpoints).Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[bool] app_engine_apis: Allows App Engine second generation runtimes to access the legacy bundled services.
        :param pulumi.Input[pulumi.InputType['AutomaticScalingArgs']] automatic_scaling: Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
        :param pulumi.Input[pulumi.InputType['BasicScalingArgs']] basic_scaling: A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] beta_settings: Metadata settings that are supplied to this version to enable beta runtime features.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] build_env_variables: Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[str] default_expiration: Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['DeploymentArgs']] deployment: Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['EndpointsApiServiceArgs']] endpoints_api_service: Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
        :param pulumi.Input[pulumi.InputType['EntrypointArgs']] entrypoint: The entrypoint for the application.
        :param pulumi.Input[str] env: App Engine execution environment for this version.Defaults to standard.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] env_variables: Environment variables available to the application.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ErrorHandlerArgs']]]] error_handlers: Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['FlexibleRuntimeSettingsArgs']] flexible_runtime_settings: Settings for App Engine flexible runtimes.
        :param pulumi.Input[Mapping[str, Any]] generated_customer_metadata: Additional Google Generated Customer Metadata, this field won't be provided by default and can be requested by setting the IncludeExtraData field in GetVersionRequest
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UrlMapArgs']]]] handlers: An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['HealthCheckArgs']] health_check: Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] id: Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-".
        :param pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]] inbound_services: Before an application can receive email or XMPP messages, the application must be configured to enable the service.
        :param pulumi.Input[str] instance_class: Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LibraryArgs']]]] libraries: Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['LivenessCheckArgs']] liveness_check: Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instances
        :param pulumi.Input[pulumi.InputType['ManualScalingArgs']] manual_scaling: A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as "backends".
        :param pulumi.Input[pulumi.InputType['NetworkArgs']] network: Extra network settings. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] nobuild_files_regex: Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
        :param pulumi.Input[pulumi.InputType['ReadinessCheckArgs']] readiness_check: Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
        :param pulumi.Input[pulumi.InputType['ResourcesArgs']] resources: Machine resources for this version. Only applicable in the App Engine flexible environment.
        :param pulumi.Input[str] runtime: Desired runtime. Example: python27.
        :param pulumi.Input[str] runtime_api_version: The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        :param pulumi.Input[str] runtime_channel: The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
        :param pulumi.Input[str] runtime_main_executable_path: The path or name of the app's main executable.
        :param pulumi.Input[str] service_account: The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
        :param pulumi.Input['VersionServingStatus'] serving_status: Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
        :param pulumi.Input[bool] threadsafe: Whether multiple requests can be dispatched to this version at once.
        :param pulumi.Input[bool] vm: Whether to deploy this version in a container on a virtual machine.
        :param pulumi.Input[pulumi.InputType['VpcAccessConnectorArgs']] vpc_access_connector: Enables VPC connectivity for standard apps.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] zones: The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VersionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Deploys code and resource files to a new version.
        Auto-naming is currently not supported for this resource.

        :param str resource_name: The name of the resource.
        :param VersionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VersionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_config: Optional[pulumi.Input[pulumi.InputType['ApiConfigHandlerArgs']]] = None,
                 app_engine_apis: Optional[pulumi.Input[bool]] = None,
                 app_id: Optional[pulumi.Input[str]] = None,
                 automatic_scaling: Optional[pulumi.Input[pulumi.InputType['AutomaticScalingArgs']]] = None,
                 basic_scaling: Optional[pulumi.Input[pulumi.InputType['BasicScalingArgs']]] = None,
                 beta_settings: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 build_env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 default_expiration: Optional[pulumi.Input[str]] = None,
                 deployment: Optional[pulumi.Input[pulumi.InputType['DeploymentArgs']]] = None,
                 endpoints_api_service: Optional[pulumi.Input[pulumi.InputType['EndpointsApiServiceArgs']]] = None,
                 entrypoint: Optional[pulumi.Input[pulumi.InputType['EntrypointArgs']]] = None,
                 env: Optional[pulumi.Input[str]] = None,
                 env_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 error_handlers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ErrorHandlerArgs']]]]] = None,
                 flexible_runtime_settings: Optional[pulumi.Input[pulumi.InputType['FlexibleRuntimeSettingsArgs']]] = None,
                 generated_customer_metadata: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 handlers: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['UrlMapArgs']]]]] = None,
                 health_check: Optional[pulumi.Input[pulumi.InputType['HealthCheckArgs']]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 inbound_services: Optional[pulumi.Input[Sequence[pulumi.Input['VersionInboundServicesItem']]]] = None,
                 instance_class: Optional[pulumi.Input[str]] = None,
                 libraries: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LibraryArgs']]]]] = None,
                 liveness_check: Optional[pulumi.Input[pulumi.InputType['LivenessCheckArgs']]] = None,
                 manual_scaling: Optional[pulumi.Input[pulumi.InputType['ManualScalingArgs']]] = None,
                 network: Optional[pulumi.Input[pulumi.InputType['NetworkArgs']]] = None,
                 nobuild_files_regex: Optional[pulumi.Input[str]] = None,
                 readiness_check: Optional[pulumi.Input[pulumi.InputType['ReadinessCheckArgs']]] = None,
                 resources: Optional[pulumi.Input[pulumi.InputType['ResourcesArgs']]] = None,
                 runtime: Optional[pulumi.Input[str]] = None,
                 runtime_api_version: Optional[pulumi.Input[str]] = None,
                 runtime_channel: Optional[pulumi.Input[str]] = None,
                 runtime_main_executable_path: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None,
                 service_id: Optional[pulumi.Input[str]] = None,
                 serving_status: Optional[pulumi.Input['VersionServingStatus']] = None,
                 threadsafe: Optional[pulumi.Input[bool]] = None,
                 vm: Optional[pulumi.Input[bool]] = None,
                 vpc_access_connector: Optional[pulumi.Input[pulumi.InputType['VpcAccessConnectorArgs']]] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VersionArgs.__new__(VersionArgs)

            __props__.__dict__["api_config"] = api_config
            __props__.__dict__["app_engine_apis"] = app_engine_apis
            if app_id is None and not opts.urn:
                raise TypeError("Missing required property 'app_id'")
            __props__.__dict__["app_id"] = app_id
            __props__.__dict__["automatic_scaling"] = automatic_scaling
            __props__.__dict__["basic_scaling"] = basic_scaling
            __props__.__dict__["beta_settings"] = beta_settings
            __props__.__dict__["build_env_variables"] = build_env_variables
            __props__.__dict__["default_expiration"] = default_expiration
            __props__.__dict__["deployment"] = deployment
            __props__.__dict__["endpoints_api_service"] = endpoints_api_service
            __props__.__dict__["entrypoint"] = entrypoint
            __props__.__dict__["env"] = env
            __props__.__dict__["env_variables"] = env_variables
            __props__.__dict__["error_handlers"] = error_handlers
            __props__.__dict__["flexible_runtime_settings"] = flexible_runtime_settings
            __props__.__dict__["generated_customer_metadata"] = generated_customer_metadata
            __props__.__dict__["handlers"] = handlers
            __props__.__dict__["health_check"] = health_check
            __props__.__dict__["id"] = id
            __props__.__dict__["inbound_services"] = inbound_services
            __props__.__dict__["instance_class"] = instance_class
            __props__.__dict__["libraries"] = libraries
            __props__.__dict__["liveness_check"] = liveness_check
            __props__.__dict__["manual_scaling"] = manual_scaling
            __props__.__dict__["network"] = network
            __props__.__dict__["nobuild_files_regex"] = nobuild_files_regex
            __props__.__dict__["readiness_check"] = readiness_check
            __props__.__dict__["resources"] = resources
            __props__.__dict__["runtime"] = runtime
            __props__.__dict__["runtime_api_version"] = runtime_api_version
            __props__.__dict__["runtime_channel"] = runtime_channel
            __props__.__dict__["runtime_main_executable_path"] = runtime_main_executable_path
            __props__.__dict__["service_account"] = service_account
            if service_id is None and not opts.urn:
                raise TypeError("Missing required property 'service_id'")
            __props__.__dict__["service_id"] = service_id
            __props__.__dict__["serving_status"] = serving_status
            __props__.__dict__["threadsafe"] = threadsafe
            __props__.__dict__["vm"] = vm
            __props__.__dict__["vpc_access_connector"] = vpc_access_connector
            __props__.__dict__["zones"] = zones
            __props__.__dict__["create_time"] = None
            __props__.__dict__["created_by"] = None
            __props__.__dict__["disk_usage_bytes"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["version_url"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["appId", "serviceId"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(Version, __self__).__init__(
            'google-native:appengine/v1beta:Version',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Version':
        """
        Get an existing Version resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = VersionArgs.__new__(VersionArgs)

        __props__.__dict__["api_config"] = None
        __props__.__dict__["app_engine_apis"] = None
        __props__.__dict__["app_id"] = None
        __props__.__dict__["automatic_scaling"] = None
        __props__.__dict__["basic_scaling"] = None
        __props__.__dict__["beta_settings"] = None
        __props__.__dict__["build_env_variables"] = None
        __props__.__dict__["create_time"] = None
        __props__.__dict__["created_by"] = None
        __props__.__dict__["default_expiration"] = None
        __props__.__dict__["deployment"] = None
        __props__.__dict__["disk_usage_bytes"] = None
        __props__.__dict__["endpoints_api_service"] = None
        __props__.__dict__["entrypoint"] = None
        __props__.__dict__["env"] = None
        __props__.__dict__["env_variables"] = None
        __props__.__dict__["error_handlers"] = None
        __props__.__dict__["flexible_runtime_settings"] = None
        __props__.__dict__["generated_customer_metadata"] = None
        __props__.__dict__["handlers"] = None
        __props__.__dict__["health_check"] = None
        __props__.__dict__["inbound_services"] = None
        __props__.__dict__["instance_class"] = None
        __props__.__dict__["libraries"] = None
        __props__.__dict__["liveness_check"] = None
        __props__.__dict__["manual_scaling"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["network"] = None
        __props__.__dict__["nobuild_files_regex"] = None
        __props__.__dict__["readiness_check"] = None
        __props__.__dict__["resources"] = None
        __props__.__dict__["runtime"] = None
        __props__.__dict__["runtime_api_version"] = None
        __props__.__dict__["runtime_channel"] = None
        __props__.__dict__["runtime_main_executable_path"] = None
        __props__.__dict__["service_account"] = None
        __props__.__dict__["service_id"] = None
        __props__.__dict__["serving_status"] = None
        __props__.__dict__["threadsafe"] = None
        __props__.__dict__["version_url"] = None
        __props__.__dict__["vm"] = None
        __props__.__dict__["vpc_access_connector"] = None
        __props__.__dict__["zones"] = None
        return Version(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiConfig")
    def api_config(self) -> pulumi.Output['outputs.ApiConfigHandlerResponse']:
        """
        Serving configuration for Google Cloud Endpoints (https://cloud.google.com/endpoints).Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "api_config")

    @property
    @pulumi.getter(name="appEngineApis")
    def app_engine_apis(self) -> pulumi.Output[bool]:
        """
        Allows App Engine second generation runtimes to access the legacy bundled services.
        """
        return pulumi.get(self, "app_engine_apis")

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "app_id")

    @property
    @pulumi.getter(name="automaticScaling")
    def automatic_scaling(self) -> pulumi.Output['outputs.AutomaticScalingResponse']:
        """
        Automatic scaling is based on request rate, response latencies, and other application metrics. Instances are dynamically created and destroyed as needed in order to handle traffic.
        """
        return pulumi.get(self, "automatic_scaling")

    @property
    @pulumi.getter(name="basicScaling")
    def basic_scaling(self) -> pulumi.Output['outputs.BasicScalingResponse']:
        """
        A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
        """
        return pulumi.get(self, "basic_scaling")

    @property
    @pulumi.getter(name="betaSettings")
    def beta_settings(self) -> pulumi.Output[Mapping[str, str]]:
        """
        Metadata settings that are supplied to this version to enable beta runtime features.
        """
        return pulumi.get(self, "beta_settings")

    @property
    @pulumi.getter(name="buildEnvVariables")
    def build_env_variables(self) -> pulumi.Output[Mapping[str, str]]:
        """
        Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "build_env_variables")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        Time that this version was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="createdBy")
    def created_by(self) -> pulumi.Output[str]:
        """
        Email address of the user who created this version.
        """
        return pulumi.get(self, "created_by")

    @property
    @pulumi.getter(name="defaultExpiration")
    def default_expiration(self) -> pulumi.Output[str]:
        """
        Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1beta/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "default_expiration")

    @property
    @pulumi.getter
    def deployment(self) -> pulumi.Output['outputs.DeploymentResponse']:
        """
        Code and application artifacts that make up this version.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "deployment")

    @property
    @pulumi.getter(name="diskUsageBytes")
    def disk_usage_bytes(self) -> pulumi.Output[str]:
        """
        Total size in bytes of all the files that are included in this version and currently hosted on the App Engine disk.
        """
        return pulumi.get(self, "disk_usage_bytes")

    @property
    @pulumi.getter(name="endpointsApiService")
    def endpoints_api_service(self) -> pulumi.Output['outputs.EndpointsApiServiceResponse']:
        """
        Cloud Endpoints configuration.If endpoints_api_service is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.
        """
        return pulumi.get(self, "endpoints_api_service")

    @property
    @pulumi.getter
    def entrypoint(self) -> pulumi.Output['outputs.EntrypointResponse']:
        """
        The entrypoint for the application.
        """
        return pulumi.get(self, "entrypoint")

    @property
    @pulumi.getter
    def env(self) -> pulumi.Output[str]:
        """
        App Engine execution environment for this version.Defaults to standard.
        """
        return pulumi.get(self, "env")

    @property
    @pulumi.getter(name="envVariables")
    def env_variables(self) -> pulumi.Output[Mapping[str, str]]:
        """
        Environment variables available to the application.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "env_variables")

    @property
    @pulumi.getter(name="errorHandlers")
    def error_handlers(self) -> pulumi.Output[Sequence['outputs.ErrorHandlerResponse']]:
        """
        Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "error_handlers")

    @property
    @pulumi.getter(name="flexibleRuntimeSettings")
    def flexible_runtime_settings(self) -> pulumi.Output['outputs.FlexibleRuntimeSettingsResponse']:
        """
        Settings for App Engine flexible runtimes.
        """
        return pulumi.get(self, "flexible_runtime_settings")

    @property
    @pulumi.getter(name="generatedCustomerMetadata")
    def generated_customer_metadata(self) -> pulumi.Output[Mapping[str, Any]]:
        """
        Additional Google Generated Customer Metadata, this field won't be provided by default and can be requested by setting the IncludeExtraData field in GetVersionRequest
        """
        return pulumi.get(self, "generated_customer_metadata")

    @property
    @pulumi.getter
    def handlers(self) -> pulumi.Output[Sequence['outputs.UrlMapResponse']]:
        """
        An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "handlers")

    @property
    @pulumi.getter(name="healthCheck")
    def health_check(self) -> pulumi.Output['outputs.HealthCheckResponse']:
        """
        Configures health checking for instances. Unhealthy instances are stopped and replaced with new instances. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "health_check")

    @property
    @pulumi.getter(name="inboundServices")
    def inbound_services(self) -> pulumi.Output[Sequence[str]]:
        """
        Before an application can receive email or XMPP messages, the application must be configured to enable the service.
        """
        return pulumi.get(self, "inbound_services")

    @property
    @pulumi.getter(name="instanceClass")
    def instance_class(self) -> pulumi.Output[str]:
        """
        Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
        """
        return pulumi.get(self, "instance_class")

    @property
    @pulumi.getter
    def libraries(self) -> pulumi.Output[Sequence['outputs.LibraryResponse']]:
        """
        Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "libraries")

    @property
    @pulumi.getter(name="livenessCheck")
    def liveness_check(self) -> pulumi.Output['outputs.LivenessCheckResponse']:
        """
        Configures liveness health checking for instances. Unhealthy instances are stopped and replaced with new instances
        """
        return pulumi.get(self, "liveness_check")

    @property
    @pulumi.getter(name="manualScaling")
    def manual_scaling(self) -> pulumi.Output['outputs.ManualScalingResponse']:
        """
        A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. Manually scaled versions are sometimes referred to as "backends".
        """
        return pulumi.get(self, "manual_scaling")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def network(self) -> pulumi.Output['outputs.NetworkResponse']:
        """
        Extra network settings. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "network")

    @property
    @pulumi.getter(name="nobuildFilesRegex")
    def nobuild_files_regex(self) -> pulumi.Output[str]:
        """
        Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
        """
        return pulumi.get(self, "nobuild_files_regex")

    @property
    @pulumi.getter(name="readinessCheck")
    def readiness_check(self) -> pulumi.Output['outputs.ReadinessCheckResponse']:
        """
        Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
        """
        return pulumi.get(self, "readiness_check")

    @property
    @pulumi.getter
    def resources(self) -> pulumi.Output['outputs.ResourcesResponse']:
        """
        Machine resources for this version. Only applicable in the App Engine flexible environment.
        """
        return pulumi.get(self, "resources")

    @property
    @pulumi.getter
    def runtime(self) -> pulumi.Output[str]:
        """
        Desired runtime. Example: python27.
        """
        return pulumi.get(self, "runtime")

    @property
    @pulumi.getter(name="runtimeApiVersion")
    def runtime_api_version(self) -> pulumi.Output[str]:
        """
        The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        """
        return pulumi.get(self, "runtime_api_version")

    @property
    @pulumi.getter(name="runtimeChannel")
    def runtime_channel(self) -> pulumi.Output[str]:
        """
        The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
        """
        return pulumi.get(self, "runtime_channel")

    @property
    @pulumi.getter(name="runtimeMainExecutablePath")
    def runtime_main_executable_path(self) -> pulumi.Output[str]:
        """
        The path or name of the app's main executable.
        """
        return pulumi.get(self, "runtime_main_executable_path")

    @property
    @pulumi.getter(name="serviceAccount")
    def service_account(self) -> pulumi.Output[str]:
        """
        The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
        """
        return pulumi.get(self, "service_account")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="servingStatus")
    def serving_status(self) -> pulumi.Output[str]:
        """
        Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
        """
        return pulumi.get(self, "serving_status")

    @property
    @pulumi.getter
    def threadsafe(self) -> pulumi.Output[bool]:
        """
        Whether multiple requests can be dispatched to this version at once.
        """
        return pulumi.get(self, "threadsafe")

    @property
    @pulumi.getter(name="versionUrl")
    def version_url(self) -> pulumi.Output[str]:
        """
        Serving URL for this version. Example: "https://myversion-dot-myservice-dot-myapp.appspot.com"
        """
        return pulumi.get(self, "version_url")

    @property
    @pulumi.getter
    def vm(self) -> pulumi.Output[bool]:
        """
        Whether to deploy this version in a container on a virtual machine.
        """
        return pulumi.get(self, "vm")

    @property
    @pulumi.getter(name="vpcAccessConnector")
    def vpc_access_connector(self) -> pulumi.Output['outputs.VpcAccessConnectorResponse']:
        """
        Enables VPC connectivity for standard apps.
        """
        return pulumi.get(self, "vpc_access_connector")

    @property
    @pulumi.getter
    @_utilities.deprecated("""The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.""")
    def zones(self) -> pulumi.Output[Sequence[str]]:
        """
        The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
        """
        return pulumi.get(self, "zones")

