# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['NotebookRuntimeTemplateArgs', 'NotebookRuntimeTemplate']

@pulumi.input_type
class NotebookRuntimeTemplateArgs:
    def __init__(__self__, *,
                 display_name: pulumi.Input[str],
                 data_persistent_disk_spec: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 euc_config: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']] = None,
                 idle_shutdown_config: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 machine_spec: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1MachineSpecArgs']] = None,
                 network_spec: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NetworkSpecArgs']] = None,
                 notebook_runtime_template_id: Optional[pulumi.Input[str]] = None,
                 notebook_runtime_type: Optional[pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType']] = None,
                 project: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a NotebookRuntimeTemplate resource.
        :param pulumi.Input[str] display_name: The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        :param pulumi.Input['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs'] data_persistent_disk_spec: Optional. The specification of persistent disk attached to the runtime as data disk storage.
        :param pulumi.Input[str] description: The description of the NotebookRuntimeTemplate.
        :param pulumi.Input[str] etag: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        :param pulumi.Input['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs'] euc_config: EUC configuration of the NotebookRuntimeTemplate.
        :param pulumi.Input['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs'] idle_shutdown_config: The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        :param pulumi.Input['GoogleCloudAiplatformV1beta1MachineSpecArgs'] machine_spec: Optional. Immutable. The specification of a single machine for the template.
        :param pulumi.Input['GoogleCloudAiplatformV1beta1NetworkSpecArgs'] network_spec: Optional. Network spec.
        :param pulumi.Input[str] notebook_runtime_template_id: Optional. User specified ID for the notebook runtime template.
        :param pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType'] notebook_runtime_type: Optional. Immutable. The type of the notebook runtime template.
        :param pulumi.Input[str] service_account: The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
        """
        pulumi.set(__self__, "display_name", display_name)
        if data_persistent_disk_spec is not None:
            pulumi.set(__self__, "data_persistent_disk_spec", data_persistent_disk_spec)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if etag is not None:
            pulumi.set(__self__, "etag", etag)
        if euc_config is not None:
            pulumi.set(__self__, "euc_config", euc_config)
        if idle_shutdown_config is not None:
            pulumi.set(__self__, "idle_shutdown_config", idle_shutdown_config)
        if labels is not None:
            pulumi.set(__self__, "labels", labels)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if machine_spec is not None:
            pulumi.set(__self__, "machine_spec", machine_spec)
        if network_spec is not None:
            pulumi.set(__self__, "network_spec", network_spec)
        if notebook_runtime_template_id is not None:
            pulumi.set(__self__, "notebook_runtime_template_id", notebook_runtime_template_id)
        if notebook_runtime_type is not None:
            pulumi.set(__self__, "notebook_runtime_type", notebook_runtime_type)
        if project is not None:
            pulumi.set(__self__, "project", project)
        if service_account is not None:
            pulumi.set(__self__, "service_account", service_account)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Input[str]:
        """
        The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        """
        return pulumi.get(self, "display_name")

    @display_name.setter
    def display_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "display_name", value)

    @property
    @pulumi.getter(name="dataPersistentDiskSpec")
    def data_persistent_disk_spec(self) -> Optional[pulumi.Input['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']]:
        """
        Optional. The specification of persistent disk attached to the runtime as data disk storage.
        """
        return pulumi.get(self, "data_persistent_disk_spec")

    @data_persistent_disk_spec.setter
    def data_persistent_disk_spec(self, value: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']]):
        pulumi.set(self, "data_persistent_disk_spec", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the NotebookRuntimeTemplate.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def etag(self) -> Optional[pulumi.Input[str]]:
        """
        Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        """
        return pulumi.get(self, "etag")

    @etag.setter
    def etag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "etag", value)

    @property
    @pulumi.getter(name="eucConfig")
    def euc_config(self) -> Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']]:
        """
        EUC configuration of the NotebookRuntimeTemplate.
        """
        return pulumi.get(self, "euc_config")

    @euc_config.setter
    def euc_config(self, value: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']]):
        pulumi.set(self, "euc_config", value)

    @property
    @pulumi.getter(name="idleShutdownConfig")
    def idle_shutdown_config(self) -> Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']]:
        """
        The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.
        """
        return pulumi.get(self, "idle_shutdown_config")

    @idle_shutdown_config.setter
    def idle_shutdown_config(self, value: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']]):
        pulumi.set(self, "idle_shutdown_config", value)

    @property
    @pulumi.getter
    def labels(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        """
        return pulumi.get(self, "labels")

    @labels.setter
    def labels(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "labels", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="machineSpec")
    def machine_spec(self) -> Optional[pulumi.Input['GoogleCloudAiplatformV1beta1MachineSpecArgs']]:
        """
        Optional. Immutable. The specification of a single machine for the template.
        """
        return pulumi.get(self, "machine_spec")

    @machine_spec.setter
    def machine_spec(self, value: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1MachineSpecArgs']]):
        pulumi.set(self, "machine_spec", value)

    @property
    @pulumi.getter(name="networkSpec")
    def network_spec(self) -> Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NetworkSpecArgs']]:
        """
        Optional. Network spec.
        """
        return pulumi.get(self, "network_spec")

    @network_spec.setter
    def network_spec(self, value: Optional[pulumi.Input['GoogleCloudAiplatformV1beta1NetworkSpecArgs']]):
        pulumi.set(self, "network_spec", value)

    @property
    @pulumi.getter(name="notebookRuntimeTemplateId")
    def notebook_runtime_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Optional. User specified ID for the notebook runtime template.
        """
        return pulumi.get(self, "notebook_runtime_template_id")

    @notebook_runtime_template_id.setter
    def notebook_runtime_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "notebook_runtime_template_id", value)

    @property
    @pulumi.getter(name="notebookRuntimeType")
    def notebook_runtime_type(self) -> Optional[pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType']]:
        """
        Optional. Immutable. The type of the notebook runtime template.
        """
        return pulumi.get(self, "notebook_runtime_type")

    @notebook_runtime_type.setter
    def notebook_runtime_type(self, value: Optional[pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType']]):
        pulumi.set(self, "notebook_runtime_type", value)

    @property
    @pulumi.getter
    def project(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "project")

    @project.setter
    def project(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project", value)

    @property
    @pulumi.getter(name="serviceAccount")
    def service_account(self) -> Optional[pulumi.Input[str]]:
        """
        The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
        """
        return pulumi.get(self, "service_account")

    @service_account.setter
    def service_account(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_account", value)


class NotebookRuntimeTemplate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_persistent_disk_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 euc_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']]] = None,
                 idle_shutdown_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 machine_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1MachineSpecArgs']]] = None,
                 network_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NetworkSpecArgs']]] = None,
                 notebook_runtime_template_id: Optional[pulumi.Input[str]] = None,
                 notebook_runtime_type: Optional[pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType']] = None,
                 project: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Creates a NotebookRuntimeTemplate.
        Auto-naming is currently not supported for this resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']] data_persistent_disk_spec: Optional. The specification of persistent disk attached to the runtime as data disk storage.
        :param pulumi.Input[str] description: The description of the NotebookRuntimeTemplate.
        :param pulumi.Input[str] display_name: The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        :param pulumi.Input[str] etag: Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']] euc_config: EUC configuration of the NotebookRuntimeTemplate.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']] idle_shutdown_config: The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] labels: The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1MachineSpecArgs']] machine_spec: Optional. Immutable. The specification of a single machine for the template.
        :param pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NetworkSpecArgs']] network_spec: Optional. Network spec.
        :param pulumi.Input[str] notebook_runtime_template_id: Optional. User specified ID for the notebook runtime template.
        :param pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType'] notebook_runtime_type: Optional. Immutable. The type of the notebook runtime template.
        :param pulumi.Input[str] service_account: The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NotebookRuntimeTemplateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Creates a NotebookRuntimeTemplate.
        Auto-naming is currently not supported for this resource.

        :param str resource_name: The name of the resource.
        :param NotebookRuntimeTemplateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NotebookRuntimeTemplateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_persistent_disk_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1PersistentDiskSpecArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 display_name: Optional[pulumi.Input[str]] = None,
                 etag: Optional[pulumi.Input[str]] = None,
                 euc_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookEucConfigArgs']]] = None,
                 idle_shutdown_config: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigArgs']]] = None,
                 labels: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 machine_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1MachineSpecArgs']]] = None,
                 network_spec: Optional[pulumi.Input[pulumi.InputType['GoogleCloudAiplatformV1beta1NetworkSpecArgs']]] = None,
                 notebook_runtime_template_id: Optional[pulumi.Input[str]] = None,
                 notebook_runtime_type: Optional[pulumi.Input['NotebookRuntimeTemplateNotebookRuntimeType']] = None,
                 project: Optional[pulumi.Input[str]] = None,
                 service_account: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NotebookRuntimeTemplateArgs.__new__(NotebookRuntimeTemplateArgs)

            __props__.__dict__["data_persistent_disk_spec"] = data_persistent_disk_spec
            __props__.__dict__["description"] = description
            if display_name is None and not opts.urn:
                raise TypeError("Missing required property 'display_name'")
            __props__.__dict__["display_name"] = display_name
            __props__.__dict__["etag"] = etag
            __props__.__dict__["euc_config"] = euc_config
            __props__.__dict__["idle_shutdown_config"] = idle_shutdown_config
            __props__.__dict__["labels"] = labels
            __props__.__dict__["location"] = location
            __props__.__dict__["machine_spec"] = machine_spec
            __props__.__dict__["network_spec"] = network_spec
            __props__.__dict__["notebook_runtime_template_id"] = notebook_runtime_template_id
            __props__.__dict__["notebook_runtime_type"] = notebook_runtime_type
            __props__.__dict__["project"] = project
            __props__.__dict__["service_account"] = service_account
            __props__.__dict__["create_time"] = None
            __props__.__dict__["is_default"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["update_time"] = None
        replace_on_changes = pulumi.ResourceOptions(replace_on_changes=["location", "project"])
        opts = pulumi.ResourceOptions.merge(opts, replace_on_changes)
        super(NotebookRuntimeTemplate, __self__).__init__(
            'google-native:aiplatform/v1beta1:NotebookRuntimeTemplate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'NotebookRuntimeTemplate':
        """
        Get an existing NotebookRuntimeTemplate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = NotebookRuntimeTemplateArgs.__new__(NotebookRuntimeTemplateArgs)

        __props__.__dict__["create_time"] = None
        __props__.__dict__["data_persistent_disk_spec"] = None
        __props__.__dict__["description"] = None
        __props__.__dict__["display_name"] = None
        __props__.__dict__["etag"] = None
        __props__.__dict__["euc_config"] = None
        __props__.__dict__["idle_shutdown_config"] = None
        __props__.__dict__["is_default"] = None
        __props__.__dict__["labels"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["machine_spec"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["network_spec"] = None
        __props__.__dict__["notebook_runtime_template_id"] = None
        __props__.__dict__["notebook_runtime_type"] = None
        __props__.__dict__["project"] = None
        __props__.__dict__["service_account"] = None
        __props__.__dict__["update_time"] = None
        return NotebookRuntimeTemplate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        Timestamp when this NotebookRuntimeTemplate was created.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="dataPersistentDiskSpec")
    def data_persistent_disk_spec(self) -> pulumi.Output['outputs.GoogleCloudAiplatformV1beta1PersistentDiskSpecResponse']:
        """
        Optional. The specification of persistent disk attached to the runtime as data disk storage.
        """
        return pulumi.get(self, "data_persistent_disk_spec")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        The description of the NotebookRuntimeTemplate.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> pulumi.Output[str]:
        """
        The display name of the NotebookRuntimeTemplate. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter
    def etag(self) -> pulumi.Output[str]:
        """
        Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter(name="eucConfig")
    def euc_config(self) -> pulumi.Output['outputs.GoogleCloudAiplatformV1beta1NotebookEucConfigResponse']:
        """
        EUC configuration of the NotebookRuntimeTemplate.
        """
        return pulumi.get(self, "euc_config")

    @property
    @pulumi.getter(name="idleShutdownConfig")
    def idle_shutdown_config(self) -> pulumi.Output['outputs.GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfigResponse']:
        """
        The idle shutdown configuration of NotebookRuntimeTemplate. This config will only be set when idle shutdown is enabled.
        """
        return pulumi.get(self, "idle_shutdown_config")

    @property
    @pulumi.getter(name="isDefault")
    def is_default(self) -> pulumi.Output[bool]:
        """
        The default template to use if not specified.
        """
        return pulumi.get(self, "is_default")

    @property
    @pulumi.getter
    def labels(self) -> pulumi.Output[Mapping[str, str]]:
        """
        The labels with user-defined metadata to organize the NotebookRuntimeTemplates. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        return pulumi.get(self, "location")

    @property
    @pulumi.getter(name="machineSpec")
    def machine_spec(self) -> pulumi.Output['outputs.GoogleCloudAiplatformV1beta1MachineSpecResponse']:
        """
        Optional. Immutable. The specification of a single machine for the template.
        """
        return pulumi.get(self, "machine_spec")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The resource name of the NotebookRuntimeTemplate.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkSpec")
    def network_spec(self) -> pulumi.Output['outputs.GoogleCloudAiplatformV1beta1NetworkSpecResponse']:
        """
        Optional. Network spec.
        """
        return pulumi.get(self, "network_spec")

    @property
    @pulumi.getter(name="notebookRuntimeTemplateId")
    def notebook_runtime_template_id(self) -> pulumi.Output[Optional[str]]:
        """
        Optional. User specified ID for the notebook runtime template.
        """
        return pulumi.get(self, "notebook_runtime_template_id")

    @property
    @pulumi.getter(name="notebookRuntimeType")
    def notebook_runtime_type(self) -> pulumi.Output[str]:
        """
        Optional. Immutable. The type of the notebook runtime template.
        """
        return pulumi.get(self, "notebook_runtime_type")

    @property
    @pulumi.getter
    def project(self) -> pulumi.Output[str]:
        return pulumi.get(self, "project")

    @property
    @pulumi.getter(name="serviceAccount")
    def service_account(self) -> pulumi.Output[str]:
        """
        The service account that the runtime workload runs as. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
        """
        return pulumi.get(self, "service_account")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> pulumi.Output[str]:
        """
        Timestamp when this NotebookRuntimeTemplate was most recently updated.
        """
        return pulumi.get(self, "update_time")

