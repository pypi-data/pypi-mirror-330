import sympy as sp

class KerrSchildStrings:
    str_g__mu__nu = 'Matrix([[2.0*m*r**3/(a**2*z**2 + r**4) - 1, 2.0*m*r**3*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2.0*m*r**3*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2.0*m*r**2*z/(a**2*z**2 + r**4)], [2.0*m*r**3*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2*m*r**3*(a*y + r*x)**2/((a**2 + r**2)**2*(a**2*z**2 + r**4)) + 1, 2*m*r**3*(-a*x + r*y)*(a*y + r*x)/((a**2 + r**2)**2*(a**2*z**2 + r**4)), 2*m*r**2*z*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4))], [2.0*m*r**3*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2*m*r**3*(-a*x + r*y)*(a*y + r*x)/((a**2 + r**2)**2*(a**2*z**2 + r**4)), 2*m*r**3*(-a*x + r*y)**2/((a**2 + r**2)**2*(a**2*z**2 + r**4)) + 1, 2*m*r**2*z*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4))], [2.0*m*r**2*z/(a**2*z**2 + r**4), 2*m*r**2*z*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2*m*r**2*z*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2*m*r*z**2/(a**2*z**2 + r**4) + 1]])'
    str_g_mu_nu = 'Matrix([[-2.0*m*r**3/(a**2*z**2 + r**4) - 1, 2.0*m*r**3*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2.0*m*r**3*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), 2.0*m*r**2*z/(a**2*z**2 + r**4)], [2.0*m*r**3*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), -2*m*r**3*(a*y + r*x)**2/((a**2 + r**2)**2*(a**2*z**2 + r**4)) + 1, -2*m*r**3*(-a*x + r*y)*(a*y + r*x)/((a**2 + r**2)**2*(a**2*z**2 + r**4)), -2*m*r**2*z*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4))], [2.0*m*r**3*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), -2*m*r**3*(-a*x + r*y)*(a*y + r*x)/((a**2 + r**2)**2*(a**2*z**2 + r**4)), -2*m*r**3*(-a*x + r*y)**2/((a**2 + r**2)**2*(a**2*z**2 + r**4)) + 1, -2*m*r**2*z*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4))], [2.0*m*r**2*z/(a**2*z**2 + r**4), -2*m*r**2*z*(a*y + r*x)/((a**2 + r**2)*(a**2*z**2 + r**4)), -2*m*r**2*z*(-a*x + r*y)/((a**2 + r**2)*(a**2*z**2 + r**4)), -2*m*r*z**2/(a**2*z**2 + r**4) + 1]])'
    str_dg__mu__nu_dt = 'Matrix([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]])'
    str_dg__mu__nu_dx = 'Matrix([[2*m*r**3*x*(3.0*a**2*z**2 - 1.0*r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(-8.0*r**6*x*(a**2 + r**2)*(a*y + r*x) - 4.0*r**4*x*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*x*(a*y + r*x) + 1.0*r*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8.0*r**6*x*(a**2 + r**2)*(a*x - r*y) + 4.0*r**4*x*(a*x - r*y)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*x*(a*x - r*y) + 1.0*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), 4.0*m*r**2*x*z*(a**2*z**2 - r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [m*r*(-8.0*r**6*x*(a**2 + r**2)*(a*y + r*x) - 4.0*r**4*x*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*x*(a*y + r*x) + 1.0*r*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(a*y + r*x)*(-8*r**6*x*(a**2 + r**2)*(a*y + r*x) - 8*r**4*x*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*x*(a*y + r*x) + 2*r*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8*r**6*x*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x) + 8*r**4*x*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*x*(a*x - r*y)*(a*y + r*x) + r*(a*x - r*y)*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + r*(a*y + r*x)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(-8*r**5*x*(a**2 + r**2)*(a*y + r*x) - 4*r**3*x*(a*y + r*x)*(a**2*z**2 + r**4) + 4*r*x*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [m*r*(8.0*r**6*x*(a**2 + r**2)*(a*x - r*y) + 4.0*r**4*x*(a*x - r*y)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*x*(a*x - r*y) + 1.0*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8*r**6*x*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x) + 8*r**4*x*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*x*(a*x - r*y)*(a*y + r*x) + r*(a*x - r*y)*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + r*(a*y + r*x)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(a*x - r*y)*(-8*r**6*x*(a**2 + r**2)*(a*x - r*y) - 8*r**4*x*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*x*(a*x - r*y) + 2*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(8*r**5*x*(a**2 + r**2)*(a*x - r*y) + 4*r**3*x*(a*x - r*y)*(a**2*z**2 + r**4) - 4*r*x*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [4.0*m*r**2*x*z*(a**2*z**2 - r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(-8*r**5*x*(a**2 + r**2)*(a*y + r*x) - 4*r**3*x*(a*y + r*x)*(a**2*z**2 + r**4) + 4*r*x*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*r**2*x**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(8*r**5*x*(a**2 + r**2)*(a*x - r*y) + 4*r**3*x*(a*x - r*y)*(a**2*z**2 + r**4) - 4*r*x*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4) - (a**2 + r**2)*(a**2*z**2 + r**4)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) - 2*r**2*x*y))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), 2*m*r*x*z**2*(a**2*z**2 - 3*r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))]])'
    str_dg__mu__nu_dy = 'Matrix([[2*m*r**3*y*(3.0*a**2*z**2 - 1.0*r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(-8.0*r**6*y*(a**2 + r**2)*(a*y + r*x) - 4.0*r**4*y*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*y*(a*y + r*x) + 1.0*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8.0*r**6*y*(a**2 + r**2)*(a*x - r*y) + 4.0*r**4*y*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-6.0*r**2*y*(a*x - r*y) + 1.0*r*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), 4.0*m*r**2*y*z*(a**2*z**2 - r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [m*r*(-8.0*r**6*y*(a**2 + r**2)*(a*y + r*x) - 4.0*r**4*y*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6.0*r**2*y*(a*y + r*x) + 1.0*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(a*y + r*x)*(-8*r**6*y*(a**2 + r**2)*(a*y + r*x) - 8*r**4*y*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*y*(a*y + r*x) + 2*r*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8*r**6*y*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x) + 8*r**4*y*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-6*r**2*y*(a*x - r*y)*(a*y + r*x) - r*(a*x - r*y)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y) + r*(a*y + r*x)*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(-8*r**5*y*(a**2 + r**2)*(a*y + r*x) - 4*r**3*y*(a*y + r*x)*(a**2*z**2 + r**4) + 4*r*y*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [m*r*(8.0*r**6*y*(a**2 + r**2)*(a*x - r*y) + 4.0*r**4*y*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-6.0*r**2*y*(a*x - r*y) + 1.0*r*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(8*r**6*y*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x) + 8*r**4*y*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-6*r**2*y*(a*x - r*y)*(a*y + r*x) - r*(a*x - r*y)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y) + r*(a*y + r*x)*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*(a*x - r*y)*(-8*r**6*y*(a**2 + r**2)*(a*x - r*y) - 8*r**4*y*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(6*r**2*y*(a*x - r*y) - 2*r*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(8*r**5*y*(a**2 + r**2)*(a*x - r*y) + 4*r**3*y*(a*x - r*y)*(a**2*z**2 + r**4) - 4*r*y*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [4.0*m*r**2*y*z*(a**2*z**2 - r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(-8*r**5*y*(a**2 + r**2)*(a*y + r*x) - 4*r**3*y*(a*y + r*x)*(a**2*z**2 + r**4) + 4*r*y*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*a*r*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*x*y))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*r*z*(8*r**5*y*(a**2 + r**2)*(a*x - r*y) + 4*r**3*y*(a*x - r*y)*(a**2*z**2 + r**4) - 4*r*y*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*r**2*y**2 + 2*r**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), 2*m*r*y*z**2*(a**2*z**2 - 3*r**4)/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))]])'
    str_dg__mu__nu_dz = 'Matrix([[m*r*z*(-2.0*r**2*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 3.0*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(-2.0*r**3*(a**2 + r**2)*(a*y + r*x)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 2.0*r**3*(a*y + r*x)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(1.0*r**2*x + 3.0*r*(a*y + r*x))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(2.0*r**3*(a**2 + r**2)*(a*x - r*y)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2.0*r**3*(a*x - r*y)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(1.0*r**2*y - 3.0*r*(a*x - r*y))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*(-2.0*r**2*z**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2.0*r**2*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2.0*z**2*(a**2*z**2 + r**4)*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))], [m*z*(-2.0*r**3*(a**2 + r**2)*(a*y + r*x)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 2.0*r**3*(a*y + r*x)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(1.0*r**2*x + 3.0*r*(a*y + r*x))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(a*y + r*x)*(-2*r**3*(a**2 + r**2)*(a*y + r*x)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 4*r**3*(a*y + r*x)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(2*r**2*x + 3*r*(a*y + r*x))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(4*r**3*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 8*r**3*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-2*r**2*x*(a*x - r*y) + 2*r**2*y*(a*y + r*x) - 6*r*(a*x - r*y)*(a*y + r*x))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/(2*(a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*(-2*r**2*z**2*(a**2 + r**2)*(a*y + r*x)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 2*r**2*z**2*(a*y + r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + 2*r**2*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2) + z**2*(a**2 + r**2)*(2*a*y + 3*r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2))], [m*z*(2.0*r**3*(a**2 + r**2)*(a*x - r*y)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2.0*r**3*(a*x - r*y)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(1.0*r**2*y - 3.0*r*(a*x - r*y))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(4*r**3*(a**2 + r**2)*(a*x - r*y)*(a*y + r*x)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 8*r**3*(a*x - r*y)*(a*y + r*x)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-2*r**2*x*(a*x - r*y) + 2*r**2*y*(a*y + r*x) - 6*r*(a*x - r*y)*(a*y + r*x))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/(2*(a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*z*(a*x - r*y)*(-2*r**3*(a**2 + r**2)*(a*x - r*y)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 4*r**3*(a*x - r*y)*(a**2*z**2 + r**4)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + (a**2 + r**2)*(a**2*z**2 + r**4)*(-2*r**2*y + 3*r*(a*x - r*y))*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**3*(a**2*z**2 + r**4)**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*(2*r**2*z**2*(a**2 + r**2)*(a*x - r*y)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2*r**2*z**2*(a*x - r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) - 2*r**2*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2) + z**2*(a**2 + r**2)*(-2*a*x + 3*r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2))], [m*(-2.0*r**2*z**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2.0*r**2*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2.0*z**2*(a**2*z**2 + r**4)*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)), m*(-2*r**2*z**2*(a**2 + r**2)*(a*y + r*x)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) - 2*r**2*z**2*(a*y + r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) + 2*r**2*(a**2 + r**2)*(a*y + r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2) + z**2*(a**2 + r**2)*(2*a*y + 3*r*x)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2)), m*(2*r**2*z**2*(a**2 + r**2)*(a*x - r*y)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 2*r**2*z**2*(a*x - r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)) - 2*r**2*(a**2 + r**2)*(a*x - r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2) + z**2*(a**2 + r**2)*(-2*a*x + 3*r*y)*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/((a**2 + r**2)**2*(a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)**(3/2)), m*z*(-2*r**2*z**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(2*a**2*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + 2*r**2*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))) + 4*r**2*(a**2*z**2 + r**4)*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2) + z**2*(a**2*z**2 + r**4)*sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)*(a**2 + x**2 + y**2 + z**2 + sqrt(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2)))/(r*(a**2*z**2 + r**4)**2*(4*a**2*z**2 + (-a**2 + x**2 + y**2 + z**2)**2))]])'

    str_g__mu__nu_diff = [str_dg__mu__nu_dt, str_dg__mu__nu_dx, str_dg__mu__nu_dy, str_dg__mu__nu_dz]
