"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import luminarycloud._proto.api.v0.luminarycloud.common.common_pb2
import luminarycloud._proto.base.base_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CameraDirection:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CameraDirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CameraDirection.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSPECIFIED: _CameraDirection.ValueType  # 0
    X_POSITIVE: _CameraDirection.ValueType  # 1
    Y_POSITIVE: _CameraDirection.ValueType  # 2
    Z_POSITIVE: _CameraDirection.ValueType  # 3
    X_NEGATIVE: _CameraDirection.ValueType  # 4
    Y_NEGATIVE: _CameraDirection.ValueType  # 5
    Z_NEGATIVE: _CameraDirection.ValueType  # 6

class CameraDirection(_CameraDirection, metaclass=_CameraDirectionEnumTypeWrapper): ...

UNSPECIFIED: CameraDirection.ValueType  # 0
X_POSITIVE: CameraDirection.ValueType  # 1
Y_POSITIVE: CameraDirection.ValueType  # 2
Z_POSITIVE: CameraDirection.ValueType  # 3
X_NEGATIVE: CameraDirection.ValueType  # 4
Y_NEGATIVE: CameraDirection.ValueType  # 5
Z_NEGATIVE: CameraDirection.ValueType  # 6
global___CameraDirection = CameraDirection

class _CameraProjection:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CameraProjectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CameraProjection.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ORTHOGRAPHIC: _CameraProjection.ValueType  # 0
    PERSPECTIVE: _CameraProjection.ValueType  # 1

class CameraProjection(_CameraProjection, metaclass=_CameraProjectionEnumTypeWrapper): ...

ORTHOGRAPHIC: CameraProjection.ValueType  # 0
PERSPECTIVE: CameraProjection.ValueType  # 1
global___CameraProjection = CameraProjection

class _VisQuantity:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VisQuantityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VisQuantity.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FIELD_NONE: _VisQuantity.ValueType  # 0
    FIELD_ABSOLUTE_PRESSURE: _VisQuantity.ValueType  # 1
    FIELD_PRESSURE: _VisQuantity.ValueType  # 2
    FIELD_PRESSURE_COEFFICIENT: _VisQuantity.ValueType  # 3
    FIELD_TOTAL_PRESSURE: _VisQuantity.ValueType  # 4
    FIELD_TOTAL_PRESSURE_COEFFICIENT: _VisQuantity.ValueType  # 5
    FIELD_DENSITY: _VisQuantity.ValueType  # 6
    FIELD_HEAT_FLUX: _VisQuantity.ValueType  # 7
    FIELD_TEMPERATURE: _VisQuantity.ValueType  # 8
    FIELD_TOTAL_TEMPERATURE: _VisQuantity.ValueType  # 9
    FIELD_MACH: _VisQuantity.ValueType  # 10
    FIELD_Q_CRITERION: _VisQuantity.ValueType  # 11
    FIELD_VELOCITY: _VisQuantity.ValueType  # 12
    FIELD_SKIN_FRICTION_COEFFICIENT: _VisQuantity.ValueType  # 13
    FIELD_WALL_SHEAR_STRESS: _VisQuantity.ValueType  # 14

class VisQuantity(_VisQuantity, metaclass=_VisQuantityEnumTypeWrapper):
    """TODO(matt): we likely need to create an rpc to tell us what fields are
    available. Just looking at the metadata won't be complete because of derived
    quantities and custom expressions.
    """

FIELD_NONE: VisQuantity.ValueType  # 0
FIELD_ABSOLUTE_PRESSURE: VisQuantity.ValueType  # 1
FIELD_PRESSURE: VisQuantity.ValueType  # 2
FIELD_PRESSURE_COEFFICIENT: VisQuantity.ValueType  # 3
FIELD_TOTAL_PRESSURE: VisQuantity.ValueType  # 4
FIELD_TOTAL_PRESSURE_COEFFICIENT: VisQuantity.ValueType  # 5
FIELD_DENSITY: VisQuantity.ValueType  # 6
FIELD_HEAT_FLUX: VisQuantity.ValueType  # 7
FIELD_TEMPERATURE: VisQuantity.ValueType  # 8
FIELD_TOTAL_TEMPERATURE: VisQuantity.ValueType  # 9
FIELD_MACH: VisQuantity.ValueType  # 10
FIELD_Q_CRITERION: VisQuantity.ValueType  # 11
FIELD_VELOCITY: VisQuantity.ValueType  # 12
FIELD_SKIN_FRICTION_COEFFICIENT: VisQuantity.ValueType  # 13
FIELD_WALL_SHEAR_STRESS: VisQuantity.ValueType  # 14
global___VisQuantity = VisQuantity

class _Representation:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RepresentationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Representation.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SURFACE: _Representation.ValueType  # 0
    SURFACE_WITH_EDGES: _Representation.ValueType  # 1
    WIREFRAME: _Representation.ValueType  # 2
    POINTS: _Representation.ValueType  # 3

class Representation(_Representation, metaclass=_RepresentationEnumTypeWrapper):
    """Render representation modes."""

SURFACE: Representation.ValueType  # 0
SURFACE_WITH_EDGES: Representation.ValueType  # 1
WIREFRAME: Representation.ValueType  # 2
POINTS: Representation.ValueType  # 3
global___Representation = Representation

class _ColorMapName:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ColorMapNameEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ColorMapName.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    COLOR_MAP_NAME_UNSPECIFIED: _ColorMapName.ValueType  # 0
    COLOR_MAP_NAME_VIRIDIS: _ColorMapName.ValueType  # 1
    COLOR_MAP_NAME_COOL_TO_WARM: _ColorMapName.ValueType  # 2
    COLOR_MAP_NAME_TURBO: _ColorMapName.ValueType  # 3
    COLOR_MAP_NAME_JET: _ColorMapName.ValueType  # 4
    COLOR_MAP_NAME_WAVE: _ColorMapName.ValueType  # 5
    COLOR_MAP_NAME_XRAY: _ColorMapName.ValueType  # 6

class ColorMapName(_ColorMapName, metaclass=_ColorMapNameEnumTypeWrapper):
    """Predefined color maps these values need to stay in sync with the
    visualization service proto names.
    """

COLOR_MAP_NAME_UNSPECIFIED: ColorMapName.ValueType  # 0
COLOR_MAP_NAME_VIRIDIS: ColorMapName.ValueType  # 1
COLOR_MAP_NAME_COOL_TO_WARM: ColorMapName.ValueType  # 2
COLOR_MAP_NAME_TURBO: ColorMapName.ValueType  # 3
COLOR_MAP_NAME_JET: ColorMapName.ValueType  # 4
COLOR_MAP_NAME_WAVE: ColorMapName.ValueType  # 5
COLOR_MAP_NAME_XRAY: ColorMapName.ValueType  # 6
global___ColorMapName = ColorMapName

class _ImageStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ImageStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImageStatus.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Invalid: _ImageStatus.ValueType  # 0
    """Sentinel. A good job will never have this value"""
    Active: _ImageStatus.ValueType  # 1
    """Currently running"""
    Completed: _ImageStatus.ValueType  # 2
    """Finished successfully"""
    Failed: _ImageStatus.ValueType  # 3
    """Job failed"""

class ImageStatus(_ImageStatus, metaclass=_ImageStatusEnumTypeWrapper): ...

Invalid: ImageStatus.ValueType  # 0
"""Sentinel. A good job will never have this value"""
Active: ImageStatus.ValueType  # 1
"""Currently running"""
Completed: ImageStatus.ValueType  # 2
"""Finished successfully"""
Failed: ImageStatus.ValueType  # 3
"""Job failed"""
global___ImageStatus = ImageStatus

class CameraLookAt(google.protobuf.message.Message):
    """Camera location based on the look at convention."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POSITION_FIELD_NUMBER: builtins.int
    LOOK_AT_FIELD_NUMBER: builtins.int
    UP_FIELD_NUMBER: builtins.int
    @property
    def position(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3:
        """Position of the camera."""
    @property
    def look_at(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3:
        """Point to which the camera is looking."""
    @property
    def up(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3:
        """Up vector of the camera."""
    def __init__(
        self,
        *,
        position: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3 | None = ...,
        look_at: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3 | None = ...,
        up: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["look_at", b"look_at", "position", b"position", "up", b"up"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["look_at", b"look_at", "position", b"position", "up", b"up"]) -> None: ...

global___CameraLookAt = CameraLookAt

class Resolution(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    @property
    def width(self) -> luminarycloud._proto.base.base_pb2.Int: ...
    @property
    def height(self) -> luminarycloud._proto.base.base_pb2.Int: ...
    def __init__(
        self,
        *,
        width: luminarycloud._proto.base.base_pb2.Int | None = ...,
        height: luminarycloud._proto.base.base_pb2.Int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["height", b"height", "width", b"width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["height", b"height", "width", b"width"]) -> None: ...

global___Resolution = Resolution

class Camera(google.protobuf.message.Message):
    """Simple camera definition to start with"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    PROJECTION_FIELD_NUMBER: builtins.int
    RESOLUTION_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    direction: global___CameraDirection.ValueType
    projection: global___CameraProjection.ValueType
    @property
    def resolution(self) -> global___Resolution:
        """The image resolution to rendert to."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        direction: global___CameraDirection.ValueType = ...,
        projection: global___CameraProjection.ValueType = ...,
        resolution: global___Resolution | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resolution", b"resolution"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["direction", b"direction", "id", b"id", "name", b"name", "projection", b"projection", "resolution", b"resolution"]) -> None: ...

global___Camera = Camera

class Field(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Component:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ComponentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Field._Component.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        COMPONENT_UNSPECIFIED: Field._Component.ValueType  # 0
        COMPONENT_X: Field._Component.ValueType  # 1
        COMPONENT_Y: Field._Component.ValueType  # 2
        COMPONENT_Z: Field._Component.ValueType  # 3
        COMPONENT_MAGNITUDE: Field._Component.ValueType  # -1

    class Component(_Component, metaclass=_ComponentEnumTypeWrapper): ...
    COMPONENT_UNSPECIFIED: Field.Component.ValueType  # 0
    COMPONENT_X: Field.Component.ValueType  # 1
    COMPONENT_Y: Field.Component.ValueType  # 2
    COMPONENT_Z: Field.Component.ValueType  # 3
    COMPONENT_MAGNITUDE: Field.Component.ValueType  # -1

    QUANTITY_TYP_FIELD_NUMBER: builtins.int
    COMPONENT_FIELD_NUMBER: builtins.int
    quantity_typ: global___VisQuantity.ValueType
    component: global___Field.Component.ValueType
    def __init__(
        self,
        *,
        quantity_typ: global___VisQuantity.ValueType = ...,
        component: global___Field.Component.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["component", b"component", "quantity_typ", b"quantity_typ"]) -> None: ...

global___Field = Field

class DisplayAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    VISIBLE_FIELD_NUMBER: builtins.int
    REPRESENTATION_FIELD_NUMBER: builtins.int
    OPACITY_FIELD_NUMBER: builtins.int
    @property
    def field(self) -> global___Field:
        """Display variable to be visualized. Optional if the extract referes to a
        mesh entity.
        """
    visible: builtins.bool
    """Visibility"""
    representation: global___Representation.ValueType
    """Render representation of the entity."""
    opacity: builtins.float
    """Opacity of the entity. Optional. Default is 1."""
    def __init__(
        self,
        *,
        field: global___Field | None = ...,
        visible: builtins.bool = ...,
        representation: global___Representation.ValueType = ...,
        opacity: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field", b"field"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "opacity", b"opacity", "representation", b"representation", "visible", b"visible"]) -> None: ...

global___DisplayAttributes = DisplayAttributes

class Plane(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORIGIN_FIELD_NUMBER: builtins.int
    NORMAL_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3:
        """A point on the slice plane"""
    @property
    def normal(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3:
        """The plane normal"""
    def __init__(
        self,
        *,
        origin: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3 | None = ...,
        normal: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["normal", b"normal", "origin", b"origin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["normal", b"normal", "origin", b"origin"]) -> None: ...

global___Plane = Plane

class Slice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLANE_FIELD_NUMBER: builtins.int
    PROJECT_VECTORS_FIELD_NUMBER: builtins.int
    @property
    def plane(self) -> global___Plane: ...
    project_vectors: builtins.bool
    """Project vectors onto the plane of the slice."""
    def __init__(
        self,
        *,
        plane: global___Plane | None = ...,
        project_vectors: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["plane", b"plane"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["plane", b"plane", "project_vectors", b"project_vectors"]) -> None: ...

global___Slice = Slice

class Clip(google.protobuf.message.Message):
    """TODO(matt): add the other types of clips"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLANE_FIELD_NUMBER: builtins.int
    @property
    def plane(self) -> global___Plane: ...
    def __init__(
        self,
        *,
        plane: global___Plane | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["plane", b"plane"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["plane", b"plane"]) -> None: ...

global___Clip = Clip

class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SLICE_FIELD_NUMBER: builtins.int
    CLIP_FIELD_NUMBER: builtins.int
    DISPLAY_ATTRS_FIELD_NUMBER: builtins.int
    id: builtins.str
    """A unique identifier for this filter."""
    name: builtins.str
    """A name for this filter. Can be provided by the user."""
    @property
    def slice(self) -> global___Slice: ...
    @property
    def clip(self) -> global___Clip: ...
    @property
    def display_attrs(self) -> global___DisplayAttributes:
        """How the filter should be displayed."""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        slice: global___Slice | None = ...,
        clip: global___Clip | None = ...,
        display_attrs: global___DisplayAttributes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clip", b"clip", "display_attrs", b"display_attrs", "slice", b"slice", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clip", b"clip", "display_attrs", b"display_attrs", "id", b"id", "name", b"name", "slice", b"slice", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["slice", "clip"] | None: ...

global___Filter = Filter

class MeshEntity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___MeshEntity = MeshEntity

class SimulationEntity(google.protobuf.message.Message):
    """Used to generate post processing extractions on a given solution of a
    simulation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SOLUTION_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    solution_id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        solution_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "solution_id", b"solution_id"]) -> None: ...

global___SimulationEntity = SimulationEntity

class GeometryEntity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    GEOMETRY_VERSION_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    geometry_version_id: builtins.str
    """Optional. If provided, the geometry version will be the last one at an
    arbitrary time when the extraction is performed by our services.
    """
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        geometry_version_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["geometry_version_id", b"geometry_version_id", "id", b"id"]) -> None: ...

global___GeometryEntity = GeometryEntity

class ExtractEntity(google.protobuf.message.Message):
    """Entity to which the extract is associated."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESH_FIELD_NUMBER: builtins.int
    SIMULATION_FIELD_NUMBER: builtins.int
    GEOMETRY_FIELD_NUMBER: builtins.int
    @property
    def mesh(self) -> global___MeshEntity: ...
    @property
    def simulation(self) -> global___SimulationEntity: ...
    @property
    def geometry(self) -> global___GeometryEntity: ...
    def __init__(
        self,
        *,
        mesh: global___MeshEntity | None = ...,
        simulation: global___SimulationEntity | None = ...,
        geometry: global___GeometryEntity | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity", b"entity", "geometry", b"geometry", "mesh", b"mesh", "simulation", b"simulation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity", b"entity", "geometry", b"geometry", "mesh", b"mesh", "simulation", b"simulation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entity", b"entity"]) -> typing_extensions.Literal["mesh", "simulation", "geometry"] | None: ...

global___ExtractEntity = ExtractEntity

class Range(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIN_FIELD_NUMBER: builtins.int
    MAX_FIELD_NUMBER: builtins.int
    min: builtins.float
    max: builtins.float
    def __init__(
        self,
        *,
        min: builtins.float = ...,
        max: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max", b"max", "min", b"min"]) -> None: ...

global___Range = Range

class ColorMap(google.protobuf.message.Message):
    """Color map for a given display variable."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    VISIBLE_FIELD_NUMBER: builtins.int
    DISCRETIZE_FIELD_NUMBER: builtins.int
    N_COLORS_FIELD_NUMBER: builtins.int
    @property
    def field(self) -> global___Field:
        """Display variable to which the color map is applied."""
    name: global___ColorMapName.ValueType
    """Predefined color map name."""
    @property
    def range(self) -> global___Range:
        """Optional range for the color map. If not provided, the global range of the
        variable is used.
        """
    @property
    def visible(self) -> luminarycloud._proto.base.base_pb2.Bool:
        """Whether the color map is visible."""
    @property
    def discretize(self) -> luminarycloud._proto.base.base_pb2.Bool:
        """If true, we discretize the color map into n_colors bins."""
    @property
    def n_colors(self) -> luminarycloud._proto.base.base_pb2.Int:
        """The number of discrete bins for the color map."""
    def __init__(
        self,
        *,
        field: global___Field | None = ...,
        name: global___ColorMapName.ValueType = ...,
        range: global___Range | None = ...,
        visible: luminarycloud._proto.base.base_pb2.Bool | None = ...,
        discretize: luminarycloud._proto.base.base_pb2.Bool | None = ...,
        n_colors: luminarycloud._proto.base.base_pb2.Int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["discretize", b"discretize", "field", b"field", "n_colors", b"n_colors", "range", b"range", "visible", b"visible"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["discretize", b"discretize", "field", b"field", "n_colors", b"n_colors", "name", b"name", "range", b"range", "visible", b"visible"]) -> None: ...

global___ColorMap = ColorMap

class CreateImageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class SurfaceVisibilitiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.bool
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    PROJECT_ID_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CAMERA_FIELD_NUMBER: builtins.int
    GLOBAL_DISPLAY_ATTRIBUTES_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    SURFACE_VISIBILITIES_FIELD_NUMBER: builtins.int
    COLOR_MAPS_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    """The project id"""
    @property
    def entity(self) -> global___ExtractEntity: ...
    name: builtins.str
    """A short user provided name."""
    description: builtins.str
    """A user provided description."""
    @property
    def camera(self) -> global___Camera:
        """The camera used to create the image"""
    @property
    def global_display_attributes(self) -> global___DisplayAttributes:
        """The global display attributes applied to the surfaces of the mesh."""
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Filter]:
        """An optional list of filters."""
    @property
    def surface_visibilities(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.bool]:
        """An explicit list of surface visibilities that override the visibility in
        the global_display_attributes.
        """
    @property
    def color_maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColorMap]:
        """User provide color maps."""
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        entity: global___ExtractEntity | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        camera: global___Camera | None = ...,
        global_display_attributes: global___DisplayAttributes | None = ...,
        filters: collections.abc.Iterable[global___Filter] | None = ...,
        surface_visibilities: collections.abc.Mapping[builtins.str, builtins.bool] | None = ...,
        color_maps: collections.abc.Iterable[global___ColorMap] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["camera", b"camera", "entity", b"entity", "global_display_attributes", b"global_display_attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera", b"camera", "color_maps", b"color_maps", "description", b"description", "entity", b"entity", "filters", b"filters", "global_display_attributes", b"global_display_attributes", "name", b"name", "project_id", b"project_id", "surface_visibilities", b"surface_visibilities"]) -> None: ...

global___CreateImageRequest = CreateImageRequest

class Image(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXTRACT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    extract_id: builtins.str
    """The request is an async call. We return the extract id, so we can query the
    job status and retrieve the image once it complete.
    """
    name: builtins.str
    """The user provide name of the extract."""
    description: builtins.str
    """The user provide description of the extract."""
    project_id: builtins.str
    """The project id."""
    status: global___ImageStatus.ValueType
    """The current status"""
    def __init__(
        self,
        *,
        extract_id: builtins.str = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        project_id: builtins.str = ...,
        status: global___ImageStatus.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "extract_id", b"extract_id", "name", b"name", "project_id", b"project_id", "status", b"status"]) -> None: ...

global___Image = Image

class CreateImageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> global___Image: ...
    def __init__(
        self,
        *,
        image: global___Image | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image", b"image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image", b"image"]) -> None: ...

global___CreateImageResponse = CreateImageResponse

class GetImageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> global___Image: ...
    def __init__(
        self,
        *,
        image: global___Image | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image", b"image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image", b"image"]) -> None: ...

global___GetImageResponse = GetImageResponse

class GetImageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXTRACT_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    extract_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        extract_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extract_id", b"extract_id", "project_id", b"project_id"]) -> None: ...

global___GetImageRequest = GetImageRequest

class DownloadImageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    EXTRACT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    extract_id: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        extract_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extract_id", b"extract_id", "project_id", b"project_id"]) -> None: ...

global___DownloadImageRequest = DownloadImageRequest

class DownloadImageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_FIELD_NUMBER: builtins.int
    @property
    def file(self) -> luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.File: ...
    def __init__(
        self,
        *,
        file: luminarycloud._proto.api.v0.luminarycloud.common.common_pb2.File | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file", b"file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file", b"file"]) -> None: ...

global___DownloadImageResponse = DownloadImageResponse

class ListImagesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    """The project id to query."""
    @property
    def entity(self) -> global___ExtractEntity:
        """The type of entity to query."""
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        entity: global___ExtractEntity | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity", b"entity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity", b"entity", "project_id", b"project_id"]) -> None: ...

global___ListImagesRequest = ListImagesRequest

class ListImagesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGES_FIELD_NUMBER: builtins.int
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Image]: ...
    def __init__(
        self,
        *,
        images: collections.abc.Iterable[global___Image] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["images", b"images"]) -> None: ...

global___ListImagesResponse = ListImagesResponse

class DeleteImageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXTRACT_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    extract_id: builtins.str
    project_id: builtins.str
    def __init__(
        self,
        *,
        extract_id: builtins.str = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["extract_id", b"extract_id", "project_id", b"project_id"]) -> None: ...

global___DeleteImageRequest = DeleteImageRequest

class DeleteImageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteImageResponse = DeleteImageResponse
