[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "zero_mech"
version = "0.1.2"
description = "A zero-dimensional mechanics solver"
authors = [{name = "Henrik Finsberg", email = "henriknf@simula.no"}]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
keywords = ["mechanics", "0D"]
urls = {Homepage = "https://github.com/ComputationalPhysiology/zero-mech"}
requires-python = ">=3.10"
dependencies = [
    "sympy",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
examples = [
    "gotranx",
    "scipy",
    "tqdm",
    "numpy",
    "matplotlib",
    "ipython",
    "numba",
]
dev = [
    "bump-my-version",
    "ipython",
    "pdbpp",
    "pre-commit",
    "twine",
    "wheel",
]
docs = [
    "jupyter-book",
    "jupytext",
    "zero-mech[examples]"
]
test = [
    "pytest",
    "pytest-cov",

]
lite = [
    "jupyterlite-core==0.5.0",
    "jupyterlab~=4.3.4",
    "notebook~=7.3.2",
    "jupyterlite-pyodide-kernel==0.5.0",
    "jupyterlab-night",
    "jupyterlab_miami_nights",
    "ipywidgets>=8.1.3,<9",
    "ipyevents>=2.0.1",
    "ipympl>=0.8.2",
]

[project.scripts]
gotranx = "gotranx.cli:app"


[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
"*" = ["*.lark"]

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
testpaths = ["tests"]


[tool.mypy]
files = ["src/zero_mech", "tests"]
ignore_missing_imports = true
exclude = [
    "docs",
    "examples",
]

[tool.coverage.run]
omit = ["src/zero_mech/__main__.py", "src/zero_mech/templates/__init__.py"]


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    "examples",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.bumpversion]
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
current_version = "0.1.2"


[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'
