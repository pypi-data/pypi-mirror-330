# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .individual_search_result import IndividualSearchResult
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class StreamSearchResponse(UniversalBaseModel):
    """
    The search response results.
    """

    type: typing.Literal["search_results"] = "search_results"
    search_results: typing.Optional[typing.List[IndividualSearchResult]] = pydantic.Field(default=None)
    """
    The ranked search results.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
