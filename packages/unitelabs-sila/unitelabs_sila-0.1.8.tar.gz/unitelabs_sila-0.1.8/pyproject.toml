[tool.poetry]
name = "unitelabs-sila"
version = "0.1.8"
description = "An un-opinionated SiLA 2 library."
keywords = ["SiLA 2", "laboratory", "automation", "connectivity"]
license = "MIT"
readme = "README.md"
homepage = "https://sila-standard.com"
repository = "https://gitlab.com/unitelabs/sila2/sila-python"
documentation = "https://gitlab.com/unitelabs/sila2/sila-python/-/README.md"
authors = ["UniteLabs <developers@unitelabs.io>"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
]
packages = [{include = "sila", from = "src"}]

[tool.poetry.urls]
"Bug Tracker" = "https://gitlab.com/unitelabs/sila2/sila-python/-/issues"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
grpcio = "1.70.0"
pure-protobuf = "3.0.0rc1"
zeroconf = "0.116.0"

[tool.poetry.group.dev.dependencies]
cryptography = "43.0.3"
pytest = "8.3.4"
pytest-asyncio = "0.25.3"
pytest-cov = "6.0.0"
ruff = "0.9.4"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
src = ["src", "tests"]
line-length = 120
target-version = "py39"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.coverage.report]
exclude_also = [
    "@typing.overload",
    "if typing.TYPE_CHECKING:"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
