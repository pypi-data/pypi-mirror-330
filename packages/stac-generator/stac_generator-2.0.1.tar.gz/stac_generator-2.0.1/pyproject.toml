[project]
name = "stac-generator"
version = "2.0.1"
description = "Framework providing a plugin architecture for metadata extraction and the generation of STACs."
authors = [
    {"name" = "Rhys Evans", "email" = "rhys.r.evans@stfc.ac.uk"}
]
requires-python = ">=3.10, <4"
license = "BSD - See stac_generator/LICENSE file for details"
readme = "README.md"
keywords = ['stac', 'metadata', 'plugin', 'framework']
dependencies = [
    "botocore == 1.21.44",
    "cachetools == 4.2.4",
    "certifi == 2023.7.22",
    "click == 8.1.7",
    "docutils == 0.20",
    "elasticsearch == 7.17.12",
    "httpx (>=0.28.0,<0.29.0)",
    "httpx-auth (>=0.23.0,<0.24.0)",
    "jinja2 == 3.1.3",
    "jmespath == 0.10.0",
    "packaging == 24.1",
    "pika == 1.2.0",
    "pydantic == 2.1.1",
    "pygments == 2.17.0",
    "pyparsing == 2.4.7",
    "python-dateutil == 2.8.2",
    "python-magic == 0.4.25",
    "pytz == 2021.1",
    "pyyaml == 6.0.1",
    "requests == 2.31.0",
    "s3transfer == 0.5.0",
    "siphon == 0.9",
    "snowballstemmer == 2.2.0",
    "tqdm == 4.62.3",
    "typing-extensions == 4.7.1",
    "setuptools (>=75.8.2,<75.9.0)",
    "extraction-methods (==1.0.1)",
    "bokeh (>=3.6.3,<4.0.0)",
    "dask (>=2025.2.0,<2026.0.0)",
    "distributed (>=2025.2.0,<2026.0.0)",
]

[project.urls]
Homepage = "https://github.com/cedadev/stac-generator"

[project.scripts]
stac_generator = 'stac_generator.scripts.stac_generator:main'
recipe_keys = 'stac_generator.scripts.recipe_keys:main'

[project.optional-dependencies]
docs = [
    "elasticsearch",
    "sphinx",
    "sphinxcontrib-programoutput",
    "sphinx-rtd-theme",
]
elasticsearch = ["elasticsearch"]
intake-esm = ["intake-esm"]
rabbitmq = ["pika"]
thredds = ["siphon"]

[tool.poetry.group.test.dependencies]
pytest = "^8.0.1"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']

[tool.isort]
profile = "black"

[tool.mypy]
strict = false
ignore_missing_imports = true
packages = "stac_generator"

[project.entry-points."stac_generator.inputs"]
elasticsearch_aggregation = "stac_generator.plugins.inputs.elasticsearch_aggregation:ElasticsearchAggregationInput"
file_system = "stac_generator.plugins.inputs.file_system:FileSystemInput"
intake_esm = "stac_generator.plugins.inputs.intake_esm:IntakeESMInput"
object_store = "stac_generator.plugins.inputs.object_store:ObjectStoreInput"
rabbitmq = "stac_generator.plugins.inputs.rabbit_mq:RabbitMQInput"
solr = "stac_generator.plugins.inputs.solr:SolrInput"
text_file = "stac_generator.plugins.inputs.text_file:TextFileInput"
thredds = "stac_generator.plugins.inputs.thredds:ThreddsInput"

[project.entry-points."stac_generator.outputs"]
elasticsearch = "stac_generator.plugins.outputs.elasticsearch:ElasticsearchOutput"
elasticsearch_bulk = "stac_generator.plugins.bulk_outputs.elasticsearch:ElasticsearchBulkOutput"
intake_esm = "stac_generator.plugins.outputs.intake_esm:IntakeESMOutput"
json_file = "stac_generator.plugins.outputs.json_file:JsonFileOutput"
rabbitmq = "stac_generator.plugins.outputs.rabbit_mq:RabbitMQOutput"
rabbitmq_bulk = "stac_generator.plugins.bulk_outputs.rabbit_mq:RabbitMQBulkOutput"
stac_fastapi = "stac_generator.plugins.outputs.stac_fastapi:STACFastAPIOutput"
standard_out = "stac_generator.plugins.outputs.standard_out:StandardOutOutput"
standard_out_bulk = "stac_generator.plugins.bulk_outputs.standard_out:StandardOutBulkOutput"
text_file = "stac_generator.plugins.outputs.text_file:TextFileOutput"

[project.entry-points."stac_generator.mappings"]
ceda = "stac_generator.plugins.mappings.ceda:CEDAMapping"
jinja = "stac_generator.plugins.mappings.jinja2:Jinja2Mapping"
stac = "stac_generator.plugins.mappings.stac:STACMapping"

[project.entry-points."stac_generator.generator"]
generator = "stac_generator.core.generator:Generator"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
