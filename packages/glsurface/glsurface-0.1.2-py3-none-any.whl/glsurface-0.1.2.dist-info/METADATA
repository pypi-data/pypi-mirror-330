Metadata-Version: 2.2
Name: glsurface
Version: 0.1.2
Summary: Some helper class
Author-email: Tianzhu Qiao <tq@feiyilin.com>
License: MIT License
        
        Copyright (c) 2018 Tianzhu Qiao
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/tianzhuqiao/glsurface
Classifier: Operating System :: OS Independent
Requires-Python: >=3.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: wxpython>=4.2.1
Requires-Dist: PyOpenGL>=3.1.9
Requires-Dist: PyOpenGL-accelerate>=3.1.9


# glsurface
**glsurface** is a python class to show 2d/3d data with [wxPython](https://wxpython.org/) and [PyOpenGL](https://pyopengl.sourceforge.net/).

## Installation
```shell
$ pip install glsurface
```

## Usage
1. Create a class from `TrackingSurface`
    ```python
    class Surface(TrackingSurface):
        def __init__(self, *args, **kwargs):
        TrackingSurface.__init__(self, *args, **kwargs)
        ...
    ```
2. Create an instance, and set data (optional)
    ```python
    class SurfacePanel(wx.Panel):

        def __init__(self, parent):
            wx.Panel.__init__(self, parent, -1)
            ...
            self.x = np.linspace(0, 2 * np.pi, 30).reshape((1, 30))
            z = np.cos(self.x).T * np.sin(self.x)
            self.canvas = Surface(self, {'z': z})
            ...

    ```
3. Update the data
    1. Add new frame data to the current frame buffer
        ```python
        self.canvas.NewFrameArrive(z, silent=False)
        ```
    2. Or reset the frame buffer with new data
        ```python
        self.canvas.SetFrames(points, reset_buf_len=True, silent=False)
        ```
Check `gltest.py` for details.

## Known issues
1. On Linux, it may show the following error.
    ```bash
    OpenGL.error.Error: Attempt to retrieve context when no valid context
    ```
    In this case, try different OpenGL platform, e.g.,
    ```bash
    $ export PYOPENGL_PLATFORM='egl'
    ```
    All supported platforms can be found here `/path/to/python/site-packages/OpenGL/__init__.py`

2. For EGL Surface, you may need to call `CreateSurface`, as mentioned [here](https://docs.wxpython.org/wx.glcanvas.GLCanvas.html#wx.glcanvas.GLCanvas.CreateSurface)

<img src="https://github.com/tianzhuqiao/glsurface/blob/master/images/demo.gif?raw=true" width="400"></img>
