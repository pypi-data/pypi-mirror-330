# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from scicat_sdk_py.models.create_job_dto import CreateJobDto

class TestCreateJobDto(unittest.TestCase):
    """CreateJobDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateJobDto:
        """Test CreateJobDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateJobDto`
        """
        model = CreateJobDto()
        if include_optional:
            return CreateJobDto(
                email_job_initiator = '',
                type = '',
                job_params = None,
                dataset_list = [
                    scicat_sdk_py.models.i_dataset_list.IDatasetList(
                        pid = '', 
                        files = [
                            ''
                            ], )
                    ],
                execution_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                job_status_message = '',
                job_result_object = None
            )
        else:
            return CreateJobDto(
                email_job_initiator = '',
                type = '',
                dataset_list = [
                    scicat_sdk_py.models.i_dataset_list.IDatasetList(
                        pid = '', 
                        files = [
                            ''
                            ], )
                    ],
        )
        """

    def testCreateJobDto(self):
        """Test CreateJobDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
