import datetime
from unittest import mock

import pytest

from vallox_websocket_api import Alarm, MetricData, Vallox


@pytest.fixture
def vallox():
    client = Vallox("127.0.0.1")
    client.set_values = mock.AsyncMock()

    return client


@pytest.fixture
def metrics():
    return {
        "A_CYC_TOTAL_FAULT_COUNT": 1,
        "A_CYC_FAULT_ACTIVITY": 2,
        "A_CYC_FAULT_ACTIVITY_10": 0,
        "A_CYC_FAULT_ACTIVITY_11": 0,
        "A_CYC_FAULT_ACTIVITY_12": 0,
        "A_CYC_FAULT_ACTIVITY_13": 0,
        "A_CYC_FAULT_ACTIVITY_14": 0,
        "A_CYC_FAULT_ACTIVITY_15": 0,
        "A_CYC_FAULT_ACTIVITY_16": 0,
        "A_CYC_FAULT_ACTIVITY_17": 0,
        "A_CYC_FAULT_ACTIVITY_18": 0,
        "A_CYC_FAULT_ACTIVITY_19": 0,
        "A_CYC_FAULT_ACTIVITY_2": 0,
        "A_CYC_FAULT_ACTIVITY_20": 0,
        "A_CYC_FAULT_ACTIVITY_21": 0,
        "A_CYC_FAULT_ACTIVITY_22": 0,
        "A_CYC_FAULT_ACTIVITY_23": 0,
        "A_CYC_FAULT_ACTIVITY_24": 0,
        "A_CYC_FAULT_ACTIVITY_25": 0,
        "A_CYC_FAULT_ACTIVITY_26": 0,
        "A_CYC_FAULT_ACTIVITY_27": 0,
        "A_CYC_FAULT_ACTIVITY_28": 0,
        "A_CYC_FAULT_ACTIVITY_29": 0,
        "A_CYC_FAULT_ACTIVITY_3": 0,
        "A_CYC_FAULT_ACTIVITY_30": 0,
        "A_CYC_FAULT_ACTIVITY_31": 0,
        "A_CYC_FAULT_ACTIVITY_32": 0,
        "A_CYC_FAULT_ACTIVITY_33": 0,
        "A_CYC_FAULT_ACTIVITY_4": 0,
        "A_CYC_FAULT_ACTIVITY_5": 0,
        "A_CYC_FAULT_ACTIVITY_6": 0,
        "A_CYC_FAULT_ACTIVITY_7": 0,
        "A_CYC_FAULT_ACTIVITY_8": 0,
        "A_CYC_FAULT_ACTIVITY_9": 0,
        "A_CYC_FAULT_CODE": 23,
        "A_CYC_FAULT_CODE_10": 0,
        "A_CYC_FAULT_CODE_11": 0,
        "A_CYC_FAULT_CODE_12": 0,
        "A_CYC_FAULT_CODE_13": 0,
        "A_CYC_FAULT_CODE_14": 0,
        "A_CYC_FAULT_CODE_15": 0,
        "A_CYC_FAULT_CODE_16": 0,
        "A_CYC_FAULT_CODE_17": 0,
        "A_CYC_FAULT_CODE_18": 0,
        "A_CYC_FAULT_CODE_19": 0,
        "A_CYC_FAULT_CODE_2": 0,
        "A_CYC_FAULT_CODE_20": 0,
        "A_CYC_FAULT_CODE_21": 0,
        "A_CYC_FAULT_CODE_22": 0,
        "A_CYC_FAULT_CODE_23": 0,
        "A_CYC_FAULT_CODE_24": 0,
        "A_CYC_FAULT_CODE_25": 0,
        "A_CYC_FAULT_CODE_26": 0,
        "A_CYC_FAULT_CODE_27": 0,
        "A_CYC_FAULT_CODE_28": 0,
        "A_CYC_FAULT_CODE_29": 0,
        "A_CYC_FAULT_CODE_3": 0,
        "A_CYC_FAULT_CODE_30": 0,
        "A_CYC_FAULT_CODE_31": 0,
        "A_CYC_FAULT_CODE_32": 0,
        "A_CYC_FAULT_CODE_33": 0,
        "A_CYC_FAULT_CODE_4": 0,
        "A_CYC_FAULT_CODE_5": 0,
        "A_CYC_FAULT_CODE_6": 0,
        "A_CYC_FAULT_CODE_7": 0,
        "A_CYC_FAULT_CODE_8": 0,
        "A_CYC_FAULT_CODE_9": 0,
        "A_CYC_FAULT_COUNT": 0,
        "A_CYC_FAULT_COUNT_10": 0,
        "A_CYC_FAULT_COUNT_11": 0,
        "A_CYC_FAULT_COUNT_12": 0,
        "A_CYC_FAULT_COUNT_13": 0,
        "A_CYC_FAULT_COUNT_14": 0,
        "A_CYC_FAULT_COUNT_15": 0,
        "A_CYC_FAULT_COUNT_16": 0,
        "A_CYC_FAULT_COUNT_17": 0,
        "A_CYC_FAULT_COUNT_18": 0,
        "A_CYC_FAULT_COUNT_19": 0,
        "A_CYC_FAULT_COUNT_2": 0,
        "A_CYC_FAULT_COUNT_20": 0,
        "A_CYC_FAULT_COUNT_21": 0,
        "A_CYC_FAULT_COUNT_22": 0,
        "A_CYC_FAULT_COUNT_23": 0,
        "A_CYC_FAULT_COUNT_24": 0,
        "A_CYC_FAULT_COUNT_25": 0,
        "A_CYC_FAULT_COUNT_26": 0,
        "A_CYC_FAULT_COUNT_27": 0,
        "A_CYC_FAULT_COUNT_28": 0,
        "A_CYC_FAULT_COUNT_29": 0,
        "A_CYC_FAULT_COUNT_3": 0,
        "A_CYC_FAULT_COUNT_30": 0,
        "A_CYC_FAULT_COUNT_31": 0,
        "A_CYC_FAULT_COUNT_32": 0,
        "A_CYC_FAULT_COUNT_33": 0,
        "A_CYC_FAULT_COUNT_4": 0,
        "A_CYC_FAULT_COUNT_5": 0,
        "A_CYC_FAULT_COUNT_6": 0,
        "A_CYC_FAULT_COUNT_7": 0,
        "A_CYC_FAULT_COUNT_8": 0,
        "A_CYC_FAULT_COUNT_9": 0,
        "A_CYC_FAULT_FIRST_DATE": 12322,
        "A_CYC_FAULT_FIRST_DATE_10": 0,
        "A_CYC_FAULT_FIRST_DATE_11": 0,
        "A_CYC_FAULT_FIRST_DATE_12": 0,
        "A_CYC_FAULT_FIRST_DATE_13": 0,
        "A_CYC_FAULT_FIRST_DATE_14": 0,
        "A_CYC_FAULT_FIRST_DATE_15": 0,
        "A_CYC_FAULT_FIRST_DATE_16": 0,
        "A_CYC_FAULT_FIRST_DATE_17": 0,
        "A_CYC_FAULT_FIRST_DATE_18": 0,
        "A_CYC_FAULT_FIRST_DATE_19": 0,
        "A_CYC_FAULT_FIRST_DATE_2": 0,
        "A_CYC_FAULT_FIRST_DATE_20": 0,
        "A_CYC_FAULT_FIRST_DATE_21": 0,
        "A_CYC_FAULT_FIRST_DATE_22": 0,
        "A_CYC_FAULT_FIRST_DATE_23": 0,
        "A_CYC_FAULT_FIRST_DATE_24": 0,
        "A_CYC_FAULT_FIRST_DATE_25": 0,
        "A_CYC_FAULT_FIRST_DATE_26": 0,
        "A_CYC_FAULT_FIRST_DATE_27": 0,
        "A_CYC_FAULT_FIRST_DATE_28": 0,
        "A_CYC_FAULT_FIRST_DATE_29": 0,
        "A_CYC_FAULT_FIRST_DATE_3": 0,
        "A_CYC_FAULT_FIRST_DATE_30": 0,
        "A_CYC_FAULT_FIRST_DATE_31": 0,
        "A_CYC_FAULT_FIRST_DATE_32": 0,
        "A_CYC_FAULT_FIRST_DATE_33": 0,
        "A_CYC_FAULT_FIRST_DATE_4": 0,
        "A_CYC_FAULT_FIRST_DATE_5": 0,
        "A_CYC_FAULT_FIRST_DATE_6": 0,
        "A_CYC_FAULT_FIRST_DATE_7": 0,
        "A_CYC_FAULT_FIRST_DATE_8": 0,
        "A_CYC_FAULT_FIRST_DATE_9": 0,
        "A_CYC_FAULT_LAST_DATE": 12327,
        "A_CYC_FAULT_LAST_DATE_10": 0,
        "A_CYC_FAULT_LAST_DATE_11": 0,
        "A_CYC_FAULT_LAST_DATE_12": 0,
        "A_CYC_FAULT_LAST_DATE_13": 0,
        "A_CYC_FAULT_LAST_DATE_14": 0,
        "A_CYC_FAULT_LAST_DATE_15": 0,
        "A_CYC_FAULT_LAST_DATE_16": 0,
        "A_CYC_FAULT_LAST_DATE_17": 0,
        "A_CYC_FAULT_LAST_DATE_18": 0,
        "A_CYC_FAULT_LAST_DATE_19": 0,
        "A_CYC_FAULT_LAST_DATE_2": 0,
        "A_CYC_FAULT_LAST_DATE_20": 0,
        "A_CYC_FAULT_LAST_DATE_21": 0,
        "A_CYC_FAULT_LAST_DATE_22": 0,
        "A_CYC_FAULT_LAST_DATE_23": 0,
        "A_CYC_FAULT_LAST_DATE_24": 0,
        "A_CYC_FAULT_LAST_DATE_25": 0,
        "A_CYC_FAULT_LAST_DATE_26": 0,
        "A_CYC_FAULT_LAST_DATE_27": 0,
        "A_CYC_FAULT_LAST_DATE_28": 0,
        "A_CYC_FAULT_LAST_DATE_29": 0,
        "A_CYC_FAULT_LAST_DATE_3": 0,
        "A_CYC_FAULT_LAST_DATE_30": 0,
        "A_CYC_FAULT_LAST_DATE_31": 0,
        "A_CYC_FAULT_LAST_DATE_32": 0,
        "A_CYC_FAULT_LAST_DATE_33": 0,
        "A_CYC_FAULT_LAST_DATE_4": 0,
        "A_CYC_FAULT_LAST_DATE_5": 0,
        "A_CYC_FAULT_LAST_DATE_6": 0,
        "A_CYC_FAULT_LAST_DATE_7": 0,
        "A_CYC_FAULT_LAST_DATE_8": 0,
        "A_CYC_FAULT_LAST_DATE_9": 0,
        "A_CYC_FAULT_SEVERITY": 1,
        "A_CYC_FAULT_SEVERITY_10": 0,
        "A_CYC_FAULT_SEVERITY_11": 0,
        "A_CYC_FAULT_SEVERITY_12": 0,
        "A_CYC_FAULT_SEVERITY_13": 0,
        "A_CYC_FAULT_SEVERITY_14": 0,
        "A_CYC_FAULT_SEVERITY_15": 0,
        "A_CYC_FAULT_SEVERITY_16": 0,
        "A_CYC_FAULT_SEVERITY_17": 0,
        "A_CYC_FAULT_SEVERITY_18": 0,
        "A_CYC_FAULT_SEVERITY_19": 0,
        "A_CYC_FAULT_SEVERITY_2": 0,
        "A_CYC_FAULT_SEVERITY_20": 0,
        "A_CYC_FAULT_SEVERITY_21": 0,
        "A_CYC_FAULT_SEVERITY_22": 0,
        "A_CYC_FAULT_SEVERITY_23": 0,
        "A_CYC_FAULT_SEVERITY_24": 0,
        "A_CYC_FAULT_SEVERITY_25": 0,
        "A_CYC_FAULT_SEVERITY_26": 0,
        "A_CYC_FAULT_SEVERITY_27": 0,
        "A_CYC_FAULT_SEVERITY_28": 0,
        "A_CYC_FAULT_SEVERITY_29": 0,
        "A_CYC_FAULT_SEVERITY_3": 0,
        "A_CYC_FAULT_SEVERITY_30": 0,
        "A_CYC_FAULT_SEVERITY_31": 0,
        "A_CYC_FAULT_SEVERITY_32": 0,
        "A_CYC_FAULT_SEVERITY_33": 0,
        "A_CYC_FAULT_SEVERITY_4": 0,
        "A_CYC_FAULT_SEVERITY_5": 0,
        "A_CYC_FAULT_SEVERITY_6": 0,
        "A_CYC_FAULT_SEVERITY_7": 0,
        "A_CYC_FAULT_SEVERITY_8": 0,
        "A_CYC_FAULT_SEVERITY_9": 0,
    }


async def test_get_info(metrics: dict):
    data = MetricData(metrics)
    alarms = data.get_alarms(skip_solved=False)

    assert len(alarms) == 1

    alarm = alarms[0]
    assert alarm.nr == 1
    assert alarm.code == 23
    assert alarm.severity == Alarm.Severity.SEVERE
    assert alarm.activity == Alarm.Activity.SOLVED
    assert alarm.count == 0
    assert alarm.first_date == datetime.date(2024, 1, 2)
    assert alarm.last_date == datetime.date(2024, 1, 7)
    assert alarm.message == "Low supply air temperature"


async def test_resolve_alarm(vallox: Vallox):
    alarm = Alarm(
        nr=1,
        code=23,
        severity=Alarm.Severity.SEVERE,
        first_date=datetime.date(2024, 1, 2),
        last_date=datetime.date(2024, 1, 7),
        count=0,
        activity=Alarm.Activity.ACTIVE,
    )

    await vallox.resolve_alarm(alarm)

    vallox.set_values.assert_called_once_with({"A_CYC_FAULT_ACTIVITY": 2})
