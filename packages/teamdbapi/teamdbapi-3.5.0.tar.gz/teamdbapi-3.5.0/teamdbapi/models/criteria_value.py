# coding: utf-8

"""
    Trackside Software TeamDB API v2.0

    This API enables you to access TeamDB data  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@trackside.fr
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class CriteriaValue(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'criteria_id': 'str',
        'value_double': 'float',
        'value_int': 'int',
        'value_time': 'int'
    }

    attribute_map = {
        'criteria_id': 'CriteriaId',
        'value_double': 'ValueDouble',
        'value_int': 'ValueInt',
        'value_time': 'ValueTime'
    }

    def __init__(self, criteria_id=None, value_double=None, value_int=None, value_time=None):  # noqa: E501
        """CriteriaValue - a model defined in Swagger"""  # noqa: E501
        self._criteria_id = None
        self._value_double = None
        self._value_int = None
        self._value_time = None
        self.discriminator = None
        if criteria_id is not None:
            self.criteria_id = criteria_id
        if value_double is not None:
            self.value_double = value_double
        if value_int is not None:
            self.value_int = value_int
        if value_time is not None:
            self.value_time = value_time

    @property
    def criteria_id(self):
        """Gets the criteria_id of this CriteriaValue.  # noqa: E501

        The criteria unique identifier  # noqa: E501

        :return: The criteria_id of this CriteriaValue.  # noqa: E501
        :rtype: str
        """
        return self._criteria_id

    @criteria_id.setter
    def criteria_id(self, criteria_id):
        """Sets the criteria_id of this CriteriaValue.

        The criteria unique identifier  # noqa: E501

        :param criteria_id: The criteria_id of this CriteriaValue.  # noqa: E501
        :type: str
        """

        self._criteria_id = criteria_id

    @property
    def value_double(self):
        """Gets the value_double of this CriteriaValue.  # noqa: E501

        The double value for the criteria  # noqa: E501

        :return: The value_double of this CriteriaValue.  # noqa: E501
        :rtype: float
        """
        return self._value_double

    @value_double.setter
    def value_double(self, value_double):
        """Sets the value_double of this CriteriaValue.

        The double value for the criteria  # noqa: E501

        :param value_double: The value_double of this CriteriaValue.  # noqa: E501
        :type: float
        """

        self._value_double = value_double

    @property
    def value_int(self):
        """Gets the value_int of this CriteriaValue.  # noqa: E501

        The integer value for the criteria  # noqa: E501

        :return: The value_int of this CriteriaValue.  # noqa: E501
        :rtype: int
        """
        return self._value_int

    @value_int.setter
    def value_int(self, value_int):
        """Sets the value_int of this CriteriaValue.

        The integer value for the criteria  # noqa: E501

        :param value_int: The value_int of this CriteriaValue.  # noqa: E501
        :type: int
        """

        self._value_int = value_int

    @property
    def value_time(self):
        """Gets the value_time of this CriteriaValue.  # noqa: E501

        The timespan value for the criteria  # noqa: E501

        :return: The value_time of this CriteriaValue.  # noqa: E501
        :rtype: int
        """
        return self._value_time

    @value_time.setter
    def value_time(self, value_time):
        """Sets the value_time of this CriteriaValue.

        The timespan value for the criteria  # noqa: E501

        :param value_time: The value_time of this CriteriaValue.  # noqa: E501
        :type: int
        """

        self._value_time = value_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CriteriaValue, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CriteriaValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
