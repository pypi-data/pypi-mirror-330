# coding: utf-8

"""
    Trackside Software TeamDB API v2.0

    This API enables you to access TeamDB data  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@trackside.fr
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class CriteriaValueDetail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'values_date_utc': 'datetime',
        'event_id': 'str',
        'event_name': 'str',
        'car_id': 'str',
        'car_name': 'str',
        'session_id': 'str',
        'session_name': 'str',
        'run_id': 'str',
        'run_name': 'str',
        'component_id': 'str',
        'criteria_id': 'str',
        'value_double': 'float',
        'value_int': 'int',
        'value_time': 'float',
        'criterion_name': 'str',
        'distance_run': 'float',
        'time_run': 'float',
        'distance_run_factored': 'float',
        'distance_run_power': 'float',
        'time_run_power': 'float',
        'energy_run': 'float'
    }

    attribute_map = {
        'values_date_utc': 'ValuesDateUtc',
        'event_id': 'EventId',
        'event_name': 'EventName',
        'car_id': 'CarId',
        'car_name': 'CarName',
        'session_id': 'SessionId',
        'session_name': 'SessionName',
        'run_id': 'RunId',
        'run_name': 'RunName',
        'component_id': 'ComponentId',
        'criteria_id': 'CriteriaId',
        'value_double': 'ValueDouble',
        'value_int': 'ValueInt',
        'value_time': 'ValueTime',
        'criterion_name': 'CriterionName',
        'distance_run': 'DistanceRun',
        'time_run': 'TimeRun',
        'distance_run_factored': 'DistanceRunFactored',
        'distance_run_power': 'DistanceRunPower',
        'time_run_power': 'TimeRunPower',
        'energy_run': 'EnergyRun'
    }

    def __init__(self, values_date_utc=None, event_id=None, event_name=None, car_id=None, car_name=None, session_id=None, session_name=None, run_id=None, run_name=None, component_id=None, criteria_id=None, value_double=None, value_int=None, value_time=None, criterion_name=None, distance_run=None, time_run=None, distance_run_factored=None, distance_run_power=None, time_run_power=None, energy_run=None):  # noqa: E501
        """CriteriaValueDetail - a model defined in Swagger"""  # noqa: E501
        self._values_date_utc = None
        self._event_id = None
        self._event_name = None
        self._car_id = None
        self._car_name = None
        self._session_id = None
        self._session_name = None
        self._run_id = None
        self._run_name = None
        self._component_id = None
        self._criteria_id = None
        self._value_double = None
        self._value_int = None
        self._value_time = None
        self._criterion_name = None
        self._distance_run = None
        self._time_run = None
        self._distance_run_factored = None
        self._distance_run_power = None
        self._time_run_power = None
        self._energy_run = None
        self.discriminator = None
        if values_date_utc is not None:
            self.values_date_utc = values_date_utc
        if event_id is not None:
            self.event_id = event_id
        if event_name is not None:
            self.event_name = event_name
        if car_id is not None:
            self.car_id = car_id
        if car_name is not None:
            self.car_name = car_name
        if session_id is not None:
            self.session_id = session_id
        if session_name is not None:
            self.session_name = session_name
        if run_id is not None:
            self.run_id = run_id
        if run_name is not None:
            self.run_name = run_name
        if component_id is not None:
            self.component_id = component_id
        if criteria_id is not None:
            self.criteria_id = criteria_id
        if value_double is not None:
            self.value_double = value_double
        if value_int is not None:
            self.value_int = value_int
        if value_time is not None:
            self.value_time = value_time
        if criterion_name is not None:
            self.criterion_name = criterion_name
        if distance_run is not None:
            self.distance_run = distance_run
        if time_run is not None:
            self.time_run = time_run
        if distance_run_factored is not None:
            self.distance_run_factored = distance_run_factored
        if distance_run_power is not None:
            self.distance_run_power = distance_run_power
        if time_run_power is not None:
            self.time_run_power = time_run_power
        if energy_run is not None:
            self.energy_run = energy_run

    @property
    def values_date_utc(self):
        """Gets the values_date_utc of this CriteriaValueDetail.  # noqa: E501

        The criterion date UTC  # noqa: E501

        :return: The values_date_utc of this CriteriaValueDetail.  # noqa: E501
        :rtype: datetime
        """
        return self._values_date_utc

    @values_date_utc.setter
    def values_date_utc(self, values_date_utc):
        """Sets the values_date_utc of this CriteriaValueDetail.

        The criterion date UTC  # noqa: E501

        :param values_date_utc: The values_date_utc of this CriteriaValueDetail.  # noqa: E501
        :type: datetime
        """

        self._values_date_utc = values_date_utc

    @property
    def event_id(self):
        """Gets the event_id of this CriteriaValueDetail.  # noqa: E501

        The event unique identifier  # noqa: E501

        :return: The event_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this CriteriaValueDetail.

        The event unique identifier  # noqa: E501

        :param event_id: The event_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._event_id = event_id

    @property
    def event_name(self):
        """Gets the event_name of this CriteriaValueDetail.  # noqa: E501

        The event name  # noqa: E501

        :return: The event_name of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._event_name

    @event_name.setter
    def event_name(self, event_name):
        """Sets the event_name of this CriteriaValueDetail.

        The event name  # noqa: E501

        :param event_name: The event_name of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._event_name = event_name

    @property
    def car_id(self):
        """Gets the car_id of this CriteriaValueDetail.  # noqa: E501

        Car unique identifier  # noqa: E501

        :return: The car_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._car_id

    @car_id.setter
    def car_id(self, car_id):
        """Sets the car_id of this CriteriaValueDetail.

        Car unique identifier  # noqa: E501

        :param car_id: The car_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._car_id = car_id

    @property
    def car_name(self):
        """Gets the car_name of this CriteriaValueDetail.  # noqa: E501

        The car name  # noqa: E501

        :return: The car_name of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._car_name

    @car_name.setter
    def car_name(self, car_name):
        """Sets the car_name of this CriteriaValueDetail.

        The car name  # noqa: E501

        :param car_name: The car_name of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._car_name = car_name

    @property
    def session_id(self):
        """Gets the session_id of this CriteriaValueDetail.  # noqa: E501

        The session unique identifier  # noqa: E501

        :return: The session_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this CriteriaValueDetail.

        The session unique identifier  # noqa: E501

        :param session_id: The session_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._session_id = session_id

    @property
    def session_name(self):
        """Gets the session_name of this CriteriaValueDetail.  # noqa: E501

        The session name  # noqa: E501

        :return: The session_name of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._session_name

    @session_name.setter
    def session_name(self, session_name):
        """Sets the session_name of this CriteriaValueDetail.

        The session name  # noqa: E501

        :param session_name: The session_name of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._session_name = session_name

    @property
    def run_id(self):
        """Gets the run_id of this CriteriaValueDetail.  # noqa: E501

        The run unique identifier  # noqa: E501

        :return: The run_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._run_id

    @run_id.setter
    def run_id(self, run_id):
        """Sets the run_id of this CriteriaValueDetail.

        The run unique identifier  # noqa: E501

        :param run_id: The run_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._run_id = run_id

    @property
    def run_name(self):
        """Gets the run_name of this CriteriaValueDetail.  # noqa: E501

        The run name  # noqa: E501

        :return: The run_name of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._run_name

    @run_name.setter
    def run_name(self, run_name):
        """Sets the run_name of this CriteriaValueDetail.

        The run name  # noqa: E501

        :param run_name: The run_name of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._run_name = run_name

    @property
    def component_id(self):
        """Gets the component_id of this CriteriaValueDetail.  # noqa: E501

        Component unique identifier (corresponing to the component's revision)  # noqa: E501

        :return: The component_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this CriteriaValueDetail.

        Component unique identifier (corresponing to the component's revision)  # noqa: E501

        :param component_id: The component_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._component_id = component_id

    @property
    def criteria_id(self):
        """Gets the criteria_id of this CriteriaValueDetail.  # noqa: E501

        Criterion unique identifier  # noqa: E501

        :return: The criteria_id of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._criteria_id

    @criteria_id.setter
    def criteria_id(self, criteria_id):
        """Sets the criteria_id of this CriteriaValueDetail.

        Criterion unique identifier  # noqa: E501

        :param criteria_id: The criteria_id of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._criteria_id = criteria_id

    @property
    def value_double(self):
        """Gets the value_double of this CriteriaValueDetail.  # noqa: E501

        Criterion value of type double  # noqa: E501

        :return: The value_double of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._value_double

    @value_double.setter
    def value_double(self, value_double):
        """Sets the value_double of this CriteriaValueDetail.

        Criterion value of type double  # noqa: E501

        :param value_double: The value_double of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._value_double = value_double

    @property
    def value_int(self):
        """Gets the value_int of this CriteriaValueDetail.  # noqa: E501

        Criterion value of type int  # noqa: E501

        :return: The value_int of this CriteriaValueDetail.  # noqa: E501
        :rtype: int
        """
        return self._value_int

    @value_int.setter
    def value_int(self, value_int):
        """Sets the value_int of this CriteriaValueDetail.

        Criterion value of type int  # noqa: E501

        :param value_int: The value_int of this CriteriaValueDetail.  # noqa: E501
        :type: int
        """

        self._value_int = value_int

    @property
    def value_time(self):
        """Gets the value_time of this CriteriaValueDetail.  # noqa: E501

        Criterion value of type double (in seconds)  # noqa: E501

        :return: The value_time of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._value_time

    @value_time.setter
    def value_time(self, value_time):
        """Sets the value_time of this CriteriaValueDetail.

        Criterion value of type double (in seconds)  # noqa: E501

        :param value_time: The value_time of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._value_time = value_time

    @property
    def criterion_name(self):
        """Gets the criterion_name of this CriteriaValueDetail.  # noqa: E501

        Criterion name  # noqa: E501

        :return: The criterion_name of this CriteriaValueDetail.  # noqa: E501
        :rtype: str
        """
        return self._criterion_name

    @criterion_name.setter
    def criterion_name(self, criterion_name):
        """Sets the criterion_name of this CriteriaValueDetail.

        Criterion name  # noqa: E501

        :param criterion_name: The criterion_name of this CriteriaValueDetail.  # noqa: E501
        :type: str
        """

        self._criterion_name = criterion_name

    @property
    def distance_run(self):
        """Gets the distance_run of this CriteriaValueDetail.  # noqa: E501

        Distance realized on the run  # noqa: E501

        :return: The distance_run of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._distance_run

    @distance_run.setter
    def distance_run(self, distance_run):
        """Sets the distance_run of this CriteriaValueDetail.

        Distance realized on the run  # noqa: E501

        :param distance_run: The distance_run of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._distance_run = distance_run

    @property
    def time_run(self):
        """Gets the time_run of this CriteriaValueDetail.  # noqa: E501

        Time elapsed in seconds on the run  # noqa: E501

        :return: The time_run of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._time_run

    @time_run.setter
    def time_run(self, time_run):
        """Sets the time_run of this CriteriaValueDetail.

        Time elapsed in seconds on the run  # noqa: E501

        :param time_run: The time_run of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._time_run = time_run

    @property
    def distance_run_factored(self):
        """Gets the distance_run_factored of this CriteriaValueDetail.  # noqa: E501

        Factored distance realized on the run  # noqa: E501

        :return: The distance_run_factored of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._distance_run_factored

    @distance_run_factored.setter
    def distance_run_factored(self, distance_run_factored):
        """Sets the distance_run_factored of this CriteriaValueDetail.

        Factored distance realized on the run  # noqa: E501

        :param distance_run_factored: The distance_run_factored of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._distance_run_factored = distance_run_factored

    @property
    def distance_run_power(self):
        """Gets the distance_run_power of this CriteriaValueDetail.  # noqa: E501

        La distance pleine charge parcourue par le component  # noqa: E501

        :return: The distance_run_power of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._distance_run_power

    @distance_run_power.setter
    def distance_run_power(self, distance_run_power):
        """Sets the distance_run_power of this CriteriaValueDetail.

        La distance pleine charge parcourue par le component  # noqa: E501

        :param distance_run_power: The distance_run_power of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._distance_run_power = distance_run_power

    @property
    def time_run_power(self):
        """Gets the time_run_power of this CriteriaValueDetail.  # noqa: E501

        Time elapsed in seconds during power mode on the run  # noqa: E501

        :return: The time_run_power of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._time_run_power

    @time_run_power.setter
    def time_run_power(self, time_run_power):
        """Sets the time_run_power of this CriteriaValueDetail.

        Time elapsed in seconds during power mode on the run  # noqa: E501

        :param time_run_power: The time_run_power of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._time_run_power = time_run_power

    @property
    def energy_run(self):
        """Gets the energy_run of this CriteriaValueDetail.  # noqa: E501

        Energy level on the run  # noqa: E501

        :return: The energy_run of this CriteriaValueDetail.  # noqa: E501
        :rtype: float
        """
        return self._energy_run

    @energy_run.setter
    def energy_run(self, energy_run):
        """Sets the energy_run of this CriteriaValueDetail.

        Energy level on the run  # noqa: E501

        :param energy_run: The energy_run of this CriteriaValueDetail.  # noqa: E501
        :type: float
        """

        self._energy_run = energy_run

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CriteriaValueDetail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CriteriaValueDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
