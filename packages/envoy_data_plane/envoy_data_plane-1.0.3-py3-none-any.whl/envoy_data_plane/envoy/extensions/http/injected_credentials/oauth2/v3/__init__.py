# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/http/injected_credentials/oauth2/v3/oauth2.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import timedelta
from typing import List

import betterproto

from ......config.core import v3 as _____config_core_v3__
from .....transport_sockets.tls import v3 as ____transport_sockets_tls_v3__


class OAuth2AuthType(betterproto.Enum):
    BASIC_AUTH = 0
    """
    The ``client_id`` and ``client_secret`` will be sent using HTTP Basic
    authentication scheme.
    """

    URL_ENCODED_BODY = 1
    """
    The ``client_id`` and ``client_secret`` will be sent in the URL encoded
    request body. This type should only be used when Auth server does not
    support Basic authentication.
    """


@dataclass(eq=False, repr=False)
class OAuth2(betterproto.Message):
    """
    OAuth2 extension can be used to retrieve an OAuth2 access token from an
    authorization server and inject it into the proxied requests. Currently,
    only the Client Credentials Grant flow is supported. The access token will
    be injected into the request headers using the ``Authorization`` header as
    a bearer token.
    """

    token_endpoint: "_____config_core_v3__.HttpUri" = betterproto.message_field(1)
    """
    Endpoint on the authorization server to retrieve the access token from.
    Refer to [RFC 6749: The OAuth 2.0 Authorization Framework](https://www.rfc-
    editor.org/rfc/rfc6749#section-3.2) for details.
    """

    scopes: List[str] = betterproto.string_field(2)
    """
    Optional list of OAuth scopes to be claimed in the authorization request.
    Refer to [RFC 6749: The OAuth 2.0 Authorization Framework](https://www.rfc-
    editor.org/rfc/rfc6749#section-4.4.2) for details.
    """

    client_credentials: "OAuth2ClientCredentials" = betterproto.message_field(
        3, group="flow_type"
    )
    """
    Client Credentials Grant. Refer to [RFC 6749: The OAuth 2.0 Authorization
    Framework](https://www.rfc-editor.org/rfc/rfc6749#section-4.4) for details.
    """

    token_fetch_retry_interval: timedelta = betterproto.message_field(4)
    """
    The interval between two successive retries to fetch token from Identity
    Provider. Default is 2 secs. The interval must be at least 1 second.
    """


@dataclass(eq=False, repr=False)
class OAuth2ClientCredentials(betterproto.Message):
    """
    Credentials to authenticate client to the authorization server. Refer to
    [RFC 6749: The OAuth 2.0 Authorization Framework](https://www.rfc-
    editor.org/rfc/rfc6749#section-2.3) for details.
    """

    client_id: str = betterproto.string_field(1)
    """
    Client ID. Refer to [RFC 6749: The OAuth 2.0 Authorization
    Framework](https://www.rfc-editor.org/rfc/rfc6749#section-2.3.1) for
    details.
    """

    client_secret: "____transport_sockets_tls_v3__.SdsSecretConfig" = (
        betterproto.message_field(2)
    )
    """
    Client secret. Refer to [RFC 6749: The OAuth 2.0 Authorization
    Framework](https://www.rfc-editor.org/rfc/rfc6749#section-2.3.1) for
    details.
    """

    auth_type: "OAuth2AuthType" = betterproto.enum_field(3)
    """
    The method to use when sending credentials to the authorization server.
    Refer to [RFC 6749: The OAuth 2.0 Authorization Framework](https://www.rfc-
    editor.org/rfc/rfc6749#section-2.3.1) for details.
    """
