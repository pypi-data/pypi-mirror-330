# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/compression/zstd/compressor/v3/zstd.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import Optional

import betterproto

from ......config.core import v3 as _____config_core_v3__


class ZstdStrategy(betterproto.Enum):
    """Reference to http://facebook.github.io/zstd/zstd_manual.html"""

    DEFAULT = 0
    FAST = 1
    DFAST = 2
    GREEDY = 3
    LAZY = 4
    LAZY2 = 5
    BTLAZY2 = 6
    BTOPT = 7
    BTULTRA = 8
    BTULTRA2 = 9


@dataclass(eq=False, repr=False)
class Zstd(betterproto.Message):
    """[#next-free-field: 6]"""

    compression_level: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT32
    )
    """
    Set compression parameters according to pre-defined compression level
    table. Note that exact compression parameters are dynamically determined,
    depending on both compression level and source content size (when known).
    Value 0 means default, and default level is 3. Setting a level does not
    automatically set all other compression parameters to default. Setting this
    will however eventually dynamically impact the compression parameters which
    have not been manually set. The manually set ones will 'stick'.
    """

    enable_checksum: bool = betterproto.bool_field(2)
    """
    A 32-bits checksum of content is written at end of frame. If not set,
    defaults to false.
    """

    strategy: "ZstdStrategy" = betterproto.enum_field(3)
    """
    The higher the value of selected strategy, the more complex it is,
    resulting in stronger and slower compression. Special: value 0 means "use
    default strategy".
    """

    dictionary: "_____config_core_v3__.DataSource" = betterproto.message_field(4)
    """
    A dictionary for compression. Zstd offers dictionary compression, which
    greatly improves efficiency on small files and messages. Each dictionary
    will be generated with a dictionary ID that can be used to search the same
    dictionary during decompression. Please refer to `zstd manual
    <https://github.com/facebook/zstd/blob/dev/programs/zstd.1.md#dictionary-
    builder>`_ to train a specific dictionary for compression.
    """

    chunk_size: Optional[int] = betterproto.message_field(
        5, wraps=betterproto.TYPE_UINT32
    )
    """
    Value for compressor's next output buffer. If not set, defaults to 4096.
    """
