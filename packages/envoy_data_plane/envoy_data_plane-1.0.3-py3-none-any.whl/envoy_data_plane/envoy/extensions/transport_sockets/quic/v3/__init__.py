# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/transport_sockets/quic/v3/quic_transport.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import Optional

import betterproto

from ...tls import v3 as __tls_v3__


@dataclass(eq=False, repr=False)
class QuicDownstreamTransport(betterproto.Message):
    """
    Configuration for Downstream QUIC transport socket. This provides Google's
    implementation of Google QUIC and IETF QUIC to Envoy.
    """

    downstream_tls_context: "__tls_v3__.DownstreamTlsContext" = (
        betterproto.message_field(1)
    )
    enable_early_data: Optional[bool] = betterproto.message_field(
        2, wraps=betterproto.TYPE_BOOL
    )
    """
    If false, QUIC will tell TLS to reject any early data and to stop issuing
    0-RTT credentials with resumption session tickets. This will prevent
    clients from sending 0-RTT requests. Default to true.
    """


@dataclass(eq=False, repr=False)
class QuicUpstreamTransport(betterproto.Message):
    """
    Configuration for Upstream QUIC transport socket. This provides Google's
    implementation of Google QUIC and IETF QUIC to Envoy.
    """

    upstream_tls_context: "__tls_v3__.UpstreamTlsContext" = betterproto.message_field(1)
