# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/grpc_field_extraction/v3/config.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import Dict

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class GrpcFieldExtractionConfig(betterproto.Message):
    descriptor_set: "_____config_core_v3__.DataSource" = betterproto.message_field(1)
    """
    The proto descriptor set binary for the gRPC services. It could be passed
    by a local file through ``Datasource.filename`` or embedded in the
    ``Datasource.inline_bytes``.
    """

    extractions_by_method: Dict[str, "FieldExtractions"] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    """
    Specify the extraction info. The key is the fully qualified gRPC method
    name. ``${package}.${Service}.${Method}``, like
    ``endpoints.examples.bookstore.BookStore.GetShelf`` The value is the field
    extractions for individual gRPC method.
    """


@dataclass(eq=False, repr=False)
class FieldExtractions(betterproto.Message):
    """
    This message can be used to support per route config approach later even
    though the Istio doesn't support that so far.
    """

    request_field_extractions: Dict[str, "RequestFieldValueDisposition"] = (
        betterproto.map_field(1, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE)
    )
    """
    The field extractions for requests. The key is the field path within the
    grpc request. For example, we can define ``foo.bar.name`` if we want to
    extract ``Request.foo.bar.name``. .. code-block:: proto  message Request {
    Foo foo = 1;  }  message Foo {    Bar bar = 1;  }  message Bar {    string
    name = 1;  }
    """


@dataclass(eq=False, repr=False)
class RequestFieldValueDisposition(betterproto.Message):
    dynamic_metadata: str = betterproto.string_field(1, group="disposition")
    """
    The dynamic metadata namespace. If empty,
    "envoy.filters.http.grpc_field_extraction" will be used by default.
    Unimplemented. Uses "envoy.filters.http.grpc_field_extraction" for now.
    """
