# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/rbac/v3/rbac.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto

from .......xds.type.matcher import v3 as ______xds_type_matcher_v3__
from ......config.rbac import v3 as _____config_rbac_v3__


@dataclass(eq=False, repr=False)
class Rbac(betterproto.Message):
    """RBAC filter config. [#next-free-field: 8]"""

    rules: "_____config_rbac_v3__.Rbac" = betterproto.message_field(1)
    """
    Specify the RBAC rules to be applied globally. If absent, no enforcing RBAC
    policy will be applied. If present and empty, DENY. If both rules and
    matcher are configured, rules will be ignored.
    """

    rules_stat_prefix: str = betterproto.string_field(6)
    """
    If specified, rules will emit stats with the given prefix. This is useful
    to distinguish the stat when there are more than 1 RBAC filter configured
    with rules.
    """

    matcher: "______xds_type_matcher_v3__.Matcher" = betterproto.message_field(4)
    """
    The match tree to use when resolving RBAC action for incoming requests.
    Requests do not match any matcher will be denied. If absent, no enforcing
    RBAC matcher will be applied. If present and empty, deny all requests.
    """

    shadow_rules: "_____config_rbac_v3__.Rbac" = betterproto.message_field(2)
    """
    Shadow rules are not enforced by the filter (i.e., returning a 403) but
    will emit stats and logs and can be used for rule testing. If absent, no
    shadow RBAC policy will be applied. If both shadow rules and shadow matcher
    are configured, shadow rules will be ignored.
    """

    shadow_matcher: "______xds_type_matcher_v3__.Matcher" = betterproto.message_field(5)
    """
    The match tree to use for emitting stats and logs which can be used for
    rule testing for incoming requests. If absent, no shadow matcher will be
    applied.
    """

    shadow_rules_stat_prefix: str = betterproto.string_field(3)
    """
    If specified, shadow rules will emit stats with the given prefix. This is
    useful to distinguish the stat when there are more than 1 RBAC filter
    configured with shadow rules.
    """

    track_per_rule_stats: bool = betterproto.bool_field(7)
    """
    If track_per_rule_stats is true, counters will be published for each rule
    and shadow rule.
    """


@dataclass(eq=False, repr=False)
class RbacPerRoute(betterproto.Message):
    rbac: "Rbac" = betterproto.message_field(2)
    """
    Override the global configuration of the filter with this new config. If
    absent, the global RBAC policy will be disabled for this route.
    """
