# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/generic_proxy/v3/generic_proxy.proto, envoy/extensions/filters/network/generic_proxy/v3/route.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from .......xds.type.matcher import v3 as ______xds_type_matcher_v3__
from ......config.accesslog import v3 as _____config_accesslog_v3__
from ......config.core import v3 as _____config_core_v3__
from ...http_connection_manager import v3 as __http_connection_manager_v3__


@dataclass(eq=False, repr=False)
class VirtualHost(betterproto.Message):
    name: str = betterproto.string_field(1)
    """The name of the virtual host."""

    hosts: List[str] = betterproto.string_field(2)
    """
    A list of hosts that will be matched to this virtual host. Wildcard hosts
    are supported in the suffix or prefix form. Host search order:  1. Exact
    names: ``www.foo.com``.  2. Suffix wildcards: ``*.foo.com`` or
    ``*-bar.foo.com``.  3. Prefix wildcards: ``foo.*`` or ``foo-*``.  4.
    Special wildcard ``*`` matching any host and will be the default virtual
    host. .. note::   The wildcard will not match the empty string.   e.g.
    ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.
    The longest wildcards match first.   Only a single virtual host in the
    entire route configuration can match on ``*``. A domain   must be unique
    across all virtual hosts or the config will fail to load.
    """

    routes: "______xds_type_matcher_v3__.Matcher" = betterproto.message_field(3)
    """
    The match tree to use when resolving route actions for incoming requests.
    """


@dataclass(eq=False, repr=False)
class RouteConfiguration(betterproto.Message):
    """
    The generic proxy makes use of the xDS matching API for routing
    configurations. In the below example, we combine a top level tree matcher
    with a linear matcher to match the incoming requests, and send the matching
    requests to v1 of the upstream service. .. code-block:: yaml   name:
    example   routes:     matcher_tree:       input:         name: request-
    service         typed_config:           "@type": type.googleapis.com/envoy.
    extensions.filters.network.generic_proxy.matcher.v3.ServiceMatchInput
    exact_match_map:         map:           service_name_0:
    matcher:               matcher_list:                 matchers:
    - predicate:                     and_matcher:
    predicate:                       - single_predicate:
    input:                             name: request-properties
    typed_config:                               "@type": type.googleapis.com/en
    voy.extensions.filters.network.generic_proxy.matcher.v3.PropertyMatchInput
    property_name: version                           value_match:
    exact: v1                       - single_predicate:
    input:                             name: request-properties
    typed_config:                               "@type": type.googleapis.com/en
    voy.extensions.filters.network.generic_proxy.matcher.v3.PropertyMatchInput
    property_name: user                           value_match:
    exact: john                   on_match:                     action:
    name: route                       typed_config:
    "@type": type.googleapis.com/envoy.extensions.filters.network.generic_proxy
    .action.v3.routeAction                         cluster: cluster_0
    """

    name: str = betterproto.string_field(1)
    """
    The name of the route configuration. For example, it might match
    route_config_name in envoy.extensions.filters.network.generic_proxy.v3.Rds.
    """

    routes: "______xds_type_matcher_v3__.Matcher" = betterproto.message_field(2)
    """
    The match tree to use when resolving route actions for incoming requests.
    If no any virtual host is configured in the ``virtual_hosts`` field or no
    special wildcard virtual host is configured, the ``routes`` field will be
    used as the default route table. If both the wildcard virtual host and
    ``routes`` are configured, the configuration will fail to load.
    """

    virtual_hosts: List["VirtualHost"] = betterproto.message_field(3)
    """An array of virtual hosts that make up the route table."""


@dataclass(eq=False, repr=False)
class GenericProxy(betterproto.Message):
    """[#next-free-field: 8]"""

    stat_prefix: str = betterproto.string_field(1)
    """The human readable prefix to use when emitting statistics."""

    codec_config: "_____config_core_v3__.TypedExtensionConfig" = (
        betterproto.message_field(2)
    )
    """
    The codec which encodes and decodes the application protocol. [#extension-
    category: envoy.generic_proxy.codecs]
    """

    generic_rds: "GenericRds" = betterproto.message_field(3, group="route_specifier")
    """
    The generic proxies route table will be dynamically loaded via the meta RDS
    API.
    """

    route_config: "RouteConfiguration" = betterproto.message_field(
        4, group="route_specifier"
    )
    """
    The route table for the generic proxy is static and is specified in this
    property.
    """

    filters: List["_____config_core_v3__.TypedExtensionConfig"] = (
        betterproto.message_field(5)
    )
    """
    A list of individual Layer-7 filters that make up the filter chain for
    requests made to the proxy. Order matters as the filters are processed
    sequentially as request events happen. [#extension-category:
    envoy.generic_proxy.filters]
    """

    tracing: "__http_connection_manager_v3__.HttpConnectionManagerTracing" = (
        betterproto.message_field(6)
    )
    """Tracing configuration for the generic proxy."""

    access_log: List["_____config_accesslog_v3__.AccessLog"] = (
        betterproto.message_field(7)
    )
    """
    Configuration for :ref:`access logs <arch_overview_access_logs>` emitted by
    generic proxy.
    """


@dataclass(eq=False, repr=False)
class GenericRds(betterproto.Message):
    config_source: "_____config_core_v3__.ConfigSource" = betterproto.message_field(1)
    """Configuration source specifier for RDS."""

    route_config_name: str = betterproto.string_field(2)
    """
    The name of the route configuration. This name will be passed to the RDS
    API. This allows an Envoy configuration with multiple generic proxies to
    use different route configurations.
    """
