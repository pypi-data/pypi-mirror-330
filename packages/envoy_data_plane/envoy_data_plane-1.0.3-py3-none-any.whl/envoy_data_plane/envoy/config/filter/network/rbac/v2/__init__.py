# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/network/rbac/v2/rbac.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto

from .....rbac import v2 as ____rbac_v2__


class RbacEnforcementType(betterproto.Enum):
    ONE_TIME_ON_FIRST_BYTE = 0
    """
    Apply RBAC policies when the first byte of data arrives on the connection.
    """

    CONTINUOUS = 1
    """
    Continuously apply RBAC policies as data arrives. Use this mode when using
    RBAC with message oriented protocols such as Mongo, MySQL, Kafka, etc. when
    the protocol decoders emit dynamic metadata such as the resources being
    accessed and the operations on the resources.
    """


@dataclass(eq=False, repr=False)
class Rbac(betterproto.Message):
    """
    RBAC network filter config. Header should not be used in rules/shadow_rules
    in RBAC network filter as this information is only available in :ref:`RBAC
    http filter <config_http_filters_rbac>`.
    """

    rules: "____rbac_v2__.Rbac" = betterproto.message_field(1)
    """
    Specify the RBAC rules to be applied globally. If absent, no enforcing RBAC
    policy will be applied.
    """

    shadow_rules: "____rbac_v2__.Rbac" = betterproto.message_field(2)
    """
    Shadow rules are not enforced by the filter but will emit stats and logs
    and can be used for rule testing. If absent, no shadow RBAC policy will be
    applied.
    """

    stat_prefix: str = betterproto.string_field(3)
    """The prefix to use when emitting statistics."""

    enforcement_type: "RbacEnforcementType" = betterproto.enum_field(4)
    """
    RBAC enforcement strategy. By default RBAC will be enforced only once when
    the first byte of data arrives from the downstream. When used in
    conjunction with filters that emit dynamic metadata after decoding every
    payload (e.g., Mongo, MySQL, Kafka) set the enforcement type to CONTINUOUS
    to enforce RBAC policies on every message boundary.
    """
