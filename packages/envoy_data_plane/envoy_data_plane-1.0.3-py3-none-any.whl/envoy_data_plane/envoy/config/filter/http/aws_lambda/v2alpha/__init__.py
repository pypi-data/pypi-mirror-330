# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/aws_lambda/v2alpha/aws_lambda.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto


class ConfigInvocationMode(betterproto.Enum):
    SYNCHRONOUS = 0
    """
    This is the more common mode of invocation, in which Lambda responds after
    it has completed the function. In this mode the output of the Lambda
    function becomes the response of the HTTP request.
    """

    ASYNCHRONOUS = 1
    """
    In this mode Lambda responds immediately but continues to process the
    function asynchronously. This mode can be used to signal events for
    example. In this mode, Lambda responds with an acknowledgment that it
    received the call which is translated to an HTTP 200 OK by the filter.
    """


@dataclass(eq=False, repr=False)
class Config(betterproto.Message):
    """AWS Lambda filter config"""

    arn: str = betterproto.string_field(1)
    """
    The ARN of the AWS Lambda to invoke when the filter is engaged Must be in
    the following format: arn:<partition>:lambda:<region>:<account-
    number>:function:<function-name>
    """

    payload_passthrough: bool = betterproto.bool_field(2)
    """
    Whether to transform the request (headers and body) to a JSON payload or
    pass it as is.
    """

    invocation_mode: "ConfigInvocationMode" = betterproto.enum_field(3)
    """Determines the way to invoke the Lambda function."""


@dataclass(eq=False, repr=False)
class PerRouteConfig(betterproto.Message):
    """
    Per-route configuration for AWS Lambda. This can be useful when invoking a
    different Lambda function or a different version of the same Lambda
    depending on the route.
    """

    invoke_config: "Config" = betterproto.message_field(1)
