# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: test/fuzz/common.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    Dict,
    List,
    Optional,
)

import betterproto
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf

from ...envoy.config.core import v3 as __envoy_config_core_v3__


@dataclass(eq=False, repr=False)
class Headers(betterproto.Message):
    headers: List["__envoy_config_core_v3__.HeaderValue"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Metadata(betterproto.Message):
    metadata: Dict[str, str] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class HttpBody(betterproto.Message):
    data: List[str] = betterproto.string_field(1)
    """The bytes that will be used as the request body."""


@dataclass(eq=False, repr=False)
class ProtoBody(betterproto.Message):
    """
    HttpBody cannot efficiently create serialized protos. Use ProtoBody instead
    to test grpc data.
    """

    message: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(1)
    """
    The proto message that will be serialized and used as the request body.
    """

    chunk_size: int = betterproto.uint64_field(2)
    """The size (in bytes) of each buffer when forming the requests."""


@dataclass(eq=False, repr=False)
class HttpData(betterproto.Message):
    headers: "Headers" = betterproto.message_field(1)
    http_body: "HttpBody" = betterproto.message_field(2, group="body")
    proto_body: "ProtoBody" = betterproto.message_field(4, group="body")
    trailers: "Headers" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class StreamInfo(betterproto.Message):
    dynamic_metadata: "__envoy_config_core_v3__.Metadata" = betterproto.message_field(1)
    start_time: int = betterproto.uint64_field(2)
    response_code: Optional[int] = betterproto.message_field(
        3, wraps=betterproto.TYPE_UINT32
    )
    upstream_metadata: "__envoy_config_core_v3__.Metadata" = betterproto.message_field(
        4
    )
    requested_server_name: str = betterproto.string_field(5)
    address: "__envoy_config_core_v3__.Address" = betterproto.message_field(6)
    upstream_local_address: "__envoy_config_core_v3__.Address" = (
        betterproto.message_field(7)
    )
