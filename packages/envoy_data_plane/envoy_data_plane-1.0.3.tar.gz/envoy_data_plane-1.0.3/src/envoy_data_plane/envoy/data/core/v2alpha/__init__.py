# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/data/core/v2alpha/health_check_event.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import datetime

import betterproto

from ....api.v2 import core as ___api_v2_core__


class HealthCheckFailureType(betterproto.Enum):
    ACTIVE = 0
    PASSIVE = 1
    NETWORK = 2


class HealthCheckerType(betterproto.Enum):
    HTTP = 0
    TCP = 1
    GRPC = 2
    REDIS = 3


@dataclass(eq=False, repr=False)
class HealthCheckEvent(betterproto.Message):
    """[#next-free-field: 10]"""

    health_checker_type: "HealthCheckerType" = betterproto.enum_field(1)
    host: "___api_v2_core__.Address" = betterproto.message_field(2)
    cluster_name: str = betterproto.string_field(3)
    eject_unhealthy_event: "HealthCheckEjectUnhealthy" = betterproto.message_field(
        4, group="event"
    )
    """Host ejection."""

    add_healthy_event: "HealthCheckAddHealthy" = betterproto.message_field(
        5, group="event"
    )
    """Host addition."""

    health_check_failure_event: "HealthCheckFailure" = betterproto.message_field(
        7, group="event"
    )
    """Host failure."""

    degraded_healthy_host: "DegradedHealthyHost" = betterproto.message_field(
        8, group="event"
    )
    """Healthy host became degraded."""

    no_longer_degraded_host: "NoLongerDegradedHost" = betterproto.message_field(
        9, group="event"
    )
    """A degraded host returned to being healthy."""

    timestamp: datetime = betterproto.message_field(6)
    """Timestamp for event."""


@dataclass(eq=False, repr=False)
class HealthCheckEjectUnhealthy(betterproto.Message):
    failure_type: "HealthCheckFailureType" = betterproto.enum_field(1)
    """The type of failure that caused this ejection."""


@dataclass(eq=False, repr=False)
class HealthCheckAddHealthy(betterproto.Message):
    first_check: bool = betterproto.bool_field(1)
    """
    Whether this addition is the result of the first ever health check on a
    host, in which case the configured :ref:`healthy threshold
    <envoy_api_field_core.HealthCheck.healthy_threshold>` is bypassed and the
    host is immediately added.
    """


@dataclass(eq=False, repr=False)
class HealthCheckFailure(betterproto.Message):
    failure_type: "HealthCheckFailureType" = betterproto.enum_field(1)
    """The type of failure that caused this event."""

    first_check: bool = betterproto.bool_field(2)
    """
    Whether this event is the result of the first ever health check on a host.
    """


@dataclass(eq=False, repr=False)
class DegradedHealthyHost(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NoLongerDegradedHost(betterproto.Message):
    pass
