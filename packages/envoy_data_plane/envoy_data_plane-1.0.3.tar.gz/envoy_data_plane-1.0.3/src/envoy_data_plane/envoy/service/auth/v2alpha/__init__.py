# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/service/auth/v2alpha/external_auth.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase

from .. import v2 as _v2__


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


class AuthorizationStub(betterproto.ServiceStub):
    async def check(
        self,
        v2_check_request: "_v2__.CheckRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "_v2__.CheckResponse":
        return await self._unary_unary(
            "/envoy.service.auth.v2alpha.Authorization/Check",
            v2_check_request,
            _v2__.CheckResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class AuthorizationBase(ServiceBase):

    async def check(
        self, v2_check_request: "_v2__.CheckRequest"
    ) -> "_v2__.CheckResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_check(
        self, stream: "grpclib.server.Stream[_v2__.CheckRequest, _v2__.CheckResponse]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.check(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/envoy.service.auth.v2alpha.Authorization/Check": grpclib.const.Handler(
                self.__rpc_check,
                grpclib.const.Cardinality.UNARY_UNARY,
                _v2__.CheckRequest,
                _v2__.CheckResponse,
            ),
        }
