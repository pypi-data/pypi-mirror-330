# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/transport_sockets/internal_upstream/v3/internal_upstream.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from .....config.core import v3 as ____config_core_v3__
from .....type.metadata import v3 as ____type_metadata_v3__


@dataclass(eq=False, repr=False)
class InternalUpstreamTransport(betterproto.Message):
    """
    Configuration for the internal upstream address. An internal address
    defines a loopback user space socket residing in the same proxy instance.
    This extension allows passing additional structured state across the user
    space socket in addition to the regular byte stream. The purpose is to
    facilitate communication between filters on the downstream and the upstream
    internal connections. All filter state objects that are shared with the
    upstream connection are also shared with the downstream internal connection
    using this transport socket.
    """

    passthrough_metadata: List["InternalUpstreamTransportMetadataValueSource"] = (
        betterproto.message_field(1)
    )
    """
    Specifies the metadata namespaces and values to insert into the downstream
    internal connection dynamic metadata when an internal address is used as a
    host. If the destination name is repeated across two metadata source
    locations, and both locations contain the metadata with the given name,
    then the latter in the list overrides the former.
    """

    transport_socket: "____config_core_v3__.TransportSocket" = (
        betterproto.message_field(3)
    )
    """The underlying transport socket being wrapped."""


@dataclass(eq=False, repr=False)
class InternalUpstreamTransportMetadataValueSource(betterproto.Message):
    """
    Describes the location of the imported metadata value. If the metadata with
    the given name is not present at the source location, then no metadata is
    passed through for this particular instance.
    """

    kind: "____type_metadata_v3__.MetadataKind" = betterproto.message_field(1)
    """Specifies what kind of metadata."""

    name: str = betterproto.string_field(2)
    """Name is the filter namespace used in the dynamic metadata."""
