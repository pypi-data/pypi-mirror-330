# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/udp/udp_proxy/session/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import Optional

import betterproto

from .......common.dynamic_forward_proxy import (
    v3 as ______common_dynamic_forward_proxy_v3__,
)


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto.Message):
    """
    Configuration for the filter state based dynamic forward proxy filter. See
    the :ref:`architecture overview <arch_overview_http_dynamic_forward_proxy>`
    for more information. Note this filter must be used in conjunction to
    another filter that sets the 'envoy.upstream.dynamic_host' and the
    'envoy.upstream.dynamic_port' filter state keys for the required upstream
    UDP session. [#extension: envoy.filters.udp.session.dynamic_forward_proxy]
    """

    stat_prefix: str = betterproto.string_field(1)
    """
    The prefix to use when emitting :ref:`statistics
    <config_udp_session_filters_dynamic_forward_proxy_stats>`.
    """

    dns_cache_config: "______common_dynamic_forward_proxy_v3__.DnsCacheConfig" = (
        betterproto.message_field(2, group="implementation_specifier")
    )
    """
    The DNS cache configuration that the filter will attach to. Note this
    configuration must match that of associated :ref:`dynamic forward proxy
    cluster configuration <envoy_v3_api_field_extensions.clusters.dynamic_forwa
    rd_proxy.v3.ClusterConfig.dns_cache_config>`.
    """

    buffer_options: "FilterConfigBufferOptions" = betterproto.message_field(3)
    """
    If configured, the filter will buffer datagrams in case that it is waiting
    for a DNS response. If this field is not configured, there will be no
    buffering and downstream datagrams that arrive while the DNS resolution is
    in progress will be dropped. In case this field is set but the options are
    not configured, the default values will be applied as described in the
    ``BufferOptions``.
    """


@dataclass(eq=False, repr=False)
class FilterConfigBufferOptions(betterproto.Message):
    """Configuration for UDP datagrams buffering."""

    max_buffered_datagrams: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT32
    )
    """
    If set, the filter will only buffer datagrams up to the requested limit,
    and will drop new UDP datagrams if the buffer contains the
    max_buffered_datagrams value at the time of a new datagram arrival. If not
    set, the default value is 1024 datagrams.
    """

    max_buffered_bytes: Optional[int] = betterproto.message_field(
        2, wraps=betterproto.TYPE_UINT64
    )
    """
    If set, the filter will only buffer datagrams up to the requested total
    buffered bytes limit, and will drop new UDP datagrams if the buffer
    contains the max_buffered_datagrams value at the time of a new datagram
    arrival. If not set, the default value is 16,384 (16KB).
    """
