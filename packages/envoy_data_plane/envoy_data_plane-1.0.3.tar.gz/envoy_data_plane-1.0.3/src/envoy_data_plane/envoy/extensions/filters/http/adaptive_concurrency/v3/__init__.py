# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/adaptive_concurrency/v3/adaptive_concurrency.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from datetime import timedelta
from typing import Optional

import betterproto

from ......config.core import v3 as _____config_core_v3__
from ......type import v3 as _____type_v3__


@dataclass(eq=False, repr=False)
class GradientControllerConfig(betterproto.Message):
    """Configuration parameters for the gradient controller."""

    sample_aggregate_percentile: "_____type_v3__.Percent" = betterproto.message_field(1)
    """
    The percentile to use when summarizing aggregated samples. Defaults to p50.
    """

    concurrency_limit_params: (
        "GradientControllerConfigConcurrencyLimitCalculationParams"
    ) = betterproto.message_field(2)
    min_rtt_calc_params: "GradientControllerConfigMinimumRttCalculationParams" = (
        betterproto.message_field(3)
    )


@dataclass(eq=False, repr=False)
class GradientControllerConfigConcurrencyLimitCalculationParams(betterproto.Message):
    """
    Parameters controlling the periodic recalculation of the concurrency limit
    from sampled request latencies.
    """

    max_concurrency_limit: Optional[int] = betterproto.message_field(
        2, wraps=betterproto.TYPE_UINT32
    )
    """
    The allowed upper-bound on the calculated concurrency limit. Defaults to
    1000.
    """

    concurrency_update_interval: timedelta = betterproto.message_field(3)
    """
    The period of time samples are taken to recalculate the concurrency limit.
    """


@dataclass(eq=False, repr=False)
class GradientControllerConfigMinimumRttCalculationParams(betterproto.Message):
    """
    Parameters controlling the periodic minRTT recalculation. [#next-free-
    field: 6]
    """

    interval: timedelta = betterproto.message_field(1)
    """
    The time interval between recalculating the minimum request round-trip
    time. Has to be positive.
    """

    request_count: Optional[int] = betterproto.message_field(
        2, wraps=betterproto.TYPE_UINT32
    )
    """
    The number of requests to aggregate/sample during the minRTT recalculation
    window before updating. Defaults to 50.
    """

    jitter: "_____type_v3__.Percent" = betterproto.message_field(3)
    """
    Randomized time delta that will be introduced to the start of the minRTT
    calculation window. This is represented as a percentage of the interval
    duration. Defaults to 15%. Example: If the interval is 10s and the jitter
    is 15%, the next window will begin somewhere in the range (10s - 11.5s).
    """

    min_concurrency: Optional[int] = betterproto.message_field(
        4, wraps=betterproto.TYPE_UINT32
    )
    """The concurrency limit set while measuring the minRTT. Defaults to 3."""

    buffer: "_____type_v3__.Percent" = betterproto.message_field(5)
    """
    Amount added to the measured minRTT to add stability to the concurrency
    limit during natural variability in latency. This is expressed as a
    percentage of the measured value and can be adjusted to allow more or less
    tolerance to the sampled latency values. Defaults to 25%.
    """


@dataclass(eq=False, repr=False)
class AdaptiveConcurrency(betterproto.Message):
    gradient_controller_config: "GradientControllerConfig" = betterproto.message_field(
        1, group="concurrency_controller_config"
    )
    """Gradient concurrency control will be used."""

    enabled: "_____config_core_v3__.RuntimeFeatureFlag" = betterproto.message_field(2)
    """
    If set to false, the adaptive concurrency filter will operate as a pass-
    through filter. If the message is unspecified, the filter will be enabled.
    """

    concurrency_limit_exceeded_status: "_____type_v3__.HttpStatus" = (
        betterproto.message_field(3)
    )
    """
    This field allows for a custom HTTP response status code to the downstream
    client when the concurrency limit has been exceeded. Defaults to 503
    (Service Unavailable). .. note::   If this is set to < 400, 503 will be
    used instead.
    """
