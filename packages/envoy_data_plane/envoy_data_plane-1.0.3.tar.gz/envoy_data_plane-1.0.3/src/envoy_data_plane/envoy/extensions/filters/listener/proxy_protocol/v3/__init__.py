# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/listener/proxy_protocol/v3/proxy_protocol.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class ProxyProtocol(betterproto.Message):
    """[#next-free-field: 6]"""

    rules: List["ProxyProtocolRule"] = betterproto.message_field(1)
    """The list of rules to apply to requests."""

    allow_requests_without_proxy_protocol: bool = betterproto.bool_field(2)
    """
    Allow requests through that don't use proxy protocol. Defaults to false. ..
    attention::   This breaks conformance with the specification.   Only enable
    if ALL traffic to the listener comes from a trusted source.   For more
    information on the security implications of this feature, see
    https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt .. attention::
    Requests of 12 or fewer bytes that match the proxy protocol v2 signature
    and requests of 6 or fewer bytes that match the proxy protocol v1
    signature will timeout (Envoy is unable to differentiate these requests
    from incomplete proxy protocol requests).
    """

    pass_through_tlvs: "_____config_core_v3__.ProxyProtocolPassThroughTlVs" = (
        betterproto.message_field(3)
    )
    """
    This config controls which TLVs can be passed to filter state if it is
    Proxy Protocol V2 header. If there is no setting for this field, no TLVs
    will be passed through. .. note::   If this is configured, you likely also
    want to set   :ref:`core.v3.ProxyProtocolConfig.pass_through_tlvs
    <envoy_v3_api_field_config.core.v3.ProxyProtocolConfig.pass_through_tlvs>`,
    which controls pass-through for the upstream.
    """

    disallowed_versions: List["_____config_core_v3__.ProxyProtocolConfigVersion"] = (
        betterproto.enum_field(4)
    )
    """
    The PROXY protocol versions that won't be matched. Useful to limit the
    scope and attack surface of the filter. When the filter receives PROXY
    protocol data that is disallowed, it will reject the connection. By
    default, the filter will match all PROXY protocol versions. See
    https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt for details. ..
    attention::   When used in conjunction with the
    :ref:`allow_requests_without_proxy_protocol <envoy_v3_api_field_extensions.
    filters.listener.proxy_protocol.v3.ProxyProtocol.allow_requests_without_pro
    xy_protocol>`,   the filter will not attempt to match signatures for the
    disallowed versions.   For example, when ``disallowed_versions=V2``,
    ``allow_requests_without_proxy_protocol=true``,   and an incoming request
    matches the V2 signature, the filter will allow the request through without
    any modification.   The filter treats this request as if it did not have
    any PROXY protocol information.
    """

    stat_prefix: str = betterproto.string_field(5)
    """
    The human readable prefix to use when emitting statistics for the filter.
    If not configured, statistics will be emitted without the prefix segment.
    See the :ref:`filter's statistics documentation
    <config_listener_filters_proxy_protocol>` for more information.
    """


@dataclass(eq=False, repr=False)
class ProxyProtocolKeyValuePair(betterproto.Message):
    metadata_namespace: str = betterproto.string_field(1)
    """
    The namespace â€” if this is empty, the filter's namespace will be used.
    """

    key: str = betterproto.string_field(2)
    """The key to use within the namespace."""


@dataclass(eq=False, repr=False)
class ProxyProtocolRule(betterproto.Message):
    """
    A Rule defines what metadata to apply when a header is present or missing.
    """

    tlv_type: int = betterproto.uint32_field(1)
    """
    The type that triggers the rule - required TLV type is defined as uint8_t
    in proxy protocol. See `the spec
    <https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt>`_ for
    details.
    """

    on_tlv_present: "ProxyProtocolKeyValuePair" = betterproto.message_field(2)
    """If the TLV type is present, apply this metadata KeyValuePair."""
