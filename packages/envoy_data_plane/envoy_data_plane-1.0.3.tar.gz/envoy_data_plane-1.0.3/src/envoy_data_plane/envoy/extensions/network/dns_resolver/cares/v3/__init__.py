# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/network/dns_resolver/cares/v3/cares_dns_resolver.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    List,
    Optional,
)

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class CaresDnsResolverConfig(betterproto.Message):
    """Configuration for c-ares DNS resolver. [#next-free-field: 6]"""

    resolvers: List["_____config_core_v3__.Address"] = betterproto.message_field(1)
    """
    A list of dns resolver addresses. :ref:`use_resolvers_as_fallback<envoy_v3_
    api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.u
    se_resolvers_as_fallback>` below dictates if the DNS client should override
    system defaults or only use the provided resolvers if the system defaults
    are not available, i.e., as a fallback.
    """

    use_resolvers_as_fallback: bool = betterproto.bool_field(3)
    """
    If true use the resolvers listed in the :ref:`resolvers<envoy_v3_api_field_
    extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.resolvers>`
    field only if c-ares is unable to obtain a nameserver from the system
    (e.g., /etc/resolv.conf). Otherwise, the resolvers listed in the resolvers
    list will override the default system resolvers. Defaults to false.
    """

    filter_unroutable_families: bool = betterproto.bool_field(4)
    """
    The resolver will query available network interfaces and determine if there
    are no available interfaces for a given IP family. It will then filter
    these addresses from the results it presents. e.g., if there are no
    available IPv4 network interfaces, the resolver will not provide IPv4
    addresses.
    """

    dns_resolver_options: "_____config_core_v3__.DnsResolverOptions" = (
        betterproto.message_field(2)
    )
    """
    Configuration of DNS resolver option flags which control the behavior of
    the DNS resolver.
    """

    udp_max_queries: Optional[int] = betterproto.message_field(
        5, wraps=betterproto.TYPE_UINT32
    )
    """
    This option allows for number of UDP based DNS queries to be capped. Note,
    this is only applicable to c-ares DNS resolver currently.
    """
