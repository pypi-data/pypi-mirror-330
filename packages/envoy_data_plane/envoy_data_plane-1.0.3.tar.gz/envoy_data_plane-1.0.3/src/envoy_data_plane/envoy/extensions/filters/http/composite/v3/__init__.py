# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/composite/v3/composite.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class Composite(betterproto.Message):
    """
    :ref:`Composite filter <config_http_filters_composite>` config. The
    composite filter config allows delegating filter handling to another filter
    as determined by matching on the request headers. This makes it possible to
    use different filters or filter configurations based on the incoming
    request. This is intended to be used with :ref:`ExtensionWithMatcher
    <envoy_v3_api_msg_extensions.common.matching.v3.ExtensionWithMatcher>`
    where a match tree is specified that indicates (via
    :ref:`ExecuteFilterAction <envoy_v3_api_msg_extensions.filters.http.composi
    te.v3.ExecuteFilterAction>`) which filter configuration to create and
    delegate to.
    """

    pass


@dataclass(eq=False, repr=False)
class DynamicConfig(betterproto.Message):
    """
    Configuration for an extension configuration discovery service with name.
    """

    name: str = betterproto.string_field(1)
    """
    The name of the extension configuration. It also serves as a resource name
    in ExtensionConfigDS.
    """

    config_discovery: "_____config_core_v3__.ExtensionConfigSource" = (
        betterproto.message_field(2)
    )
    """
    Configuration source specifier for an extension configuration discovery
    service. In case of a failure and without the default configuration,
    500(Internal Server Error) will be returned.
    """


@dataclass(eq=False, repr=False)
class ExecuteFilterAction(betterproto.Message):
    """
    Composite match action (see :ref:`matching docs
    <arch_overview_matching_api>` for more info on match actions). This
    specifies the filter configuration of the filter that the composite filter
    should delegate filter interactions to.
    """

    typed_config: "_____config_core_v3__.TypedExtensionConfig" = (
        betterproto.message_field(1)
    )
    """
    Filter specific configuration which depends on the filter being
    instantiated. See the supported filters for further documentation. Only one
    of ``typed_config`` or ``dynamic_config`` can be set. [#extension-category:
    envoy.filters.http]
    """

    dynamic_config: "DynamicConfig" = betterproto.message_field(2)
    """
    Dynamic configuration of filter obtained via extension configuration
    discovery service. Only one of ``typed_config`` or ``dynamic_config`` can
    be set.
    """

    sample_percent: "_____config_core_v3__.RuntimeFractionalPercent" = (
        betterproto.message_field(3)
    )
    """
    Probability of the action execution. If not specified, this is 100%. This
    allows sampling behavior for the configured actions. For example, if
    :ref:`default_value
    <envoy_v3_api_field_config.core.v3.RuntimeFractionalPercent.default_value>`
    under the ``sample_percent`` is configured with 30%, a dice roll with that
    probability is done. The underline action will only be executed if the dice
    roll returns positive. Otherwise, the action is skipped.
    """
