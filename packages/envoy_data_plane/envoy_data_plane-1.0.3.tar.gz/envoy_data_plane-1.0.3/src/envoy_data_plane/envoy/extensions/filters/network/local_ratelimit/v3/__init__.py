# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/local_ratelimit/v3/local_rate_limit.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass

import betterproto

from ......config.core import v3 as _____config_core_v3__
from ......type import v3 as _____type_v3__


@dataclass(eq=False, repr=False)
class LocalRateLimit(betterproto.Message):
    stat_prefix: str = betterproto.string_field(1)
    """
    The prefix to use when emitting :ref:`statistics
    <config_network_filters_local_rate_limit_stats>`.
    """

    token_bucket: "_____type_v3__.TokenBucket" = betterproto.message_field(2)
    """
    The token bucket configuration to use for rate limiting connections that
    are processed by the filter's filter chain. Each incoming connection
    processed by the filter consumes a single token. If the token is available,
    the connection will be allowed. If no tokens are available, the connection
    will be immediately closed. .. note::   In the current implementation each
    filter and filter chain has an independent rate limit, unless   a shared
    rate limit is configured via :ref:`share_key <envoy_v3_api_field_extensions
    .filters.network.local_ratelimit.v3.LocalRateLimit.share_key>`. .. note::
    In the current implementation the token bucket's :ref:`fill_interval
    <envoy_v3_api_field_type.v3.TokenBucket.fill_interval>` must be >= 50ms to
    avoid too aggressive   refills.
    """

    runtime_enabled: "_____config_core_v3__.RuntimeFeatureFlag" = (
        betterproto.message_field(3)
    )
    """
    Runtime flag that controls whether the filter is enabled or not. If not
    specified, defaults to enabled.
    """

    share_key: str = betterproto.string_field(4)
    """
    Specifies that the token bucket used for rate limiting should be shared
    with other local_rate_limit filters with a matching :ref:`token_bucket <env
    oy_v3_api_field_extensions.filters.network.local_ratelimit.v3.LocalRateLimi
    t.token_bucket>` and ``share_key`` configuration. All fields of
    ``token_bucket`` must match exactly for the token bucket to be shared. If
    this field is empty, this filter will not share a token bucket with any
    other filter.
    """
