# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/set_metadata/v3/set_metadata.proto
# plugin: python-betterproto
# This file has been @generated
import warnings
from dataclasses import dataclass
from typing import List

import betterproto
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf


@dataclass(eq=False, repr=False)
class Metadata(betterproto.Message):
    metadata_namespace: str = betterproto.string_field(1)
    """The metadata namespace."""

    allow_overwrite: bool = betterproto.bool_field(2)
    """
    Allow the filter to overwrite or merge with an existing value in the
    namespace.
    """

    value: "betterproto_lib_google_protobuf.Struct" = betterproto.message_field(3)
    """
    The value to place at the namespace. If ``allow_overwrite``, this will
    overwrite or merge with any existing values in that namespace. See
    :ref:`the filter documentation <config_http_filters_set_metadata>` for more
    information on how this value is merged with potentially existing ones if
    ``allow_overwrite`` is configured. Only one of ``value`` and
    ``typed_value`` may be set.
    """

    typed_value: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(4)
    """
    The value to place at the namespace. If ``allow_overwrite``, this will
    overwrite any existing values in that namespace. Only one of ``value`` and
    ``typed_value`` may be set.
    """


@dataclass(eq=False, repr=False)
class Config(betterproto.Message):
    metadata_namespace: str = betterproto.string_field(1)
    """
    The metadata namespace. This field is deprecated; please use ``metadata``
    as replacement.
    """

    value: "betterproto_lib_google_protobuf.Struct" = betterproto.message_field(2)
    """
    The untyped value to update the dynamic metadata namespace with. See
    :ref:`the filter documentation <config_http_filters_set_metadata>` for more
    information on how this value is merged with potentially existing ones.
    This field is deprecated; please use ``metadata`` as replacement.
    """

    metadata: List["Metadata"] = betterproto.message_field(3)
    """Defines changes to be made to dynamic metadata."""

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("metadata_namespace"):
            warnings.warn("Config.metadata_namespace is deprecated", DeprecationWarning)
        if self.is_set("value"):
            warnings.warn("Config.value is deprecated", DeprecationWarning)
