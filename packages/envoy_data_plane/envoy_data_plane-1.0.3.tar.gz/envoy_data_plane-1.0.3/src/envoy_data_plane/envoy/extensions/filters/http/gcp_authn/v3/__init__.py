# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto
# plugin: python-betterproto
# This file has been @generated
import warnings
from dataclasses import dataclass
from datetime import timedelta
from typing import Optional

import betterproto

from ......config.core import v3 as _____config_core_v3__


@dataclass(eq=False, repr=False)
class GcpAuthnFilterConfig(betterproto.Message):
    """Filter configuration. [#next-free-field: 7]"""

    http_uri: "_____config_core_v3__.HttpUri" = betterproto.message_field(1)
    """
    The HTTP URI to fetch tokens from GCE Metadata
    Server(https://cloud.google.com/compute/docs/metadata/overview). The URL
    format is
    "http://metadata.google.internal/computeMetadata/v1/instance/service-
    accounts/default/identity?audience=[AUDIENCE]" This field is deprecated
    because it does not match the API surface provided by the google auth
    libraries. Control planes should not attempt to override the metadata
    server URI. The cluster and timeout can be configured using the ``cluster``
    and ``timeout`` fields instead. For backward compatibility, the cluster and
    timeout configured in this field will be used if the new ``cluster`` and
    ``timeout`` fields are not set.
    """

    retry_policy: "_____config_core_v3__.RetryPolicy" = betterproto.message_field(2)
    """Retry policy for fetching tokens. Not supported by all data planes."""

    cache_config: "TokenCacheConfig" = betterproto.message_field(3)
    """Token cache configuration. This field is optional."""

    token_header: "TokenHeader" = betterproto.message_field(4)
    """
    Request header location to extract the token. By default (i.e. if this
    field is not specified), the token is extracted to the Authorization HTTP
    header, in the format "Authorization: Bearer <token>". Not supported by all
    data planes.
    """

    cluster: str = betterproto.string_field(5)
    """
    Cluster to send traffic to the GCE metadata server. Not supported by all
    data planes; a data plane may instead have its own mechanism for contacting
    the metadata server.
    """

    timeout: timedelta = betterproto.message_field(6)
    """
    Timeout for fetching the tokens from the GCE metadata server. Not supported
    by all data planes.
    """

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("http_uri"):
            warnings.warn(
                "GcpAuthnFilterConfig.http_uri is deprecated", DeprecationWarning
            )


@dataclass(eq=False, repr=False)
class Audience(betterproto.Message):
    """
    Audience is the URL of the receiving service that performs token
    authentication. It will be provided to the filter through cluster's
    typed_filter_metadata.
    """

    url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class TokenCacheConfig(betterproto.Message):
    """Token Cache configuration."""

    cache_size: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT64
    )
    """
    The number of cache entries. The maximum number of entries is INT64_MAX as
    it is constrained by underlying cache implementation. Default value 0
    (i.e., proto3 defaults) disables the cache by default. Other default values
    will enable the cache.
    """


@dataclass(eq=False, repr=False)
class TokenHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    """The HTTP header's name."""

    value_prefix: str = betterproto.string_field(2)
    """
    The header's prefix. The format is "value_prefix<token>" For example, for
    "Authorization: Bearer <token>", value_prefix="Bearer " with a space at the
    end.
    """
