[build-system]
# Minimum requirements for the build system to execute (PEP-518):
# >= 68.1: "Promote pyproject.tomlâ€™s [tool.setuptools] out of beta." in the ChangeLog
requires = ["setuptools>=68.1", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "django-ca-cmc"
authors = [
    {name = "Mathias Ertl", email = "mati@er.tl"},
]
dynamic = ["version"]
description = "django-ca plugin for Certificate Management over CMS (CMC)"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.1",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Security :: Cryptography",
    "Topic :: Security",
    "Typing :: Typed",
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "django-ca>=2.1.1",
    "python-cmc>=1.22",
    "tabulate>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/mathiasertl/django-ca-cmc/"
#Documentation = ""
Source = "https://github.com/mathiasertl/django-ca-cmc/"
Issues = "https://github.com/mathiasertl/django-ca-cmc/issues"
#Changelog = ""

[dependency-groups]
dev = [
    "django-stubs>=5.1.2",
    "mypy>=1.14.1",
    "pytest-django>=4.9.0",
    "pytest>=8.3.4",
    "pytest-random-order>=1.1.1",
    "ruff>=0.9.2",
    "coverage[toml]>=7.6.10",
    "pytest-cov>=6.0.0",
    "build>=1.2.2.post1",
    "types-tabulate>=0.9.0.20241207",
    "twine>=6.1.0",
    "freezegun>=1.5.1",
]

[tool.coverage.run]
source = [
    "django_ca_cmc",
]
branch = true

[tool.django-stubs]
django_settings_module = "demo.settings"

[tool.ruff.lint.pylint]
max-args = 10

[tool.mypy]
strict = true
show_error_codes = true
mypy_path = "django_ca_cmc:demo"
plugins = ["mypy_django_plugin.main"]
exclude = [
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
# asn1crypto does not have type hints.
module = [
    "asn1crypto.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
addopts = [
    "--cov",
    "--cov-report=html:coverage/",
    "--cov-fail-under=100",
    "--random-order",
]
pythonpath = [
    "demo",
    ".",
]

[tool.ruff]
extend-exclude = ["migrations"]
line-length = 100

[tool.ruff.lint]
extend-select = [
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "G",  # flake8-logging-format
    "DJ",  # flake8-django
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "UP",  # pyupgrade
    "RUF",  # ruff specific checks
]

ignore = [
    "D102",  # Missing docstring in public method - includes inherited methods
    "D104",  # Missing docstring in public package - includes even empty __init__.py files
    "D105",  # Missing docstring in magic method - includes __str__() etc
    "D106",  # Missing docstring in public nested class - includes Meta/Media classes
    "D203",
    "D212",
    "D401",
]

[tool.setuptools.packages.find]
include = ["django_ca_cmc*"]

[tool.setuptools_scm]
