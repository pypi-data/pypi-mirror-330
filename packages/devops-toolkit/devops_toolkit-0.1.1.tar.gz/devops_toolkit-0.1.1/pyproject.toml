[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "devops-toolkit"
version = "0.1.1"
description = "A comprehensive Python-based toolkit for DevOps workflows"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Kenbark42", email = "kenbark42@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "rich>=12.0.0",
]

[project.optional-dependencies]
aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]
kubernetes = [
    "kubernetes>=24.2.0",
]
monitoring = [
    "prometheus-client>=0.16.0",
    "requests>=2.28.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.10.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
all = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "kubernetes>=24.2.0",
    "prometheus-client>=0.16.0",
    "requests>=2.28.0",
]

[project.urls]
Homepage = "https://github.com/kenbark42/devops-toolkit"
Issues = "https://github.com/kenbark42/devops-toolkit/issues"
Documentation = "https://github.com/kenbark42/devops-toolkit/docs"

[project.scripts]
devops = "devops_toolkit.cli:main"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src --cov-report=term --cov-report=xml"