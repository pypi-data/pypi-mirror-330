name: Release

on:
  workflow_dispatch:

jobs:
  icons:
    name: Get Icons
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      - name: Get icons
        run: uv run --no-dev ffxivicongetter

      - name: Archive icons
        run: uv run python -m zipfile -c ${{ github.workspace }}/icons.zip .
        working-directory: data

      - name: Upload icons
        uses: actions/upload-artifact@v4
        with:
          name: ffxiv-icons
          path: icons.zip

  binary:
    name: Build Binary
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build binary
        run: uv run hatch build -t binary

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: dist/binary

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [icons, binary]
    permissions:
      contents: write

    steps:
      - uses: hustcer/setup-nu@v3

      - name: Download icons
        uses: actions/download-artifact@v4
        with:
          name: ffxiv-icons

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: binary

      - run: ls -R

      - name: Tagging
        id: tag
        shell: nu {0}
        run: |
          let tag = (date now | format date "%Y-%m-%d-${{ github.run_number }}")
          echo $"tag=($tag)" | save -a $env.GITHUB_OUTPUT

      - name: Make Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.zip
            *.exe
          tag_name: ${{ steps.tag.outputs.tag }}
