# coding: utf-8

"""
Wrk Automation Platform - API v1

The Wrk API is organized around REST. Our API has predictable resource-oriented URLs, accepts and returns JSON-encoded requests and responses. It uses standard HTTP response codes, authentication, and verbs.  Please note you need will an API key with the appropriate access to use the following APIs. The API key can be obtained from [this page](https://account.wrk.com/api-key) in your Wrk account. To elevate access to your account, please [contact your Sales team](https://www.wrk.com/meet-automation-expert).

The version of the OpenAPI document: 2.1.0
Contact: support@wrk.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from wrk_platform_sdk.models.wrkflow_definition import WrkflowDefinition


class TestWrkflowDefinition(unittest.TestCase):
    """WrkflowDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WrkflowDefinition:
        """Test WrkflowDefinition
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `WrkflowDefinition`
        """
        model = WrkflowDefinition()
        if include_optional:
            return WrkflowDefinition(
                uuid = '',
                name = '',
                input_schema = {"type":"object","required":["name"],"properties":{"name":{"key":"name","type":"string","title":"A name field required","format":"text","propertyOrder":1000},"color":{"key":"color","type":"string","title":"An optional field for color","format":"text","propertyOrder":1010}}},
                entry_action_id = '',
                actions = [
                    wrk_platform_sdk.models.wrk_action_definition.WrkActionDefinition(
                        user_defined_id = '', 
                        wrk_action_ref = wrk_platform_sdk.models.wrk_action_qualified_id.WrkActionQualifiedId(
                            organization = '', 
                            library = '', 
                            name = '', ), 
                        input_values = { }, )
                    ],
                links = [
                    wrk_platform_sdk.models.wrk_action_link.WrkActionLink(
                        from = '', 
                        to = '', 
                        outcome_ref = wrk_platform_sdk.models.outcome_qualified_id.OutcomeQualifiedId(
                            name = '', 
                            organization = '', 
                            library = '', ), )
                    ]
            )
        else:
            return WrkflowDefinition(
                name = '',
                input_schema = {"type":"object","required":["name"],"properties":{"name":{"key":"name","type":"string","title":"A name field required","format":"text","propertyOrder":1000},"color":{"key":"color","type":"string","title":"An optional field for color","format":"text","propertyOrder":1010}}},
                entry_action_id = '',
                actions = [
                    wrk_platform_sdk.models.wrk_action_definition.WrkActionDefinition(
                        user_defined_id = '', 
                        wrk_action_ref = wrk_platform_sdk.models.wrk_action_qualified_id.WrkActionQualifiedId(
                            organization = '', 
                            library = '', 
                            name = '', ), 
                        input_values = { }, )
                    ],
                links = [
                    wrk_platform_sdk.models.wrk_action_link.WrkActionLink(
                        from = '', 
                        to = '', 
                        outcome_ref = wrk_platform_sdk.models.outcome_qualified_id.OutcomeQualifiedId(
                            name = '', 
                            organization = '', 
                            library = '', ), )
                    ],
        )
        """

    def testWrkflowDefinition(self):
        """Test WrkflowDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
