Metadata-Version: 2.2
Name: rctl
Version: 0.1.0
Summary: Add your description here
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: pyyaml>=6.0.2
Requires-Dist: fsspec>=2025.2.0
Requires-Dist: jinja2>=3.1.5
Requires-Dist: pydantic>=2.10.6
Requires-Dist: hvac>=2.3.0
Requires-Dist: s3fs>=2025.2.0
Requires-Dist: psycopg2-binary>=2.9.10
Requires-Dist: fastapi>=0.115.8
Requires-Dist: sqlmodel>=0.0.22
Requires-Dist: uvicorn>=0.34.0
Requires-Dist: pre-commit>=4.1.0
Requires-Dist: black>=25.1.0
Requires-Dist: pytest>=8.3.4
Requires-Dist: ruff>=0.9.7
Requires-Dist: boto3>=1.36.23
Requires-Dist: s3transfer>=0.11.2
Requires-Dist: typer>=0.15.1

# ResMgr

接続情報、機密情報の管理や、リソースの状態管理が面倒だ。
そういったものを管理できる仕組みを作る。

## init

リソースを初期化する。すでに準備済みのリソースに対しては何もしない。

## destroy

リソースを削除。存在しない場合は無視します。

## recreate

destroy 実行後に、init を実行します。



# 開発に貢献する


```
pre-commit install
```


# CLI

次のようにリソースの状態を適用することができます。
指定するパスがディレクトリの場合、再帰的に yml ファイルを読み取りリソースの状態を適用します。

```
resctl resource apply -f resources/
```

- は標準入力から読み取るという docker で用意された機能

```
printf "mysecretdata" | docker secret create my_secret -
```
