"use strict";(self.webpackChunkjupyter_drives=self.webpackChunkjupyter_drives||[]).push([[707],{707:(e,t,a)=>{a.r(t),a.d(t,{default:()=>G});var n=a(738),i=a(830),r=a(625),s=a(209),l=a(593),o=a(655),d=a(256);const c=new o.LabIcon({name:"jupyter-drives:drive-browser",svgstr:'<svg \n    xmlns="http://www.w3.org/2000/svg"\n    height="34" viewBox="0 -960 960 960"\n    width="34"\n    >\n    <path d="M260-160q-91 0-155.5-63T40-377q0-78 47-139t123-78q25-92 100-149t170-57q117 0 198.5 81.5T760-520q69 8 114.5 59.5T920-340q0 75-52.5 127.5T740-160H260Z"\n    fill = "#616161"\n    />\n</svg>'});var m,u=a(602),h=a(421),p=a(310);function v(e,t){let a="text",n="text/plain",i="text";return t[e]&&(a=t[e].fileType,n=t[e].fileMimeTypes[0],i=t[e].fileFormat),".ipynb"===e&&(i="text"),[a,n,i]}function y(e,t){return t.filter((t=>t.name===(-1!==e.indexOf("/")?e.substring(0,e.indexOf("/")):e)))[0]}function g(e){return-1!==e.indexOf("/")?e.substring(e.indexOf("/")+1):""}!function(e){e.openDrivesDialog="drives:open-drives-dialog",e.openPath="drives:open-path",e.toggleBrowser="drives:toggle-main",e.createNewDrive="drives:create-new-drive",e.launcher="launcher:create"}(m||(m={}));class w extends h.ServerConnection.ResponseError{constructor(e,t=`Invalid response: ${e.status} ${e.statusText}`,a="",n={}){super(e,t),this.traceback=a,this._json=null!=n?n:{}}get json(){return this._json}}async function f(e="",t="GET",a=null,n="jupyter-drives"){const i=h.ServerConnection.makeSettings(),r=p.URLExt.join(i.baseUrl,n,e),s={method:t,body:a?JSON.stringify(a):void 0};let l;try{l=await h.ServerConnection.makeRequest(r,s,i)}catch(e){throw new h.ServerConnection.NetworkError(e)}let o=await l.text(),d=!1;if(o.length>0)try{o=JSON.parse(o),d=!0}catch(e){console.log("Not a JSON response body.",l)}if(!l.ok){if(d){const{message:e,traceback:t,...a}=o;throw new w(l,e||`Invalid response: ${l.status} ${l.statusText}`,t||"",a)}throw new w(l,o)}return o}let b={name:"",path:"",last_modified:"",created:"",content:null,format:null,mimetype:"",size:0,writable:!0,type:""};async function E(e,t){const a=await f("drives/"+e+"/"+t.path,"GET"),n=void 0!==a.data.length;if(a.data)if(n){const n={};a.data.forEach((a=>{var i;if(a.path!==t.path&&a.path!==t.path+"/"){const r=a.path.replace(t.path?t.path+"/":"","").split("/")[0],[s,l,o]=v(p.PathExt.extname(p.PathExt.basename(r)),t.registeredFileTypes);n[r]=null!==(i=n[r])&&void 0!==i?i:{name:r,path:t.path?p.PathExt.join(e,t.path,r):p.PathExt.join(e,r),last_modified:a.last_modified,created:"",content:r.split(".")[1]?null:[],format:o,mimetype:l,size:a.size,writable:!0,type:s}}})),b={name:t.path?p.PathExt.basename(t.path):e,path:p.PathExt.join(e,t.path?t.path+"/":""),last_modified:"",created:"",content:Object.values(n),format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"}}else{const[n,i,r]=v(p.PathExt.extname(p.PathExt.basename(t.path)),t.registeredFileTypes);b={name:p.PathExt.basename(t.path),path:p.PathExt.join(e,a.data.path),last_modified:a.data.last_modified,created:"",content:a.data.content,format:r,mimetype:i,size:a.data.size,writable:!0,type:n}}return b}var _;!function(e){e.renameSingleObject=async function(e,t,a){return await f("drives/"+e+"/"+t,"PATCH",{new_path:a})},e.copySingleObject=async function(e,t,a,n){return await f("drives/"+e+"/"+a,"PUT",{to_path:n,to_drive:t})}}(_||(_={}));let x={name:"",path:"",last_modified:"",created:"",content:[],format:null,mimetype:"",size:0,writable:!0,type:""};class D{constructor(e={}){var t,a;this._drivesList=[],this._name="",this._provider="",this._baseUrl="",this._region="",this._creationDate="",this._fileChanged=new u.Signal(this),this._isDisposed=!1,this._disposed=new u.Signal(this),this._registeredFileTypes={},this._serverSettings=h.ServerConnection.makeSettings(),this._name=null!==(t=e.name)&&void 0!==t?t:"",this._drivesList=null!==(a=e.drivesList)&&void 0!==a?a:[]}get drivesList(){return this._drivesList}set drivesList(e){this._drivesList=e}get baseUrl(){return this._baseUrl}set baseUrl(e){this._baseUrl=e}get name(){return this._name}set name(e){this._name=e}get provider(){return this._provider}set provider(e){this._provider=e}get region(){return this._region}set region(e){this._region=e}get creationDate(){return this._creationDate}set creationDate(e){this._creationDate=e}get serverSettings(){return this._serverSettings}get registeredFileTypes(){return this._registeredFileTypes}set registeredFileTypes(e){this._registeredFileTypes=e}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._isDisposed=!0,this._disposed.emit(),u.Signal.clearData(this))}async getDownloadUrl(e){let t="";if(""!==e){const a=y(e,this._drivesList);t=await(async(e,t)=>(await f("drives/"+e+"/"+t.path,"PUT",{presigned_link:!0})).data.link)(a.name,{path:g(e)})}else console.warn("Operation not supported.");return t}async get(e,t){if(""!==e){const t=y(e,this._drivesList);if(!1===t.mounted)try{const e=t.name;await async function(e,t){const a={drive_name:e,provider:t.provider};return await f("drives","POST",a)}(e,{provider:t.provider}),this._drivesList.filter((t=>t.name===e))[0].mounted=!0}catch(e){}x=await E(t.name,{path:g(e),registeredFileTypes:this._registeredFileTypes})}else{const e=[];try{this._drivesList=await async function(){return await f("drives","GET")}();for(const t of this._drivesList)e.push({name:t.name,path:t.name,last_modified:"",created:t.creationDate,content:[],format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"})}catch(e){console.log("Failed loading available drives list, with error: ",e)}x={name:this._name,path:this._name,last_modified:"",created:"",content:e,format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"}}return h.Contents.validateContentsModel(x),x}async newUntitled(e={}){var t;const a=null!==(t=e.path)&&void 0!==t?t:"";if(""!==a){const t=y(a,this._drivesList),n=-1!==a.indexOf("/")?a.substring(a.indexOf("/")+1):"",i=await E(t.name,{path:n,registeredFileTypes:this._registeredFileTypes});if(void 0!==e.type){const a=this.incrementUntitledName(i,e);x=await async function(e,t){const a=t.path?p.PathExt.join(t.path,t.name):t.name,n=await f("drives/"+e+"/"+a,"POST",{type:t.type}),[i,r,s]=v(p.PathExt.extname(t.name),t.registeredFileTypes);return b={name:t.name,path:p.PathExt.join(e,a),last_modified:n.data.last_modified,created:n.data.last_modified,content:n.data.content,format:s,mimetype:r,size:n.data.size,writable:!0,type:i},b}(t.name,{name:a,path:n,type:e.type,registeredFileTypes:this._registeredFileTypes})}else console.warn("Type of new element is undefined")}else console.warn("Operation not supported.");return h.Contents.validateContentsModel(x),this._fileChanged.emit({type:"new",oldValue:null,newValue:x}),x}incrementUntitledName(e,t){const a=e.content;let n="",i=0,r=0,s=0;return"notebook"===t.type&&(t.ext="ipynb"),a.forEach((e=>{void 0!==t.ext?e.name.includes("untitled")&&e.name.includes(".txt")?i+=1:e.name.includes("Untitled")&&e.name.includes(".ipynb")&&(s+=1):e.name.includes("Untitled Folder")&&(r+=1)})),"txt"===t.ext&&(n=0===i?"untitled."+t.ext:"untitled"+i+"."+t.ext),"ipynb"===t.ext?n=0===s?"Untitled."+t.ext:"Untitled"+s+"."+t.ext:"directory"===t.type&&(n=0===r?"Untitled Folder":"Untitled Folder "+r),n}async delete(e){const t=y(e,this._drivesList);await async function(e,t){await f("drives/"+e+"/"+t.path,"DELETE")}(t.name,{path:g(e)}),this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t,a={}){if(""!==e){const a=y(e,this._drivesList),n=g(e),i=g(t);let r=p.PathExt.basename(i);try{await async function(e,t){await f("drives/"+e+"/"+t.path,"HEAD")}(a.name,{path:i}),r=await this.incrementName(i,a.name)}catch(e){}finally{x=await async function(e,t){const a=t.newPath.substring(0,t.newPath.lastIndexOf("/")+1)+t.newFileName,[n,i,r]=v(p.PathExt.extname(p.PathExt.basename(t.newFileName)),t.registeredFileTypes),s=await f("drives/"+e+"/"+t.path,"GET");void 0!==s.data.length&&0!==s.data.length&&await Promise.all(s.data.map((async n=>{const i=n.path.substring(t.path.length);_.renameSingleObject(e,p.PathExt.join(t.path,i),p.PathExt.join(a,i))})));try{const s=await _.renameSingleObject(e,t.path,a);b={name:t.newFileName,path:p.PathExt.join(e,a),last_modified:s.data.last_modified,created:"",content:""!==p.PathExt.extname(t.newFileName)?null:[],format:r,mimetype:i,size:s.data.size,writable:!0,type:n}}catch(e){}return b}(a.name,{path:n,newPath:i,newFileName:r,registeredFileTypes:this._registeredFileTypes})}}else console.warn("Operation not supported.");return h.Contents.validateContentsModel(x),this._fileChanged.emit({type:"rename",oldValue:{path:e},newValue:x}),x}async incrementName(e,t){let a="",n="";n=p.PathExt.basename(e),a=p.PathExt.extname(n),n=""!==a?n.split(".")[n.split(".").length-2]:n;const i=await(async(e,t,a)=>{let n={};t=t.substring(0,t.lastIndexOf("/"));const i=await f("drives/"+e+"/"+t,"GET");return i.data&&0!==i.data.length&&i.data.forEach((e=>{const i=e.path.replace(t?t+"/":"","").split("/")[0];i.substring(0,a.length+1).includes(a)&&(n[i]=1)})),Object.values(n).reduce(((e,t)=>e+t),0)})(t,e,n);let r=i?n+i:n;return r=""!==a?r+a:r,r}async save(e,t={}){if(""!==e){const a=y(e,this._drivesList);x=await async function(e,t){const[a,n,i]=v(p.PathExt.extname(p.PathExt.basename(t.path)),t.registeredFileTypes),r=await f("drives/"+e+"/"+t.path,"PUT",{content:t.param.content,options_format:t.param.format,content_format:i,content_type:a});return b={name:p.PathExt.basename(t.path),path:p.PathExt.join(e,t.path),last_modified:r.data.last_modified,created:r.data.last_modified,content:r.data.content,format:i,mimetype:n,size:r.data.size,writable:!0,type:a},b}(a.name,{path:g(e),param:t,registeredFileTypes:this._registeredFileTypes})}else console.warn("Operation not supported.");return h.Contents.validateContentsModel(x),this._fileChanged.emit({type:"save",oldValue:null,newValue:x}),x}async incrementCopyName(e,t,a){const n=p.PathExt.basename(e),i=""===p.PathExt.extname(n)?n+"-Copy":n.split(".")[0]+"-Copy."+n.split(".")[1],r=p.PathExt.join(t,i);return await this.incrementName(r,a)}async copy(e,t,a={}){if(""!==e){const a=y(e,this._drivesList),n=y(t,this._drivesList),i=g(e),r=g(t),s=await this.incrementCopyName(i,r,n.name);x=await async function(e,t){const a=p.PathExt.join(t.toPath,t.newFileName),[n,i,r]=v(p.PathExt.extname(p.PathExt.basename(t.newFileName)),t.registeredFileTypes),s=await f("drives/"+e+"/"+t.path,"GET");void 0!==s.data.length&&0!==s.data.length&&await Promise.all(s.data.map((async n=>{const i=n.path.substring(t.path.length);_.copySingleObject(e,t.toDrive,p.PathExt.join(t.path,i),p.PathExt.join(a,i))})));try{const s=await _.copySingleObject(e,t.toDrive,t.path,a);b={name:t.newFileName,path:p.PathExt.join(t.toDrive,a),last_modified:s.data.last_modified,created:"",content:""!==p.PathExt.extname(t.newFileName)?null:[],format:r,mimetype:i,size:s.data.size,writable:!0,type:n}}catch(e){}return b}(a.name,{path:i,toPath:r,newFileName:s,toDrive:n.name,registeredFileTypes:this._registeredFileTypes})}else console.warn("Operation not supported.");return this._fileChanged.emit({type:"new",oldValue:null,newValue:x}),h.Contents.validateContentsModel(x),x}async newDrive(e,t){return x=await async function(e,t){return await f("drives/"+e+"/","POST",{location:t.location}),b={name:e,path:e,last_modified:"",created:"",content:[],format:"json",mimetype:"",size:0,writable:!0,type:"directory"},b}(e,{location:t}),h.Contents.validateContentsModel(x),this._fileChanged.emit({type:"new",oldValue:null,newValue:x}),x}createCheckpoint(e){return Promise.resolve({id:"",last_modified:""})}listCheckpoints(e){return Promise.resolve([])}restoreCheckpoint(e,t){return Promise.reject("Repository is read only")}deleteCheckpoint(e,t){return Promise.reject("Read only")}getRegisteredFileTypes(e){const t=e.docRegistry.fileTypes();for(const e of t)0===e.extensions.length&&(this._registeredFileTypes[""]={fileType:"directory",fileFormat:"json",fileMimeTypes:["text/directory"]}),e.extensions.forEach((t=>{var a;this._registeredFileTypes[t]||(this._registeredFileTypes[t]={fileType:e.name,fileMimeTypes:[...e.mimeTypes],fileFormat:null!==(a=e.fileFormat)&&void 0!==a?a:""})}))}}const T="DriveBrowser",C="jp-new-drive-title",F={id:"jupyter-drives:drives-file-browser",description:"The drive file browser factory provider.",autoStart:!0,requires:[i.IFileBrowserFactory,s.IToolbarWidgetRegistry,l.ISettingRegistry,r.ITranslator],optional:[n.IRouter,n.JupyterFrontEnd.ITreeResolver,n.ILabShell,n.ILayoutRestorer],activate:async(e,t,a,n,r,l,d,m,u)=>{console.log("JupyterLab extension jupyter-drives:drives-file-browser is activated!");const{commands:h}=e,p=new D({name:"s3"});e.serviceManager.contents.addDrive(p),p.getRegisteredFileTypes(e);const v=t.createFileBrowser("drivebrowser",{auto:!1,restore:!1,driveName:p.name});function y(e){!async function(e){await f("drives/config","POST",{new_limit:e})}(e.get("maxFilesListed").composite)}v.node.setAttribute("role","region"),v.node.setAttribute("aria-label","Drive Browser Section"),v.title.icon=c,v.title.caption="Drive File Browser",v.id="drive-file-browser",P.restoreBrowser(v,h,l,d,m),e.shell.add(v,"left",{rank:102,type:"File Browser"}),u&&u.add(v,"drive-file-browser"),a.addFactory(T,"uploader",(e=>new i.Uploader({model:e.model,translator:r}))),a.addFactory(T,"file-name-searcher",(e=>{const t=(0,o.FilenameSearcher)({updateFilter:(t,a)=>{e.model.setFilter((e=>t(e.name.toLowerCase())))},useFuzzyFilter:!0,placeholder:"Filter files by names",forceRefresh:!0});return t.addClass("jp-drive-browser-search-box"),t})),(0,s.setToolbar)(v,(0,s.createToolbarFactory)(a,n,T,F.id,r)),Promise.all([e.restored,n.load(F.id)]).then((([,t])=>{y(t),t.changed.connect(y),P.addCommands(e,p)})).catch((e=>{console.error(`Something went wrong when reading the settings.\n${e}`)}))}};var P;!function(e){e.restoreBrowser=async function(e,t,a,n,i){const r="jp-mod-restoring";if(e.addClass(r),!a)return await e.model.restore(e.id),await e.model.refresh(),void e.removeClass(r);const s=async()=>{a.routed.disconnect(s);const l=await(null==n?void 0:n.paths);(null==l?void 0:l.file)||(null==l?void 0:l.browser)?(await e.model.restore(e.id,!1),l.file&&await t.execute(m.openPath,{path:l.file,dontShowBrowser:!0}),l.browser&&await t.execute(m.openPath,{path:l.browser,dontShowBrowser:!0})):(await e.model.restore(e.id),await e.model.refresh()),e.removeClass(r),(null==i?void 0:i.isEmpty("main"))&&t.execute("launcher:create")};a.routed.connect(s)};const t=()=>{const e=document.createElement("div"),t=document.createElement("label");t.textContent="Name",t.className=C;const a=document.createElement("input"),n=document.createElement("label");n.textContent="Region",n.className=C;const i=document.createElement("input");return i.placeholder="us-east-1",e.appendChild(t),e.appendChild(a),e.appendChild(n),e.appendChild(i),e};class a extends d.Widget{constructor(e){super({node:t()}),this.onAfterAttach()}onAfterAttach(){this.addClass("jp-FileDialog");const e=this.driveInput.value;this.driveInput.setSelectionRange(0,e.length);const t=this.regionInput.value;this.regionInput.setSelectionRange(0,t.length)}get driveInput(){return this.node.getElementsByTagName("input")[0]}get regionInput(){return this.node.getElementsByTagName("input")[1]}getValue(){return[this.driveInput.value,this.regionInput.value]}}e.CreateDriveHandler=a,e.addCommands=function(t,a){t.commands.addCommand(m.createNewDrive,{execute:async()=>(0,s.showDialog)({title:"New Drive",body:new e.CreateDriveHandler(a.name),focusNodeSelector:"input",buttons:[s.Dialog.cancelButton(),s.Dialog.okButton({label:"Create",ariaLabel:"Create New Drive"})]}).then((e=>{e.value&&a.newDrive(e.value[0],e.value[1])})),label:"New Drive",icon:c.bindprops({stylesheet:"menuItem"})}),t.contextMenu.addItem({command:m.createNewDrive,selector:"#drive-file-browser.jp-SidePanel .jp-DirListing-content",rank:100})}}(P||(P={}));var N=a(727),S=a(345),j=a(180);function L(e){return S.createElement("div",null,S.createElement("div",{className:"row"},S.createElement("div",{className:"column"},S.createElement(j.Search,{className:"drive-search-input",onInput:e.getValue})),S.createElement("div",{className:"column"}),S.createElement(j.Button,{className:"input-add-drive-button",onClick:()=>{e.updateSelectedDrives(e.value,e.isName)}},"add drive")))}function I(e){return S.createElement("div",{className:"drive-search-list"},S.createElement("div",{className:"row"},S.createElement("div",{className:"column"},S.createElement(j.Search,{className:"drive-search-input",onInput:e.filter})),S.createElement("div",{className:"column"})),e.filteredList.map(((t,a)=>S.createElement("li",{key:t},S.createElement("div",{className:"row"},S.createElement("div",{className:"column"},S.createElement("div",null,t," ")),S.createElement("div",{className:"column"},S.createElement(j.Button,{className:"search-add-drive-button",onClick:()=>{e.updateSelectedDrives(t,!0)}},"add drive")))))))}function O(e){return S.createElement("div",{className:"drive-data-grid"},S.createElement(j.DataGrid,{"grid-template-columns":"1f 1fr"},S.createElement(j.DataGridRow,{"row-type":"header"},S.createElement(j.DataGridCell,{className:"data-grid-cell","grid-column":"1"},S.createElement("b",null," name ")),S.createElement(j.DataGridCell,{className:"data-grid-cell","grid-column":"2"},S.createElement("b",null," url "))),e.drives.map(((e,t)=>S.createElement(j.DataGridRow,{key:e.name,"row-type":"default"},S.createElement(j.DataGridCell,{className:"data-grid-cell","grid-column":"1"},e.name),S.createElement(j.DataGridCell,{className:"data-grid-cell","grid-column":"2"},e.url))))))}function k(e){const[t,a]=(0,S.useState)(""),[n,i]=(0,S.useState)("");let r=[...e.model.selectedDrives];const[s,l]=(0,S.useState)(r),o=[];for(const t of e.model.availableDrives)""!==t.name&&o.push(t.name);const[d,c]=(0,S.useState)(o),m=(n,i)=>{let s;r=[...e.model.selectedDrives],i?s={name:n,url:""}:(n!==t&&a(n),s={name:"",url:t});const o=((e,t)=>{const a=[],n=[];let i=!1;return t.forEach((t=>{""!==e.name&&e.name===t.name?a.push(!0):a.push(!1),""!==e.url&&e.url===t.url?n.push(!0):n.push(!1)})),(a.includes(!0)||n.includes(!0))&&(i=!0),i})(s,r);!1===o?r.push(s):console.log("The selected drive is already in the list"),l(r),e.model.setSelectedDrives(r)};return S.createElement(S.Fragment,null,S.createElement("div",{className:"drive-list-manager"},S.createElement("div",null,S.createElement("h3",null," Select drive(s) to be added to your filebrowser ")),S.createElement("div",{className:"row"},S.createElement("div",{className:"column"},S.createElement("div",null," Enter a drive URL"),S.createElement(L,{isName:!1,value:t,getValue:e=>{a(e.target.value)},updateSelectedDrives:(e,t)=>m(e,t)}),S.createElement("div",null," Select drive(s) from list"),S.createElement(I,{isName:!0,value:n,filteredList:d,filter:e=>{const t=e.target.value;let n;n=[...o],n=n.filter((e=>-1!==e.toLowerCase().indexOf(t.toLowerCase()))),c(n),1===d.length&&""!==d[0]&&(i(d[0]),a(""))},updateSelectedDrives:(e,t)=>m(e,t)})),S.createElement("div",{className:"column"},S.createElement("div",{className:"jp-custom-datagrid"},S.createElement("label",null," Selected drives "),S.createElement("label",null," "),S.createElement(O,{drives:s}))))))}class B extends o.VDomModel{constructor(e,t){super(),this.availableDrives=e,this.selectedDrives=t}setSelectedDrives(e){this.selectedDrives=e}}class R extends o.VDomRenderer{constructor(e){super(e),this.model=e}render(){return S.createElement(S.Fragment,null,S.createElement(k,{model:this.model}))}}const U={id:"jupyter-drives:widget",description:"Open a dialog to select drives to be added in the filebrowser.",requires:[i.IFileBrowserFactory,r.ITranslator],autoStart:!0,activate:(e,t,a)=>{(0,N.addJupyterLabThemeChangeListener)();const{commands:n}=e,{tracker:i}=t,r=a.load("jupyter_drives"),l=new Map;let o=[{name:"CoconutDrive",url:"/coconut/url"}];const d=[{name:"CoconutDrive",url:"/coconut/url"},{name:"PearDrive",url:"/pear/url"},{name:"StrawberryDrive",url:"/strawberrydrive/url"},{name:"BlueberryDrive",url:"/blueberrydrive/url"},{name:"",url:"/mydrive/url"},{name:"RaspberryDrive",url:"/raspberrydrive/url"},{name:"PineAppleDrive",url:""},{name:"PomeloDrive",url:"/https://pomelodrive/url"},{name:"OrangeDrive",url:""},{name:"TomatoDrive",url:""},{name:"",url:"superDrive/url"},{name:"AvocadoDrive",url:""}];let u=l.get(o);n.addCommand(m.openDrivesDialog,{execute:e=>{const t=i.currentWidget;u?(o=u.selectedDrives,l.set(o,u)):(u=new B(d,o),l.set(o,u)),t&&u&&(0,s.showDialog)({body:new R(u),buttons:[s.Dialog.cancelButton()]})},icon:c.bindprops({stylesheet:"menuItem"}),caption:r.__("Add drives to filebrowser."),label:r.__("Add Drives To Filebrowser")})}};var z=a(36),M=a(53);const V={activate:function(e,t,a,n,i){const{commands:r,shell:l}=e,d=t.load("jupyter-drives"),c=new z.LauncherModel;if(r.addCommand(m.launcher,{label:d.__("New Launcher"),icon:e=>e.toolbar?o.addIcon:void 0,execute:e=>{var n,m;const u=null==i?void 0:i.tracker.currentWidget,h=null!==(m=null!==(n=e.cwd)&&void 0!==n?n:null==u?void 0:u.model.path)&&void 0!==m?m:"",p="launcher-"+A.id++,v=new z.Launcher({model:c,cwd:h,callback:e=>{(0,M.find)(l.widgets("main"),(t=>t===e))&&(l.add(e,"main",{ref:p}),v.dispose())},commands:r,translator:t});v.model=c,v.title.icon=o.launcherIcon,v.title.label=d.__("Launcher");const y=new s.MainAreaWidget({content:v});if(y.title.closable=!!Array.from(l.widgets("main")).length,y.id=p,l.add(y,"main",{activate:e.activate,ref:e.ref}),a&&a.layoutModified.connect((()=>{y.title.closable=Array.from(a.widgets("main")).length>1}),y),u){const e=e=>{v.cwd=e.path};u.model.pathChanged.connect(e),v.disposed.connect((()=>{u.model.pathChanged.disconnect(e)}))}return y}}),a){const t=null==i?void 0:i.tracker.currentWidget;Promise.all([e.restored,null==t?void 0:t.model.restored]).then((()=>{a.layoutModified.connect((()=>{a.isEmpty("main")&&r.execute(m.launcher)}))}))}return n&&n.addItem({command:m.launcher,category:d.__("Launcher")}),a&&(a.addButtonEnabled=!0,a.addRequested.connect(((e,t)=>{var a;const n=(null===(a=t.currentTitle)||void 0===a?void 0:a.owner.id)||t.titles[t.titles.length-1].owner.id;return r.execute(m.launcher,{ref:n})}))),c},id:"jupyter-drives:launcher-extension-plugin",description:"Provides the launcher tab service for the file browsers.",requires:[r.ITranslator],optional:[n.ILabShell,s.ICommandPalette,i.IFileBrowserFactory],provides:z.ILauncher,autoStart:!0};var A;!function(e){e.id=0}(A||(A={}));const G=[F,U,V]}}]);