# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _LabelErodeDilatePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelSetDilateImageFilterPython
else:
    import _itkLabelSetDilateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkLabelSetMorphBaseImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkLabelSetDilateImageFilterID2ID2_New():
    return itkLabelSetDilateImageFilterID2ID2.New()

class itkLabelSetDilateImageFilterID2ID2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID2TRUEID2):
    r"""Proxy of C++ itkLabelSetDilateImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterID2ID2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterID2ID2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterID2ID2

        Create a new object of the class itkLabelSetDilateImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterID2ID2 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID2ID2_swigregister(itkLabelSetDilateImageFilterID2ID2)

def itkLabelSetDilateImageFilterID3ID3_New():
    return itkLabelSetDilateImageFilterID3ID3.New()

class itkLabelSetDilateImageFilterID3ID3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID3TRUEID3):
    r"""Proxy of C++ itkLabelSetDilateImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterID3ID3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterID3ID3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterID3ID3

        Create a new object of the class itkLabelSetDilateImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterID3ID3 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID3ID3_swigregister(itkLabelSetDilateImageFilterID3ID3)

def itkLabelSetDilateImageFilterID4ID4_New():
    return itkLabelSetDilateImageFilterID4ID4.New()

class itkLabelSetDilateImageFilterID4ID4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID4TRUEID4):
    r"""Proxy of C++ itkLabelSetDilateImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterID4ID4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterID4ID4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterID4ID4

        Create a new object of the class itkLabelSetDilateImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterID4ID4 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterID4ID4_swigregister(itkLabelSetDilateImageFilterID4ID4)

def itkLabelSetDilateImageFilterIF2IF2_New():
    return itkLabelSetDilateImageFilterIF2IF2.New()

class itkLabelSetDilateImageFilterIF2IF2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF2TRUEIF2):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIF2IF2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIF2IF2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIF2IF2

        Create a new object of the class itkLabelSetDilateImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIF2IF2 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF2IF2_swigregister(itkLabelSetDilateImageFilterIF2IF2)

def itkLabelSetDilateImageFilterIF3IF3_New():
    return itkLabelSetDilateImageFilterIF3IF3.New()

class itkLabelSetDilateImageFilterIF3IF3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF3TRUEIF3):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIF3IF3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIF3IF3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIF3IF3

        Create a new object of the class itkLabelSetDilateImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIF3IF3 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF3IF3_swigregister(itkLabelSetDilateImageFilterIF3IF3)

def itkLabelSetDilateImageFilterIF4IF4_New():
    return itkLabelSetDilateImageFilterIF4IF4.New()

class itkLabelSetDilateImageFilterIF4IF4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF4TRUEIF4):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIF4IF4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIF4IF4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIF4IF4

        Create a new object of the class itkLabelSetDilateImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIF4IF4 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIF4IF4_swigregister(itkLabelSetDilateImageFilterIF4IF4)

def itkLabelSetDilateImageFilterISS2ISS2_New():
    return itkLabelSetDilateImageFilterISS2ISS2.New()

class itkLabelSetDilateImageFilterISS2ISS2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS2TRUEISS2):
    r"""Proxy of C++ itkLabelSetDilateImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterISS2ISS2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterISS2ISS2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterISS2ISS2

        Create a new object of the class itkLabelSetDilateImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterISS2ISS2 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS2ISS2_swigregister(itkLabelSetDilateImageFilterISS2ISS2)

def itkLabelSetDilateImageFilterISS3ISS3_New():
    return itkLabelSetDilateImageFilterISS3ISS3.New()

class itkLabelSetDilateImageFilterISS3ISS3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS3TRUEISS3):
    r"""Proxy of C++ itkLabelSetDilateImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterISS3ISS3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterISS3ISS3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterISS3ISS3

        Create a new object of the class itkLabelSetDilateImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterISS3ISS3 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS3ISS3_swigregister(itkLabelSetDilateImageFilterISS3ISS3)

def itkLabelSetDilateImageFilterISS4ISS4_New():
    return itkLabelSetDilateImageFilterISS4ISS4.New()

class itkLabelSetDilateImageFilterISS4ISS4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS4TRUEISS4):
    r"""Proxy of C++ itkLabelSetDilateImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterISS4ISS4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterISS4ISS4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterISS4ISS4

        Create a new object of the class itkLabelSetDilateImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterISS4ISS4 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterISS4ISS4_swigregister(itkLabelSetDilateImageFilterISS4ISS4)

def itkLabelSetDilateImageFilterIUC2IUC2_New():
    return itkLabelSetDilateImageFilterIUC2IUC2.New()

class itkLabelSetDilateImageFilterIUC2IUC2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC2TRUEIUC2):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUC2IUC2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUC2IUC2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUC2IUC2

        Create a new object of the class itkLabelSetDilateImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUC2IUC2 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC2IUC2_swigregister(itkLabelSetDilateImageFilterIUC2IUC2)

def itkLabelSetDilateImageFilterIUC3IUC3_New():
    return itkLabelSetDilateImageFilterIUC3IUC3.New()

class itkLabelSetDilateImageFilterIUC3IUC3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC3TRUEIUC3):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUC3IUC3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUC3IUC3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUC3IUC3

        Create a new object of the class itkLabelSetDilateImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUC3IUC3 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC3IUC3_swigregister(itkLabelSetDilateImageFilterIUC3IUC3)

def itkLabelSetDilateImageFilterIUC4IUC4_New():
    return itkLabelSetDilateImageFilterIUC4IUC4.New()

class itkLabelSetDilateImageFilterIUC4IUC4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC4TRUEIUC4):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUC4IUC4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUC4IUC4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUC4IUC4

        Create a new object of the class itkLabelSetDilateImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUC4IUC4 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUC4IUC4_swigregister(itkLabelSetDilateImageFilterIUC4IUC4)

def itkLabelSetDilateImageFilterIUS2IUS2_New():
    return itkLabelSetDilateImageFilterIUS2IUS2.New()

class itkLabelSetDilateImageFilterIUS2IUS2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS2TRUEIUS2):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUS2IUS2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUS2IUS2_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUS2IUS2

        Create a new object of the class itkLabelSetDilateImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUS2IUS2 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS2IUS2_swigregister(itkLabelSetDilateImageFilterIUS2IUS2)

def itkLabelSetDilateImageFilterIUS3IUS3_New():
    return itkLabelSetDilateImageFilterIUS3IUS3.New()

class itkLabelSetDilateImageFilterIUS3IUS3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS3TRUEIUS3):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUS3IUS3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUS3IUS3_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUS3IUS3

        Create a new object of the class itkLabelSetDilateImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUS3IUS3 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS3IUS3_swigregister(itkLabelSetDilateImageFilterIUS3IUS3)

def itkLabelSetDilateImageFilterIUS4IUS4_New():
    return itkLabelSetDilateImageFilterIUS4IUS4.New()

class itkLabelSetDilateImageFilterIUS4IUS4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS4TRUEIUS4):
    r"""Proxy of C++ itkLabelSetDilateImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetDilateImageFilterIUS4IUS4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetDilateImageFilterIUS4IUS4_Pointer"""
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkLabelSetDilateImageFilterPython.delete_itkLabelSetDilateImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetDilateImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetDilateImageFilterIUS4IUS4

        Create a new object of the class itkLabelSetDilateImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetDilateImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetDilateImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetDilateImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetDilateImageFilterIUS4IUS4 in _itkLabelSetDilateImageFilterPython:
_itkLabelSetDilateImageFilterPython.itkLabelSetDilateImageFilterIUS4IUS4_swigregister(itkLabelSetDilateImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def label_set_dilate_image_filter(*args: itkt.ImageLike,  radius: Union[float, Sequence[float]]=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelSetDilateImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelSetDilateImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_set_dilate_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.LabelErodeDilate.LabelSetDilateImageFilter
    label_set_dilate_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_set_dilate_image_filter.__doc__ = filter_object.__doc__



