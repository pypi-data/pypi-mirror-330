# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _LabelErodeDilatePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelSetErodeImageFilterPython
else:
    import _itkLabelSetErodeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkLabelSetMorphBaseImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkLabelSetErodeImageFilterID2ID2_New():
    return itkLabelSetErodeImageFilterID2ID2.New()

class itkLabelSetErodeImageFilterID2ID2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID2FALSEID2):
    r"""Proxy of C++ itkLabelSetErodeImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterID2ID2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterID2ID2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterID2ID2

        Create a new object of the class itkLabelSetErodeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterID2ID2 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID2ID2_swigregister(itkLabelSetErodeImageFilterID2ID2)

def itkLabelSetErodeImageFilterID3ID3_New():
    return itkLabelSetErodeImageFilterID3ID3.New()

class itkLabelSetErodeImageFilterID3ID3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID3FALSEID3):
    r"""Proxy of C++ itkLabelSetErodeImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterID3ID3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterID3ID3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterID3ID3

        Create a new object of the class itkLabelSetErodeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterID3ID3 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID3ID3_swigregister(itkLabelSetErodeImageFilterID3ID3)

def itkLabelSetErodeImageFilterID4ID4_New():
    return itkLabelSetErodeImageFilterID4ID4.New()

class itkLabelSetErodeImageFilterID4ID4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterID4FALSEID4):
    r"""Proxy of C++ itkLabelSetErodeImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterID4ID4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterID4ID4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterID4ID4

        Create a new object of the class itkLabelSetErodeImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterID4ID4 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterID4ID4_swigregister(itkLabelSetErodeImageFilterID4ID4)

def itkLabelSetErodeImageFilterIF2IF2_New():
    return itkLabelSetErodeImageFilterIF2IF2.New()

class itkLabelSetErodeImageFilterIF2IF2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF2FALSEIF2):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIF2IF2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIF2IF2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIF2IF2

        Create a new object of the class itkLabelSetErodeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIF2IF2 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF2IF2_swigregister(itkLabelSetErodeImageFilterIF2IF2)

def itkLabelSetErodeImageFilterIF3IF3_New():
    return itkLabelSetErodeImageFilterIF3IF3.New()

class itkLabelSetErodeImageFilterIF3IF3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF3FALSEIF3):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIF3IF3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIF3IF3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIF3IF3

        Create a new object of the class itkLabelSetErodeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIF3IF3 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF3IF3_swigregister(itkLabelSetErodeImageFilterIF3IF3)

def itkLabelSetErodeImageFilterIF4IF4_New():
    return itkLabelSetErodeImageFilterIF4IF4.New()

class itkLabelSetErodeImageFilterIF4IF4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIF4FALSEIF4):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIF4IF4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIF4IF4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIF4IF4

        Create a new object of the class itkLabelSetErodeImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIF4IF4 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIF4IF4_swigregister(itkLabelSetErodeImageFilterIF4IF4)

def itkLabelSetErodeImageFilterISS2ISS2_New():
    return itkLabelSetErodeImageFilterISS2ISS2.New()

class itkLabelSetErodeImageFilterISS2ISS2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS2FALSEISS2):
    r"""Proxy of C++ itkLabelSetErodeImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterISS2ISS2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterISS2ISS2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterISS2ISS2

        Create a new object of the class itkLabelSetErodeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterISS2ISS2 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS2ISS2_swigregister(itkLabelSetErodeImageFilterISS2ISS2)

def itkLabelSetErodeImageFilterISS3ISS3_New():
    return itkLabelSetErodeImageFilterISS3ISS3.New()

class itkLabelSetErodeImageFilterISS3ISS3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS3FALSEISS3):
    r"""Proxy of C++ itkLabelSetErodeImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterISS3ISS3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterISS3ISS3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterISS3ISS3

        Create a new object of the class itkLabelSetErodeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterISS3ISS3 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS3ISS3_swigregister(itkLabelSetErodeImageFilterISS3ISS3)

def itkLabelSetErodeImageFilterISS4ISS4_New():
    return itkLabelSetErodeImageFilterISS4ISS4.New()

class itkLabelSetErodeImageFilterISS4ISS4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterISS4FALSEISS4):
    r"""Proxy of C++ itkLabelSetErodeImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterISS4ISS4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterISS4ISS4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterISS4ISS4

        Create a new object of the class itkLabelSetErodeImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterISS4ISS4 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterISS4ISS4_swigregister(itkLabelSetErodeImageFilterISS4ISS4)

def itkLabelSetErodeImageFilterIUC2IUC2_New():
    return itkLabelSetErodeImageFilterIUC2IUC2.New()

class itkLabelSetErodeImageFilterIUC2IUC2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC2FALSEIUC2):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUC2IUC2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUC2IUC2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUC2IUC2

        Create a new object of the class itkLabelSetErodeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUC2IUC2 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC2IUC2_swigregister(itkLabelSetErodeImageFilterIUC2IUC2)

def itkLabelSetErodeImageFilterIUC3IUC3_New():
    return itkLabelSetErodeImageFilterIUC3IUC3.New()

class itkLabelSetErodeImageFilterIUC3IUC3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC3FALSEIUC3):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUC3IUC3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUC3IUC3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUC3IUC3

        Create a new object of the class itkLabelSetErodeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUC3IUC3 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC3IUC3_swigregister(itkLabelSetErodeImageFilterIUC3IUC3)

def itkLabelSetErodeImageFilterIUC4IUC4_New():
    return itkLabelSetErodeImageFilterIUC4IUC4.New()

class itkLabelSetErodeImageFilterIUC4IUC4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUC4FALSEIUC4):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUC4IUC4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUC4IUC4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUC4IUC4

        Create a new object of the class itkLabelSetErodeImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUC4IUC4 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUC4IUC4_swigregister(itkLabelSetErodeImageFilterIUC4IUC4)

def itkLabelSetErodeImageFilterIUS2IUS2_New():
    return itkLabelSetErodeImageFilterIUS2IUS2.New()

class itkLabelSetErodeImageFilterIUS2IUS2(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS2FALSEIUS2):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUS2IUS2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUS2IUS2_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUS2IUS2

        Create a new object of the class itkLabelSetErodeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUS2IUS2 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS2IUS2_swigregister(itkLabelSetErodeImageFilterIUS2IUS2)

def itkLabelSetErodeImageFilterIUS3IUS3_New():
    return itkLabelSetErodeImageFilterIUS3IUS3.New()

class itkLabelSetErodeImageFilterIUS3IUS3(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS3FALSEIUS3):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUS3IUS3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUS3IUS3_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUS3IUS3

        Create a new object of the class itkLabelSetErodeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUS3IUS3 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS3IUS3_swigregister(itkLabelSetErodeImageFilterIUS3IUS3)

def itkLabelSetErodeImageFilterIUS4IUS4_New():
    return itkLabelSetErodeImageFilterIUS4IUS4.New()

class itkLabelSetErodeImageFilterIUS4IUS4(itk.itkLabelSetMorphBaseImageFilterPython.itkLabelSetMorphBaseImageFilterIUS4FALSEIUS4):
    r"""Proxy of C++ itkLabelSetErodeImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelSetErodeImageFilterIUS4IUS4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelSetErodeImageFilterIUS4IUS4_Pointer"""
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkLabelSetErodeImageFilterPython.delete_itkLabelSetErodeImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelSetErodeImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelSetErodeImageFilterIUS4IUS4

        Create a new object of the class itkLabelSetErodeImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelSetErodeImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelSetErodeImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelSetErodeImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelSetErodeImageFilterIUS4IUS4 in _itkLabelSetErodeImageFilterPython:
_itkLabelSetErodeImageFilterPython.itkLabelSetErodeImageFilterIUS4IUS4_swigregister(itkLabelSetErodeImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def label_set_erode_image_filter(*args: itkt.ImageLike,  radius: Union[Sequence[float], float]=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelSetErodeImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelSetErodeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_set_erode_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.LabelErodeDilate.LabelSetErodeImageFilter
    label_set_erode_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_set_erode_image_filter.__doc__ = filter_object.__doc__



