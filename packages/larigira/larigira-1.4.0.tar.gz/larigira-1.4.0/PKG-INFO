Metadata-Version: 2.2
Name: larigira
Version: 1.4.0
Summary: A radio automation based on MPD
Author-email: boyska <piuttosto@logorroici.org>
License: AGPL-3.0-only
Keywords: radio automation,music
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Multimedia :: Sound/Audio
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: Babel==2.17.0
Requires-Dist: Flask-Babel==4.0.*
Requires-Dist: Flask-WTF==1.2.*
Requires-Dist: Jinja2==3.1.4
Requires-Dist: cachelib==0.1
Requires-Dist: croniter==3.0.*
Requires-Dist: flask-bootstrap==3.3.*
Requires-Dist: flask==3.1.0; python_version >= "3.9"
Requires-Dist: flask==3.0.*; python_version < "3.9"
Requires-Dist: gevent==24.11.1; python_version >= "3.9"
Requires-Dist: gevent==23.9.*; python_version < "3.9"
Requires-Dist: itsdangerous==2.2.0
Requires-Dist: lxml==5.3.1
Requires-Dist: python-mpd2
Requires-Dist: pytimeparse==1.1.8
Requires-Dist: pyxdg==0.26
Requires-Dist: requests==2.*
Requires-Dist: tinydb==3.12.2
Requires-Dist: urllib3==1.*
Requires-Dist: werkzeug==3.1.3; python_version >= "3.9"
Requires-Dist: werkzeug==3.0.*; python_version < "3.9"
Requires-Dist: wtforms==2.2.1
Provides-Extra: percentwait
Requires-Dist: mutagen==1.47.*; extra == "percentwait"
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Provides-Extra: all
Requires-Dist: larigira[dev,percentwait]; extra == "all"
Provides-Extra: docs
Requires-Dist: sphinx-multiversion==0.2.4; extra == "docs"
Requires-Dist: Sphinx==7.1.2; extra == "docs"
Requires-Dist: sphinxcontrib-applehelp==1.0.4; extra == "docs"
Requires-Dist: sphinxcontrib-devhelp==1.0.2; extra == "docs"
Requires-Dist: sphinxcontrib-htmlhelp==2.0.1; extra == "docs"
Requires-Dist: sphinxcontrib-jsmath==1.0.1; extra == "docs"
Requires-Dist: sphinxcontrib-qthelp==1.0.3; extra == "docs"
Requires-Dist: sphinxcontrib-serializinghtml==1.1.5; extra == "docs"

# larigira

[![Latest Version](https://img.shields.io/pypi/v/larigira.svg)](https://pypi.python.org/pypi/larigira)

[![Read the documentation](https://img.shields.io/badge/RTFM-8A2BE2)](https://boyska.degenerazione.xyz/larigira/doc/)

## About

A radio automation based on MPD. Larigira will sit right to your mpd
player and will keep your playlist never empty. It will also manage a db
of \"events\", so that you can schedule shows, play jingles every X
minutes, etc.

## Software stack

-   MPD, of course
-   python3.8 or greater
    -   gevent as an async framework
    -   flask to provide web interface and rpc
-   tinydb as an embedded database

## Why? (aka design features)

Reinventing a player is a bad idea. MPD provides an eccellent base.

Separating the player from \"action loops\" makes it easy to work on
this. For example, you can stop larigira for some minutes, and the audio
will keep playing. It also means that you can easily replace specific
parts of your radio automation.

The \"continous playing\" part is separated from the \"events\" part.
`larigira` can be run to perform one, the other, or both.

The \"audio generation\" part can be used separately by any script that
you like.

## Installation

Just run `python setup.py install`. It will, of course, also work in a
virtualenv. Apart from running an MPD server, there is no additional
setup.

You will find some command in your PATH now; they all begin with
`larigira`, so the usual `<TAB><TAB>` is a good way to explore them ;)

## The name

> larigira mai la sbaglia\...
>
> \-- <https://www.youtube.com/watch?v=K9XJkOSSdEA>
