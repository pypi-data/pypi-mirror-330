Metadata-Version: 2.2
Name: fezrs
Version: 0.1.0
Summary: Feature Extraction and Zoning for Remote Sensing (FEZrs)
Home-page: https://github.com/FEZtool-team/FEZrs
Author: Mahdi Farmahinifarahani, Hooman Mirzaee, Mahdi Nedaee, Mohammad Hossein Kiani Fayz Abadi
Author-email: aradfarahani@aol.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: scikit-image
Requires-Dist: scikit-learn
Requires-Dist: fastapi
Requires-Dist: opencv-python
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

[![DOI](https://zenodo.org/badge/710286874.svg)](https://doi.org/10.5281/zenodo.14938038)

# **FEZrs**

**FEZrs** is an advanced Python library developed by [**FEZtool**](https://feztool.com/) for remote sensing applications. It provides a set of powerful tools for image processing, feature extraction, and analysis of geospatial data.

## **Features**  
âœ… Apply various image filtering techniques (Gaussian, Laplacian, Sobel, Median, Mean)  
âœ… Contrast enhancement and edge detection  
âœ… Support for geospatial raster data (TIFF)  
âœ… Designed for remote sensing and satellite imagery analysis  
âœ… Easy integration with FastAPI for web-based processing  

## **Installation**  
To install FEZrs and its dependencies, use:  

```sh
pip install -r requirements.txt
```

## **Usage**  
Example of applying a Gaussian filter to an image:  

```python
from pathlib import Path
from fezrs.file_handler import OpenFiles
from fezrs.gaussian import GAUSSIANCalculator
import matplotlib.pyplot as plt

tif_file = Path("path/to/your/image.tif")
calculator = GAUSSIANCalculator(OpenFiles(tif_file=tif_file))
gaussian_image = calculator.calculate()

plt.imshow(gaussian_image, cmap="gray")
plt.title("Gaussian Filter")
plt.axis("off")
plt.show()
```

## **Modules**  
- `contrast.py` â€“ Contrast enhancement  
- `gaussian.py` â€“ Gaussian filter  
- `laplacian.py` â€“ Laplacian edge detection  
- `mean.py` â€“ Mean filter  
- `median.py` â€“ Median filter  
- `sobel.py` â€“ Sobel edge detection  
- `file_handler.py` â€“ File management for TIFF images  
- `OException.py` â€“ Custom exception handling  

## **Contributing**  
We welcome contributions! To contribute:  
1. Fork the repository  
2. Create a new branch (`git checkout -b feature-name`)  
3. Commit your changes (`git commit -m "Add new feature"`)  
4. Push to your branch (`git push origin feature-name`)  
5. Open a Pull Request  

## **License**  
This project is licensed under the **Apache-2.0 license**.  
