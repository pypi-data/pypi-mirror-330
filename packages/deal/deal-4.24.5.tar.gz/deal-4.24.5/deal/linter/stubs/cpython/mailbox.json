{
  "Babyl.__init__": {
    "has": [
      "read"
    ]
  },
  "Babyl._install_message": {
    "has": [
      "import"
    ],
    "raises": [
      "RuntimeError",
      "TypeError",
      "message"
    ]
  },
  "Babyl.get_bytes": {
    "raises": [
      "AssertionError"
    ]
  },
  "Babyl.get_message": {
    "raises": [
      "AssertionError"
    ]
  },
  "BabylMessage._explain_to": {
    "raises": [
      "TypeError"
    ]
  },
  "BabylMessage.add_label": {
    "raises": [
      "TypeError"
    ]
  },
  "MH.__contains__": {
    "raises": [
      "TypeError"
    ]
  },
  "MH.__init__": {
    "raises": [
      "NoSuchMailboxError"
    ]
  },
  "MH.__setitem__": {
    "raises": [
      "KeyError",
      "TypeError"
    ]
  },
  "MH._dump_sequences": {
    "has": [
      "read"
    ]
  },
  "MH.add": {
    "raises": [
      "TypeError"
    ]
  },
  "MH.add_folder": {
    "raises": [
      "TypeError"
    ]
  },
  "MH.get_bytes": {
    "raises": [
      "KeyError"
    ]
  },
  "MH.get_file": {
    "raises": [
      "KeyError"
    ]
  },
  "MH.get_folder": {
    "raises": [
      "TypeError"
    ]
  },
  "MH.get_message": {
    "raises": [
      "KeyError"
    ]
  },
  "MH.get_sequences": {
    "has": [
      "read"
    ],
    "raises": [
      "FormatError"
    ]
  },
  "MH.lock": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "MH.pack": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "MH.remove": {
    "raises": [
      "KeyError",
      "TypeError"
    ]
  },
  "MH.remove_folder": {
    "raises": [
      "NotEmptyError",
      "TypeError"
    ]
  },
  "MH.set_sequences": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "MHMessage._explain_to": {
    "raises": [
      "TypeError"
    ]
  },
  "MHMessage.add_sequence": {
    "raises": [
      "TypeError"
    ]
  },
  "MMDF.__init__": {
    "has": [
      "read"
    ]
  },
  "Mailbox.__contains__": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.__init__": {
    "has": [
      "import"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "Mailbox.__len__": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.__setitem__": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox._dump_message": {
    "has": [
      "import"
    ],
    "raises": [
      "RuntimeError",
      "TypeError",
      "message"
    ]
  },
  "Mailbox._string_to_bytes": {
    "raises": [
      "ValueError"
    ]
  },
  "Mailbox.add": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.close": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.flush": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.get_bytes": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.get_file": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.get_message": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.iterkeys": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.lock": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.popitem": {
    "raises": [
      "KeyError"
    ]
  },
  "Mailbox.remove": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.unlock": {
    "raises": [
      "NotImplementedError"
    ]
  },
  "Mailbox.update": {
    "raises": [
      "KeyError"
    ]
  },
  "Maildir.__contains__": {
    "has": [
      "time"
    ]
  },
  "Maildir.__init__": {
    "raises": [
      "NoSuchMailboxError"
    ]
  },
  "Maildir.__len__": {
    "has": [
      "time"
    ]
  },
  "Maildir.__setitem__": {
    "raises": [
      "TypeError"
    ]
  },
  "Maildir._create_tmp": {
    "has": [
      "time"
    ],
    "raises": [
      "ExternalClashError",
      "TypeError"
    ]
  },
  "Maildir._lookup": {
    "has": [
      "time"
    ],
    "raises": [
      "KeyError"
    ]
  },
  "Maildir._refresh": {
    "has": [
      "time"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.add": {
    "has": [
      "time"
    ],
    "raises": [
      "ExternalClashError",
      "TypeError"
    ]
  },
  "Maildir.add_folder": {
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.clean": {
    "has": [
      "time"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.get_bytes": {
    "has": [
      "read"
    ]
  },
  "Maildir.get_file": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.get_folder": {
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.get_message": {
    "has": [
      "read"
    ],
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.iterkeys": {
    "has": [
      "time"
    ]
  },
  "Maildir.remove": {
    "raises": [
      "TypeError"
    ]
  },
  "Maildir.remove_folder": {
    "raises": [
      "NotEmptyError",
      "TypeError"
    ]
  },
  "MaildirMessage.__init__": {
    "has": [
      "time"
    ]
  },
  "MaildirMessage._explain_to": {
    "raises": [
      "TypeError"
    ]
  },
  "MaildirMessage.set_date": {
    "raises": [
      "TypeError"
    ]
  },
  "MaildirMessage.set_info": {
    "raises": [
      "TypeError"
    ]
  },
  "MaildirMessage.set_subdir": {
    "raises": [
      "ValueError"
    ]
  },
  "Message.__init__": {
    "has": [
      "import"
    ],
    "raises": [
      "Error",
      "TypeError"
    ]
  },
  "Message._explain_to": {
    "raises": [
      "TypeError"
    ]
  },
  "_mboxMMDFMessage._explain_to": {
    "raises": [
      "TypeError"
    ]
  },
  "_singlefileMailbox.__init__": {
    "has": [
      "read"
    ],
    "raises": [
      "NoSuchMailboxError"
    ]
  },
  "_singlefileMailbox._lookup": {
    "raises": [
      "KeyError"
    ]
  },
  "_singlefileMailbox.flush": {
    "has": [
      "read"
    ],
    "raises": [
      "AssertionError",
      "ExternalClashError"
    ]
  },
  "mbox.__init__": {
    "has": [
      "read"
    ]
  }
}