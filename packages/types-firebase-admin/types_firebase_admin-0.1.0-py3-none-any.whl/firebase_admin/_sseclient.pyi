from _typeshed import Incomplete
from google.auth import transport

end_of_field: Incomplete

class KeepAuthSession(transport.requests.AuthorizedSession):
    def __init__(self, credential) -> None: ...
    def rebuild_auth(self, prepared_request, response) -> None: ...

class _EventBuffer:
    def __init__(self) -> None: ...
    def append(self, char) -> None: ...
    def truncate(self) -> None: ...
    @property
    def is_end_of_field(self): ...
    @property
    def buffer_string(self): ...

class SSEClient:
    url: Incomplete
    session: Incomplete
    retry: Incomplete
    requests_kwargs: Incomplete
    should_connect: bool
    last_id: Incomplete
    buf: str
    def __init__(self, url, session, retry: int = 3000, **kwargs) -> None: ...
    def close(self) -> None: ...
    def __iter__(self): ...
    def __next__(self): ...
    def next(self): ...

class Event:
    sse_line_pattern: Incomplete
    data: Incomplete
    event_type: Incomplete
    event_id: Incomplete
    retry: Incomplete
    def __init__(self, data: str = '', event_type: str = 'message', event_id: Incomplete | None = None, retry: Incomplete | None = None) -> None: ...
    @classmethod
    def parse(cls, raw): ...
