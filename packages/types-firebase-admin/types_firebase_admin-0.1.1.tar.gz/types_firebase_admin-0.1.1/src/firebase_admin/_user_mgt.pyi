from _typeshed import Incomplete
from firebase_admin import _auth_utils
from firebase_admin._user_import import ErrorInfo as ErrorInfo

MAX_LIST_USERS_RESULTS: int
MAX_IMPORT_USERS_SIZE: int
B64_REDACTED: Incomplete

class Sentinel:
    description: Incomplete
    def __init__(self, description) -> None: ...

DELETE_ATTRIBUTE: Incomplete

class UserMetadata:
    def __init__(self, creation_timestamp: Incomplete | None = None, last_sign_in_timestamp: Incomplete | None = None, last_refresh_timestamp: Incomplete | None = None) -> None: ...
    @property
    def creation_timestamp(self): ...
    @property
    def last_sign_in_timestamp(self): ...
    @property
    def last_refresh_timestamp(self): ...

class UserInfo:
    @property
    def uid(self) -> None: ...
    @property
    def display_name(self) -> None: ...
    @property
    def email(self) -> None: ...
    @property
    def phone_number(self) -> None: ...
    @property
    def photo_url(self) -> None: ...
    @property
    def provider_id(self) -> None: ...

class UserRecord(UserInfo):
    def __init__(self, data) -> None: ...
    @property
    def uid(self): ...
    @property
    def display_name(self): ...
    @property
    def email(self): ...
    @property
    def phone_number(self): ...
    @property
    def photo_url(self): ...
    @property
    def provider_id(self): ...
    @property
    def email_verified(self): ...
    @property
    def disabled(self): ...
    @property
    def tokens_valid_after_timestamp(self): ...
    @property
    def user_metadata(self): ...
    @property
    def provider_data(self): ...
    @property
    def custom_claims(self): ...
    @property
    def tenant_id(self): ...

class ExportedUserRecord(UserRecord):
    @property
    def password_hash(self): ...
    @property
    def password_salt(self): ...

class GetUsersResult:
    def __init__(self, users, not_found) -> None: ...
    @property
    def users(self): ...
    @property
    def not_found(self): ...

class ListUsersPage:
    def __init__(self, download, page_token, max_results) -> None: ...
    @property
    def users(self): ...
    @property
    def next_page_token(self): ...
    @property
    def has_next_page(self): ...
    def get_next_page(self): ...
    def iterate_all(self): ...

class DeleteUsersResult:
    def __init__(self, result, total) -> None: ...
    @property
    def success_count(self): ...
    @property
    def failure_count(self): ...
    @property
    def errors(self): ...

class BatchDeleteAccountsResponse:
    errors: Incomplete
    def __init__(self, errors: Incomplete | None = None) -> None: ...

class ProviderUserInfo(UserInfo):
    def __init__(self, data) -> None: ...
    @property
    def uid(self): ...
    @property
    def display_name(self): ...
    @property
    def email(self): ...
    @property
    def phone_number(self): ...
    @property
    def photo_url(self): ...
    @property
    def provider_id(self): ...

class ActionCodeSettings:
    url: Incomplete
    handle_code_in_app: Incomplete
    dynamic_link_domain: Incomplete
    ios_bundle_id: Incomplete
    android_package_name: Incomplete
    android_install_app: Incomplete
    android_minimum_version: Incomplete
    def __init__(self, url, handle_code_in_app: Incomplete | None = None, dynamic_link_domain: Incomplete | None = None, ios_bundle_id: Incomplete | None = None, android_package_name: Incomplete | None = None, android_install_app: Incomplete | None = None, android_minimum_version: Incomplete | None = None) -> None: ...

def encode_action_code_settings(settings): ...

class UserManager:
    ID_TOOLKIT_URL: str
    http_client: Incomplete
    base_url: Incomplete
    def __init__(self, http_client, project_id, tenant_id: Incomplete | None = None, url_override: Incomplete | None = None) -> None: ...
    def get_user(self, **kwargs): ...
    def get_users(self, identifiers): ...
    def list_users(self, page_token: Incomplete | None = None, max_results=...): ...
    def create_user(self, uid: Incomplete | None = None, display_name: Incomplete | None = None, email: Incomplete | None = None, phone_number: Incomplete | None = None, photo_url: Incomplete | None = None, password: Incomplete | None = None, disabled: Incomplete | None = None, email_verified: Incomplete | None = None): ...
    def update_user(self, uid, display_name: Incomplete | None = None, email: Incomplete | None = None, phone_number: Incomplete | None = None, photo_url: Incomplete | None = None, password: Incomplete | None = None, disabled: Incomplete | None = None, email_verified: Incomplete | None = None, valid_since: Incomplete | None = None, custom_claims: Incomplete | None = None, providers_to_delete: Incomplete | None = None): ...
    def delete_user(self, uid) -> None: ...
    def delete_users(self, uids, force_delete: bool = False): ...
    def import_users(self, users, hash_alg: Incomplete | None = None): ...
    def generate_email_action_link(self, action_type, email, action_code_settings: Incomplete | None = None): ...

class _UserIterator(_auth_utils.PageIterator):
    @property
    def items(self): ...
