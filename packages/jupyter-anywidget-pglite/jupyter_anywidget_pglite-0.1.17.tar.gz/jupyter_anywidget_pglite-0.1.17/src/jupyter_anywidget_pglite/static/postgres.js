var b=`<div class="pglite-app-container">

    <h1><tt>pglite</tt></h1>

    <div>Executed commands:</div>
    <div class="code-editor" title="code-editor"></div>
    <div id="pglite-timestamp"></div>
    <hr>
    <div>Result:</div>
    <div title="results"></div>
    <hr>
    <div>Raw Output:</div>
    <div title="output"></div>
</div>`;import{PGlite as D}from"https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/index.js";function T(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){let e=Math.random()*16|0;return(t==="x"?e:e&3|8).toString(16)})}var v=new window.AudioContext,q=t=>{if(t){let e=new SpeechSynthesisUtterance(t);window.speechSynthesis.speak(e)}};function E(t=440,e=1e3,n=.1,a="sine",r=null){let c=v.createOscillator(),f=v.createGain();f.gain.value=n,c.type=a,c.frequency.value=t,c.connect(f),f.connect(v.destination),c.start(),f.gain.exponentialRampToValueAtTime(1e-5,v.currentTime+e/1e3),setTimeout(()=>{c.stop(),r&&setTimeout(()=>{q(r)},100)},e)}function _(t=null){E(500,5,.05,"sine",t)}function w(t=null){E(50,400,.1,"sawtooth",t)}var X=`
-- Optionally select statements to execute.

CREATE TABLE IF NOT EXISTS test  (
        id serial primary key,
        title varchar not null
      );

INSERT INTO test (title) values ('dummy');

`.trim();function j(t){let e=document.createElement("table"),n=e.insertRow();return t.fields.forEach(a=>{let r=document.createElement("th");r.textContent=a.name,n.appendChild(r)}),e}function M(t,e){t.rows.forEach(n=>{let a=e.insertRow();t.fields.forEach(r=>{let c=a.insertCell();c.textContent=String(n[r.name])})})}function R(t){if(t&&t.file_content&&t.file_info){let{file_content:e,file_info:n}=t,a=atob(e),r=new Array(a.length);for(let i=0;i<a.length;i++)r[i]=a.charCodeAt(i);let c=new Uint8Array(r),f=new Blob([c],{type:n.type});return new File([f],n.name,{type:n.type,lastModified:n.lastModified})}return null}function A({model:t,el:e}){function n(l){console.log(l),t.get("audio")&&w(l.message),t.set("response",{status:"error",error_message:l.message}),t.save_changes()}async function a(l){let p={},g=[{name:"fuzzystrmatch",url:"https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/contrib/fuzzystrmatch.js"},{name:"pg_trgm",url:"https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/contrib/pg_trgm.js"},{name:"vector",url:"https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/vector/index.js"},{name:"tablefunc",url:"https://cdn.jsdelivr.net/npm/@electric-sql/pglite/dist/contrib/tablefunc.js"},{name:"isn",url:"https://cdn.jsdelivr.net/npm/@electric-sql/pglite@0.2.15/dist/contrib/isn.js"}].map(async({name:s,url:o})=>{if(l.includes(s))try{let d=await import(o);p[s]=d[s]}catch(d){n(d),console.error(`Failed to load ${s}:`,d)}});return await Promise.all(g),p}async function r(l,p,x){let g=await a(x);console.log(g);try{let s=await D.create({datadir:l,options:p,extensions:g});return console.log("Database initialized successfully."),s}catch(s){throw n(s),console.error("Failed to initialize the database:",s),s}}let c=t.get("idb"),f=t.get("file_package"),m=R(f),i={};m&&(i.loadDataDir=m);let u=t.get("extensions");r(c,i,u).then(async l=>{for(let p of u)await l.exec(`CREATE EXTENSION IF NOT EXISTS ${p};`);C({model:t,el:e,db:l})}).catch(l=>{n(l)})}function C({model:t,el:e,db:n}){function a(i){console.log(i),t.get("audio")&&w(i.message),t.set("response",{status:"error",error_message:i.message}),t.save_changes()}let r=t.get("headless"),c=document.createElement("div");c.innerHTML=b;let f=T();c.id=f,r&&(c.style="display: none; visibility: hidden;"),e.appendChild(c),t.on("change:datadump",async()=>{if(t.get("datadump")=="generate_dump"){let u=await n.dumpDataDir(),l=new FileReader;l.onload=p=>{let x={name:u.name,size:u.size,type:u.type,lastModified:u.lastModified},g=p.target.result.split(",")[1],s={file_info:x,file_content:g};t.set("file_package",s),t.set("response",{status:"datadump_ready"}),t.save_changes(),t.get("audio")&&_()},l.readAsDataURL(u)}}),t.on("change:code_content",async()=>{function i(o){if(r)return;let d=e.querySelector('div[title="code-editor"]');d.innerHTML=d.innerHTML+"<br>"+o}function u(o){if(r)return;let d=e.querySelector('div[title="output"]'),y=e.querySelector('div[title="results"]');d.innerHTML=JSON.stringify(o);let h=j(o);M(o,h),y.innerHTML="",y.append(h)}function l(o,d){r||(i(o),u(d))}let p=t.get("code_content");if(!p)return;let x=t.get("multiline"),g=t.get("multiexec"),s={rows:[],fields:[{name:"",dataTypeID:0}]};if(g)try{i(p);let o=await n.exec(p);u(o[o.length-1]),t.set("response",{status:"completed",response:o,response_type:"multi"})}catch(o){a(o)}else if(x!=""){let o=p.split(x);for(let d of o){let y=d.trim();if(y!==""){i(`${y};`);try{s=await n.query(y),u(s)}catch(h){a(h)}}}t.set("response",{status:"completed",response:s,response_type:"single"})}else{i(p);try{s=await n.query(p),u(s),t.set("response",{status:"completed",response:s,response_type:"single"})}catch(o){a(o)}}t.save_changes(),t.get("audio")&&_()});let m;n.query("select version();").then(i=>{m=i.rows[0],t.set("about",m),t.set("response",{status:"ready"}),t.save_changes()}).catch(i=>{a(i)})}var $={render:A};export{$ as default};
