{"version":3,"file":"line-CkUaj3lP.js","sources":["../../node_modules/d3-shape/src/point.js","../../node_modules/d3-shape/src/line.js"],"sourcesContent":["export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"],"names":["x","y","line","pointX","pointY"],"mappings":";;;AAAO,SAAS,EAAE,GAAG;AACnB,SAAO,EAAE,CAAC;AACZ;AAEO,SAAS,EAAE,GAAG;AACnB,SAAO,EAAE,CAAC;AACZ;ACAe,SAAA,KAASA,KAAGC,KAAG;AAC5B,MAAI,UAAU,SAAS,IAAI,GACvB,UAAU,MACV,QAAQ,aACR,SAAS,MACT,OAAO,SAASC,KAAI;AAExBF,QAAI,OAAOA,QAAM,aAAaA,MAAKA,QAAM,SAAaG,IAAS,SAASH,GAAC;AACzEC,QAAI,OAAOA,QAAM,aAAaA,MAAKA,QAAM,SAAaG,IAAS,SAASH,GAAC;AAEzE,WAASC,MAAK,MAAM;AAClB,QAAI,GACA,KAAK,OAAO,MAAM,IAAI,GAAG,QACzB,GACA,WAAW,OACX;AAEJ,QAAI,WAAW,KAAM,UAAS,MAAM,SAAS,KAAI,CAAE;AAEnD,SAAK,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AACvB,UAAI,EAAE,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,IAAI,OAAO,UAAU;AAC1D,YAAI,WAAW,CAAC,SAAU,QAAO,UAAS;AAAA,YACrC,QAAO,QAAO;AAAA,MACpB;AACD,UAAI,SAAU,QAAO,MAAM,CAACF,IAAE,GAAG,GAAG,IAAI,GAAG,CAACC,IAAE,GAAG,GAAG,IAAI,CAAC;AAAA,IAC1D;AAED,QAAI,OAAQ,QAAO,SAAS,MAAM,SAAS,MAAM;AAAA,EAClD;AAED,EAAAC,MAAK,IAAI,SAAS,GAAG;AACnB,WAAO,UAAU,UAAUF,MAAI,OAAO,MAAM,aAAa,IAAI,SAAS,CAAC,CAAC,GAAGE,SAAQF;AAAAA,EACvF;AAEE,EAAAE,MAAK,IAAI,SAAS,GAAG;AACnB,WAAO,UAAU,UAAUD,MAAI,OAAO,MAAM,aAAa,IAAI,SAAS,CAAC,CAAC,GAAGC,SAAQD;AAAAA,EACvF;AAEE,EAAAC,MAAK,UAAU,SAAS,GAAG;AACzB,WAAO,UAAU,UAAU,UAAU,OAAO,MAAM,aAAa,IAAI,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAQ;AAAA,EAC9F;AAEE,EAAAA,MAAK,QAAQ,SAAS,GAAG;AACvB,WAAO,UAAU,UAAU,QAAQ,GAAG,WAAW,SAAS,SAAS,MAAM,OAAO,IAAIA,SAAQ;AAAA,EAChG;AAEE,EAAAA,MAAK,UAAU,SAAS,GAAG;AACzB,WAAO,UAAU,UAAU,KAAK,OAAO,UAAU,SAAS,OAAO,SAAS,MAAM,UAAU,CAAC,GAAGA,SAAQ;AAAA,EAC1G;AAEE,SAAOA;AACT;","x_google_ignoreList":[0,1]}