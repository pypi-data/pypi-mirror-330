[project]
name = "mtxai"
version = "0.0.270"
description = "A web scraping library based on LangChain which uses LLM and direct graph logic to create scraping pipelines."
authors = [{ name = "Marco Vinciguerra", email = "mvincig11@gmail.com" }]
license = "MIT"
readme = "README.md"
keywords = ["scrapegraph", "llm"]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12,<4.0"
dependencies = [
    "grpcio>=1.70.0",
    "grpcio-tools>=1.70.0",
    "pydantic-settings",
    "litellm>=1.56.5",
    "langchain>=0.3.0",
    # "langchain-google-genai>=1.0.7",
    "langchain-openai>=0.2.14",
    "langchain-mistralai>=0.1.12",
    "langchain_community>=0.2.9",
    "langchain-aws>=0.1.3",
    "beautifulsoup4>=4.12.3",
    "pandas>=2.2.2",
    "python-dotenv>=1.0.1",
    "tiktoken>=0.7",
    "tqdm>=4.66.4",
    "minify-html>=0.15.0",
    # "click>=8.1.7,<9",
    "free-proxy>=1.1.1",
    "playwright>=1.43.0",
    "undetected-playwright>=0.3.0",
    "langchain-ollama>=0.1.3",
    # "qdrant-client>=1.11.3",
    # "fastembed>=0.3.6",
    "semchunk>=2.2.0",
    "transformers>=4.44.2",
    "googlesearch-python>=1.2.5",
    "simpleeval>=1.0.0",
    "async_timeout>=4.0.3",
    "scrapegraph-py>=1.7.0",
    "fastapi>=0.115.7",
    # "scrapegraphai>=1.33.3",
    # "crewai>=0.95.0",
    "structlog>=24.4.0",
    "langgraph>=0.2.63",
    "langgraph-checkpoint-postgres>=2.0.13",
    "lazify>=0.4.0",
    # docling 这个库,依赖项很庞大.其中有torch接近1G体积
    # "docling>=2.14.0",
    "orjson>=3.10.1",
    "sqlmodel>=0.0.22",
    "nanoid>=2.0.0",
    # "opentelemetry-api>=1.28.0",
    # "opentelemetry-sdk>=1.28.0",
    # "opentelemetry-instrumentation>=0.49b0",
    # "opentelemetry-distro>=0.49b0",
    # "opentelemetry-exporter-otlp>=1.28.0",
    # "opentelemetry-exporter-otlp-proto-http>=1.28.0",
    "python-dotenv>=1.0.0",
    # "protobuf>=5.29.1",
    "pyyaml>=6.0.1",
    # "grpcio-tools>=1.68.1",
    "aiostream>=0.5.2",
    "nest-asyncio>=1.6.0",
    "aiohttp>=3.10.5",
    "aiohttp-retry>=2.8.3",
    "tenacity>=8.4.1",
    "cel-python>=0.1.5",
    "python-dateutil>=2.9.0.post0",
    "loguru>=0.7.3",
    "browser-use>=0.1.23",
    "pgvector>=0.3.6",
    "sqlalchemy>=2.0.37",
    "psycopg2-binary>=2.9.10",
    # "mem0ai>=0.1.44",
    # "phidata>=2.7.8",
    "openai>=1.59.7",
    "exa-py>=1.7.2",
    # "duckduckgo-search>=7.2.1",
    # "newspaper4k>=0.9.3.1",
    "lxml-html-clean>=0.4.1",
    "huggingface-hub>=0.27.1",
    # "prefect>=3.1.13",
    "autogen-core>=0.4.7,<0.5",
    "autogen-agentchat>=0.4.7,<0.5",
    "autogen-ext[magentic-one, openai, azure, mcp, http-tool]>=0.4.7,<0.5",
    "autogenstudio>=0.4.1",
    "email-validator>=2.2.0",
    "passlib>=1.7.4",
    # "opentelemetry-instrumentation-openai>=0.33.9",
    "json-repair>=0.35.0",
    "typer>=0.13.1",
    "pydantic>=2.10.5",
    "alembic>=1.14.1",
    "slugify>=0.0.1",
    "yfinance>=0.2.52",
    "mcp-server-fetch>=2025.1.17",
    "connecpy>=1.4.2",
]


[project.scripts]
mtmai = "mtmai.__main__:app"
# [project.optional-dependencies]
#     burr = ["burr[start]==0.22.1"]
# docs = ["sphinx==6.0", "furo==2024.5.6"]

# [project.optional-dependencies]
[dependency-groups]
dev = [
    "aiofiles>=0.8.0",
    "grpcio>=1.70.0",
    "aiofiles>=0.8.0",
    "tokencost~=0.1.16",
    "build~=1.2.2",
    "pytest~=8.3.3",
    "pytest-asyncio~=0.24.0",
    "matplotlib>=3.10.0",
    "gradio>=5.12.0",
    "prometheus-client>=0.21.1",
    "pytest-watcher>=0.4.3",
]

# Group 1: Other Language Models
other-language-models = [
    "langchain-google-vertexai>=1.0.7",
    "langchain-fireworks>=0.1.3",
    "langchain-groq>=0.1.3",
    "langchain-anthropic>=0.1.11",
    "langchain-huggingface>=0.0.3",
    # "langchain-nvidia-ai-endpoints>=0.1.6",
    "langchain_together>=0.2.0",
]

# Group 2: More Semantic Options
more-semantic-options = ["graphviz>=0.20.3"]

# Group 3: More Browser Options
more-browser-options = ["browserbase>=0.3.0"]

# Group 4: Surya Library
screenshot_scraper = [
    # "surya-ocr>=0.5.0",
    "matplotlib>=3.7.2",
    "ipywidgets>=8.1.0",
    "pillow>=10.4.0",
]

[build-system]
requires = ["hatchling>=1.0.0", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["mtmai"]
exclude = ["tests/**"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "mtmai/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["mtmai"]

[tool.hatch.build.targets.sdist]
include = ["mtmai", "pyproject.toml", "README.md", "LICENSE"]
packages = ["mtmai"]

[tool.hatch.metadata]
allow-direct-references = true


# [dependency-groups]
# dev = [
#     "burr[start]==0.22.1",
#     "sphinx==6.0",
#     "furo==2024.5.6",
#     "tokencost>=0.1.16",
#     "hatch>=1.13.0",
#     "build>=1.2.2",
#     "pytest>=8.3.3",
#     "pytest-asyncio>=0.24.0"
# ]

# [tool.uv]
# dev-dependencies = [
#     "poethepoet>=0.31.1",
#     # "pytest==8.0.0",
#     "pytest-mock==3.14.0",
#     "pylint>=3.2.5",
# ]


[tool.uv.sources]
