[build-system]
build-backend = 'mesonpy'
requires = [
    "meson-python>=0.15.0",
    "Cython>=3.0.8",

    # numpy requirement for wheel builds for distribution on PyPI - building
    # against 2.x yields wheels that are also compatible with numpy 1.x at
    # runtime.
    "numpy>=2.0.0rc1",
]

[project]
name = 'seispy'
dynamic = ["version"]
description = 'Wavefield Imaging'
readme = 'README.md'
requires-python = '>=3.10'
authors = [
  {name = 'Joseph Capriotti', email = 'josephrcapriotti@gmail.com'},
]
keywords = [
    'SeismicUnix', 'wavefield', 'imaging', 'seismic', 'gpr',
]

# Note: Python and NumPy upper version bounds should be set correctly in
# release branches, see:
#     https://scipy.github.io/devdocs/dev/core-dev/index.html#version-ranges-for-numpy-and-other-dependencies
dependencies = [
    # TODO: update to "pin-compatible" once possible, see
    # https://github.com/mesonbuild/meson-python/issues/29
    "numpy>=1.22.4",
    "matplotlib",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Cython",
    "Programming Language :: C",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

[project.license]
file = 'LICENSE.md'

[project.urls]
Homepage = 'http://github.com/jcapriot/seispy'
Repository = 'http://github.com/jcapriot/seispy.git'

[tool.meson-python.args]
setup = ['--default-library=static']

[tool.cibuildwheel]
# skip building wheels for python 3.6, 3.7, 3.8, 3.9, all pypy versions, and specialty linux
# processors (still does arm builds though).
# skip windows 32bit
skip = "cp36-* cp37-* cp38-* cp39-* pp* *_ppc64le *_i686 *_s390x *-win32"
build-verbosity = "3"

# test importing discretize to make sure externals are loadable.
test-command = 'python -c "import seispy.segy"'


# use the visual studio compilers
[tool.cibuildwheel.windows.config-settings]
setup-args = [
    '--vsenv'
]