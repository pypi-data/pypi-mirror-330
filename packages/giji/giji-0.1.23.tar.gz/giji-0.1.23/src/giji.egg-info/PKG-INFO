Metadata-Version: 2.2
Name: giji
Version: 0.1.13
Summary: Git tools for Commitizen and PR Summary Generation using AI
Home-page: https://github.com/cometa/giji
Author: Cometa
Author-email: apps@getcometa.com
Project-URL: Bug Reports, https://github.com/cometa/giji/issues
Project-URL: Source, https://github.com/cometa/giji
Keywords: git commitizen pr-summary ai gemini conventional-commits
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Version Control :: Git
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: commitizen>=3.12.0
Requires-Dist: typer>=0.9.0
Requires-Dist: rich>=13.7.0
Requires-Dist: google-generativeai>=0.3.2
Requires-Dist: absl-py>=2.0.0
Requires-Dist: questionary>=2.0.1
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Giji tools

Una colecci√≥n de herramientas Git para mejorar el flujo de trabajo de desarrollo, incluyendo un generador de mensajes de commit basado en AI y un generador/creador de Pull Requests.

## Caracter√≠sticas

- ü§ñ **AI Conventional Commits**: Genera mensajes de commit siguiendo la convenci√≥n de Conventional Commits usando Google Gemini AI
- üìù **PR Manager**: Genera y crea Pull Requests autom√°ticamente con res√∫menes inteligentes
- üé® **Interfaz Amigable**: Interfaz de l√≠nea de comandos intuitiva y colorida
- üîß **F√°cil Configuraci√≥n**: Comando `cz-setup` para configurar todo autom√°ticamente

## Instalaci√≥n

### Usando pip

```bash
pip install giji
```

### Instalaci√≥n desde el c√≥digo fuente ss

```bash
git clone https://github.com/cometa/giji.git
cd giji
pip install -e .
```

### Configuraci√≥n

1. Configura tu API key de Google Gemini:
```bash
export GEMINI_API_KEY='your-api-key'
```

2. (Opcional) Agrega la variable a tu archivo .bashrc o .zshrc para hacerla permanente:
```bash
echo 'export GEMINI_API_KEY="your-api-key"' >> ~/.zshrc  # o ~/.bashrc
```

3. Configura Commitizen para usar el plugin AI:
```bash
# Configuraci√≥n r√°pida (recomendado)
cz-setup

# Opciones avanzadas:
cz-setup --help         # Ver todas las opciones disponibles
cz-setup --no-global   # Solo configurar el proyecto actual
cz-setup --no-project  # Solo configurar globalmente
```

### Archivos de Configuraci√≥n

El comando `cz-setup` crear√°/modificar√° dos archivos:

1. **~/.commitizen/config.toml**: Configuraci√≥n global de commitizen
2. **./pyproject.toml**: Configuraci√≥n local del proyecto

## Uso

### Commitizen AI

Este plugin extiende Commitizen para generar mensajes de commit usando AI:

```bash
# Agrega tus cambios
git add .

# Genera un mensaje de commit con AI
cz commit
```

### PR Summary Generator

Herramienta completa para gestionar Pull Requests:

```bash
# Genera un resumen del PR actual para poder visualizarlo en el editor de texto
pr-summary generate

# Crea un nuevo PR con resumen autom√°tico
pr-summary create

# Crea un PR especificando la rama base
pr-summary create --base main

# Ver todas las opciones disponibles
pr-summary --help
```

La herramienta permite:
- üìù Generar res√∫menes detallados de los cambios
- ‚ú® Crear PRs directamente desde la l√≠nea de comandos
- üîÑ Especificar la rama base del PR
- ü§ñ Generar t√≠tulos y descripciones usando AI

## Licencia

MIT License - ver [LICENSE](LICENSE) para m√°s detalles.

## Contribuir

Las contribuciones son bienvenidas! Por favor, lee [CONTRIBUTING.md](CONTRIBUTING.md) para detalles sobre nuestro c√≥digo de conducta y el proceso para enviar pull requests.

## Soporte

Si encuentras alg√∫n problema o tienes una sugerencia, por favor crea un issue en el [repositorio de GitHub](https://github.com/cometa/giji/issues). 
