[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "m6rclib"
version = "0.6.1"
description = "An embedded parser and LLM AI prompt compiler for the Metaphor language"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
authors = [
    {name = "Dave Hudson", email = "dave@m6r.ai"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
keywords = [
    "ai",
    "metaphor",
    "prompt-compiler"
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/m6r-ai/m6rclib"
"Bug Tracker" = "https://github.com/m6r-ai/m6rclib/issues"
Repository = "https://github.com/m6r-ai/m6rclib.git"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src/m6rclib --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["m6rclib"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "raise ImportError",
    "except ImportError:",
]
