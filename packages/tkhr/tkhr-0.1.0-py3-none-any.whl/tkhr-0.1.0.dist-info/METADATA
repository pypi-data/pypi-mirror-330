Metadata-Version: 2.4
Name: tkhr
Version: 0.1.0
Summary: A hot reload implementation for Tkinter applications
Project-URL: Homepage, https://github.com/username/tkhr
Project-URL: Repository, https://github.com/username/tkhr.git
Author: Julian
License-Expression: MIT
License-File: LICENSE
Keywords: development-tools,hot-reload,tkinter
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# TkinterHotReload

A powerful hot reload utility for Tkinter applications that enables real-time code updates without restarting your application.

## Features

- üîÑ Live code reloading for Tkinter applications
- üöÄ Zero configuration required
- üéØ Automatic detection of file changes
- üíª Seamless development experience
- üõ† Maintains application state during reloads

## Installation

Install TkinterHotReload using pip:

```bash
pip install tkhotreload
```

## Quick Start

Here's a simple example of how to use TkinterHotReload:

```python
from tkinter import Tk, Label
from tkhotreload import HotReloader

class App(Tk):
    def __init__(self):
        super().__init__()
        self.title("Hot Reload Demo")
        Label(self, text="Edit this file and save to see changes!").pack(pady=20)

if __name__ == "__main__":
    app = App()
    hot_reloader = HotReloader(app)
    app.mainloop()
```

## How It Works

TkinterHotReload monitors your Python files for changes. When you modify and save a file, it automatically:

1. Detects the changes in your code
2. Reloads the modified modules
3. Updates your Tkinter application while preserving its state

## Advanced Usage

### Custom Watch Patterns

```python
from tkhotreload import HotReloader

# Watch specific files or patterns
hot_reloader = HotReloader(app, paths=["app.py", "modules/*.py"])
```

### Reload Callbacks

```python
from tkhotreload import HotReloader

def on_reload():
    print("Code reloaded!")

hot_reloader = HotReloader(app, on_reload=on_reload)
```

## Contributing

Contributions are welcome! Here's how you can help:

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Support

If you encounter any issues or have questions, please:

- Open an issue on GitHub
- Check existing issues for solutions
- Provide detailed information about your problem

## Acknowledgments

- Thanks to all contributors who have helped shape TkinterHotReload
- Inspired by hot reload functionality in modern web development

---

Made with ‚ù§Ô∏è for the Python community