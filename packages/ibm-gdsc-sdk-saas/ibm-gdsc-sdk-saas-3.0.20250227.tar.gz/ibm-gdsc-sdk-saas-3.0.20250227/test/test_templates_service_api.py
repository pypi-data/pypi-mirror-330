# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.api.templates_service_api import TemplatesServiceApi


class TestTemplatesServiceApi(unittest.TestCase):
    """TemplatesServiceApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TemplatesServiceApi()

    def tearDown(self) -> None:
        pass

    def test_templates_service_create_integration(self) -> None:
        """Test case for templates_service_create_integration

        Summary: Create integration Description: Create a set of new templates for a new integration.
        """
        pass

    def test_templates_service_create_template(self) -> None:
        """Test case for templates_service_create_template

        Summary: Create template Description: Create a new template.
        """
        pass

    def test_templates_service_delete_integration(self) -> None:
        """Test case for templates_service_delete_integration

        Summary: Delete integration Description: Delete all templates associated with an integration.
        """
        pass

    def test_templates_service_delete_template(self) -> None:
        """Test case for templates_service_delete_template

        Summary: Delete template Description: Delete a specific template.
        """
        pass

    def test_templates_service_get_origin_default_content(self) -> None:
        """Test case for templates_service_get_origin_default_content

        Summary: Get origin default content Description: Return the default content for a template with a specified origin and MIME type.
        """
        pass

    def test_templates_service_get_origin_fields(self) -> None:
        """Test case for templates_service_get_origin_fields

        Summary: Get origin fields Description: Return the fields available with a specific origin.
        """
        pass

    def test_templates_service_get_template(self) -> None:
        """Test case for templates_service_get_template

        Summary: Get template Description: Return a specific template by id.
        """
        pass

    def test_templates_service_get_templates(self) -> None:
        """Test case for templates_service_get_templates

        Summary: Get templates Description: Return all templates based on supplied filters.
        """
        pass

    def test_templates_service_get_templates_for_edge(self) -> None:
        """Test case for templates_service_get_templates_for_edge

        Summary: Get templates for edge Description: Return all templates based on supplied filters.
        """
        pass

    def test_templates_service_test_template(self) -> None:
        """Test case for templates_service_test_template

        Summary: Test template Description: Analyze a specified template to ensure will function correctly when utilized.
        """
        pass

    def test_templates_service_transform_template(self) -> None:
        """Test case for templates_service_transform_template

        Summary: Transform template Description: Process the specified template and returns the Title and Content based on supplied data.
        """
        pass

    def test_templates_service_transform_template_json(self) -> None:
        """Test case for templates_service_transform_template_json

        Summary: Transform template JSON Description: Process the specified template and returns the Title and Content based on supplied json data string.
        """
        pass

    def test_templates_service_update_template(self) -> None:
        """Test case for templates_service_update_template

        Summary: Update template Description: Update a single template.
        """
        pass


if __name__ == '__main__':
    unittest.main()
