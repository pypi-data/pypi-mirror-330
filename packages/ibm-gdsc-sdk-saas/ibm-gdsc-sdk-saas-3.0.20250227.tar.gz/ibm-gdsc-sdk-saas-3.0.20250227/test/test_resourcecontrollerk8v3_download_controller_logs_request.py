# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.resourcecontrollerk8v3_download_controller_logs_request import Resourcecontrollerk8v3DownloadControllerLogsRequest

class TestResourcecontrollerk8v3DownloadControllerLogsRequest(unittest.TestCase):
    """Resourcecontrollerk8v3DownloadControllerLogsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Resourcecontrollerk8v3DownloadControllerLogsRequest:
        """Test Resourcecontrollerk8v3DownloadControllerLogsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Resourcecontrollerk8v3DownloadControllerLogsRequest`
        """
        model = Resourcecontrollerk8v3DownloadControllerLogsRequest()
        if include_optional:
            return Resourcecontrollerk8v3DownloadControllerLogsRequest(
                controller_id = '',
                end_date = '',
                identifier = '',
                previous = True,
                start_date = ''
            )
        else:
            return Resourcecontrollerk8v3DownloadControllerLogsRequest(
        )
        """

    def testResourcecontrollerk8v3DownloadControllerLogsRequest(self):
        """Test Resourcecontrollerk8v3DownloadControllerLogsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
