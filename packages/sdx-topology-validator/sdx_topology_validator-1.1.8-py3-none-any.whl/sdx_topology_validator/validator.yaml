openapi: 3.0.0
info:
  title: SDX Topology Validation
  description: This service validates SDX topology.
  version: 2.0.0
  contact:
    email: lmarinve@fiu.edu
servers:
  - url: /api

paths:

  /validator:
    post:
      tags:
      - topology
      summary: Send a new topology to SDX-LC
      description: Create a topology
      operationId: validate
      x-openapi-router-controller: validator
      requestBody:
        description: placed for adding a new topology
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - id
              - name
              - version
              - model_version
              - timestamp
              - nodes
              - links
              additionalProperties: false
              properties:
                  id:
                    type: string
                    pattern: '^urn:sdx:topology:[A-Za-z0-9_.:-]*$'
                  name:
                    type: string
                    minLength: 3
                    maxLength: 30
                    pattern: '^[A-Za-z0-9.,-_/]*$'
                  version:
                    type: integer
                    format: int64
                    minimum: 1
                  model_version:
                    type: string
                  timestamp:
                    type: string
                    pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
                  nodes:
                    type: array
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/Node'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
                  services:
                    type: array
                    items:
                      type: string
                      enum: ['l2vpn-ptp', 'l2vpn-ptmp']
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid Connection
        '405':
          description: Invalid input
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  schemas:

    Node: 
      type: object
      required:
        - id
        - name
        - location
        - ports
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:node:[A-Za-z0-9_,./-]*:[A-Za-z0-9.,_/-]*$'
        name:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$' 
        location:
          $ref: '#/components/schemas/Location'
        ports:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Port'
        status:
          type: string
          enum: [up, down, error]
        state:
          type: string
          enum: [enabled, disabled, maintenance]

    Port: 
      type: object
      required:
        - id
        - name
        - node
        - type
        - status
        - state
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:port:[A-Za-z0-9_,./-]*:[A-Za-z0-9_.,/-]*:[A-Za-z0-9_.,/-]*$'                  
        name:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$'
        node:
          type: string
          pattern: '^urn:sdx:node:[A-Za-z0-9_.,/-]*:[A-Za-z0-9_.,/-]*$'
        type:
          type: string
          enum: ['100FE','1GE','10GE','25GE','40GE','50GE','100GE','400GE','Other']
        mtu:
          type: integer
          minimum: 1500
          maximum: 10000
          default: 1500
        nni:
          type: string
          pattern: '^(urn:sdx:(port:[A-Za-z0-9_,./-]*|link):[A-Za-z0-9_.,/-]*:[A-Za-z0-9_.,/-]*)?$' 
        status:
          type: string
          enum: ['up','down','error']
        state:
          type: string
          enum: ['enabled', 'disabled', 'maintenance']
        entities:
          type: array
          description: List of institutions, universities, research facilities, or networks connected to the port.
          items:
            type: string
        services:
          items:
            type: object
            properties:
              l2vpn-ptp:
                type: object
                properties:
                  vlan_range:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
                      minItems: 2
                      maxItems: 2
              l2vpn-ptmp:
                type: object
                properties:
                  vlan_range:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
                      minItems: 2
                      maxItems: 2
        private:
          type: array
          items:
            type: string
            enum: ['mtu', 'status', 'state', 'services']

    Location: 
      type: object
      required:
        - address
        - latitude
        - longitude
        - iso3166_2_lvl4
      properties:
        address:
          type: string
          maxLength: 255
        latitude:
          type: number  
          minimum: -90.0  
          maximum: 90.0 
        longitude:
          type: number  
          minimum: -90.0  
          maximum: 90.0 
        iso3166_2_lvl4:
          type: string
          minLength: 5
          maxLength: 5
          pattern: '^[A-Z]{2}-[a-zA-Z0-9]{1,3}$'
        private:
          type: array
          items:
            type: string
            enum: ['address', 'latitude', 'longitude', 'iso3166_2_lvl4']

    Link: 
      type: object
      required:
        - id
        - name
        - ports
        - bandwidth
        - status
        - state
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:link:[A-Za-z0-9_,./-]*:[A-Za-z0-9_.,/-]*$' 
        name:
          type: string
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$' 
        ports:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: string
            pattern: '^urn:sdx:port:[A-Za-z0-9_,./-]*:[A-Za-z0-9_.,/-]*:[A-Za-z0-9_.,/-]*$'
        type:
          type: string
          enum: ['intra']
        bandwidth:
          type: number
          format: float
          minimum: 0
        residual_bandwidth:
          type: number
          format: float
          minimum: 0
          maximum: 100
        latency:
          type: number
          format: float
          minimum: 0
        packet_loss:
          type: number
          format: float
          minimum: 0
          maximum: 100
        availability:
          type: number
          format: float
          minimum: 0
          maximum: 100
        status:
          type: string
          enum: ['up','down','error']
        state:
          type: string
          enum: ['enabled','disabled','maintenance']
        private:
          type: array
          items:
            type: string
            enum: ['residual_bandwidth', 'latency', 'packet_loss']

    ErrorMessage: 
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
