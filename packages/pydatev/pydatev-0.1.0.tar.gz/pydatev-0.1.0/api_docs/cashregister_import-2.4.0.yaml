swagger: '2.0'
info:
  title: cashregister:import
  description: Api for file uploads by cash-register devices
  x-ibm-name: cashregister
  version: 2.4.0
  contact:
    email: kassenarchiv@datev.de
securityDefinitions:
  client_secret:
    type: apiKey
    name: X-DATEV-Client-Secret
    in: header
    x-key-type: client_secret
  client_id:
    type: apiKey
    name: X-DATEV-Client-Id
    in: header
    x-key-type: client_id
security:
  - client_id: []
schemes:
  - https
host: cashregister.api.datev.de
produces:
  - application/json
paths:
  /tenants:
    get:
      operationId: getTenants
      summary: Get list of registered tenants
      description: >
        This call returns a list of tenants that are associated with the user
        who performed the registration of the device. We recommend to retrieve
        the tenants right after a successful registration of a device in order
        to test the connection and the correct registration. Furthermore it is
        an possibility to show the user either the selection tenants he can
        choose from (if there is more than one tenant returned) or a success
        response stating the name of the tenant the device is now connected to.
        <br> Example: <br> ```GET /karo/api/cash-register/v1/tenants HTTP/1.1```
        <br> ```Host: api.datev-business.de``` <br> ```Accept:
        application/json``` <br> ```Request-Id:
        2a80020d-339c-4d07-b93a-64903b573a07``` <br> ```Authorization: Bearer
        ZGVmNGQxZjItMGE2Zi00ZmMzLWFmZTYtYjY3NzY2ZjMyOTU5O2s5eTBaVzNnS2R6WXl0SFh6TEtncXlOU2VOTExUTmQxSnMzeTMxNHljOUU9O1QwcG1UUXN6TG9sdGFIbmQ0dmlRNEhhZFl6U3pEMmxodzhpWTdLVERRRVk9```
      tags:
        - cash_register_tenants
      parameters:
        - $ref: '#/parameters/request-id'
      responses:
        '200':
          description: list of registered tenants
          schema:
            type: array
            items:
              $ref: '#/definitions/tenant'
        '400':
          description: Request did not match specification
          schema:
            $ref: '#/definitions/error-message'
        '401':
          description: Device could not be successfully authenticated.
        '403':
          description: >
            Retrieval of tenants is not allowed. This can be caused by the
            device not having been granted the correct scopes or by a missing
            contract.
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/error-message'
  /tenants/{tenant-id}/reports:
    post:
      operationId: createReport
      consumes:
        - application/json
      summary: Receives cashregister data for reports for german revenue service.
      tags:
        - cash_register_reports
      description: |
        TBD
      parameters:
        - $ref: '#/parameters/request-id'
        - $ref: '#/parameters/tenant-id'
        - in: body
          name: report
          required: true
          schema:
            $ref: '#/definitions/report'
      responses:
        '204':
          description: |
            Report has been successfully created.
        '400':
          description: Request did not match specification
          schema:
            $ref: '#/definitions/error-message'
        '401':
          description: Device could not be successfully authenticated.
        '403':
          description: >
            Report can not be created because the device does not have the
            required permission. This can be caused by the device not having
            been granted the correct scopes or by a missing contract.
        '404':
          description: >
            The tenant corresponding to the given tenant-id could not be found.
            This might indicate that the tenant-id is wrong, incomplete or not
            valid anymore.
        '422':
          description: >-
            Create report failed because the provided data is not valid.
            Information about the invalid part is provided as error-message
          schema:
            $ref: '#/definitions/error-message'
        default:
          description: Unexpected error occured
          schema:
            $ref: '#/definitions/error-message'
  /tenants/{tenant-id}/files/import:
    post:
      operationId: importFile
      consumes:
        - multipart/form-data
      summary: Import file from cash-register to archive
      tags:
        - cash_register_import
      description: >
        Device uploads a file that needs to be imported and cash-register
        metadata using this endpoint
      parameters:
        - $ref: '#/parameters/request-id'
        - $ref: '#/parameters/tenant-id'
        - name: metadata
          in: formData
          type: file
          x-schema-type: '#/definitions/metadata'
          required: true
          description: >
            The metadata for describing the file to be imported and the
            cash_register uploading the given files. The file should be in UTF-8
            encoding.

            Example metadata CASH_REGISTER:

            ```

            Content-Disposition: form-data; name="metadata";
            filename="metadata.json"

            Content-Type: application/json
              {
                "document_type": "CASH_REGISTER_TRANSACTIONS",
                "note" : "Notes about the imported file",
                "extensions" : {
                    "date_from" : "2017-07-13",
                    "date_to" : "2017-07-14",
                    "cash_register" : {
                        "serial_number": "Serial number of cash-register",
                        "manufacturer": "Manufacturer of cash-register",
                        "model_type": "Model of cash-register",
                        "name": "Name of the cash-register",
                        "description": "Some additional information about the cash-register",
                        "address": {
                                "street": "Street and street-number where the cash-register is based",
                                "postal_code": "Postal code of cash-register",
                                "city": "City where the cash-register is based",
                                "country_code": "DE"
                        }
                    },
                    "client_application": {
                      "client_application_name" : "Name of the software",
                      "client_application_vendor" : "Manufacturer of the software",
                      "client_application_version" : "Version105"
                    }
                }
              }

            ```

            OR

            Example metadata TSE:

            ```

            Content-Disposition: form-data; name="metadata";
            filename="metadata.json"

            Content-Type: application/json {
                "document_type": "TSE",
                "note" : "Notes about the imported file",
                "extensions" : {
                    "date_from" : "2019-08-27",
                    "date_to" : "2019-08-27",
                    "tse_properties" : {
                        "serial_number": "1234512345123451234512345123451234512345123451234512345123451234",
                        "manufacturer": "Manufacturer of TSE",
                        "model_type": "Model of TSE",
                        "name": "myTseFolder",
                        "connected_cash_registers" :  ["124985473984", "224985473984", "324985473984"]
                    },
                    "client_application": {
                        "client_application_name":"someName",
                        "client_application_vendor":"someVendor",
                        "client_application_version":"someVersion"
                    }
                }
            }


            ``` Content-Type: application/json

            Max allowed size: 10 kb.

            The metadata formData part needs to be sent before the file-part the
            request will otherwise be rejected.
        - name: file
          in: formData
          type: file
          required: true
          description: >
            File to import - Max allowed size: 200MB.

            The file should be in UTF-8 encoding.

            Assumed content-type for storage is application/octet-stream as long
            as the file is not identified as a valid taxonomy file.


            For security reasons all files are subject to scans(e.g. virus-scan,
            magic-byte-check).


            If you have multiple files representing one TRANSACTION or one
            CASH_POINT_CLOSING then we recommend to zip these files and import
            them as one file.

            This will reduce the number of files the customer has to monitor.

            This formData part needs to be sent after the metadata formData part
            has been sent otherwise the request will be rejected. <br> <br>
            Upload file with curl (for testing purposes): <br> <br> ```curl
            --location --request POST
            'https://sandbox-api.datev-business.de/karo/api/cash-register/v1/tenants/bd8bba82-fc2a-443e-b1e1-1a41a55118f5/files/import'```
            <br> <br> ```--header 'Accept: application/json'``` <br> <br>
            ```--header 'Authorization: Bearer
            ZGVmNGQxZjItMGE2Zi00ZmMzLWFmZTYtYjY3NzY2ZjMyOTU5O2s5eTBaVzNnS2R6WXl0SFh6TEtncXlOU2VOTExUTmQxSnMzeTMxNHljOUU9O1QwcG1UUXN6TG9sdGFIbmQ0dmlRNEhhZFl6U3pEMmxodzhpWTdLVERRRVk9'```
            <br> <br> ```--header 'request-id: 1580132356949'``` <br> <br>
            ```--header 'Content-Type: multipart/form-data'``` <br> <br>
            ```--form 'metadata={ "document_type": "TSE", "note" : "Notes about
            the imported file", "extensions" : { "date_from" : "2020-01-09",
            "date_to" : "2020-01-09", "tse_properties" : { "serial_number":
            "1234512345123451234512345123451234512345123451234512345123451231",
            "manufacturer": "TSE_MANUFACTURER", "model_type": "TSE_CARD",
            "name": "myTseFolder", "connected_cash_registers" :  ["1234567"] },
            "client_application": { "client_application_name":"Test Dev",
            "client_application_vendor":"Test Systems AG",
            "client_application_version":"0.0.1" } } }'``` <br> <br> ```--form
            'file=@20200113-120852_taxonomie_8_20200109-103108.json'``` <br>
            <br>
      responses:
        '202':
          description: >
            File has been sucessfully received and is now being processed. The
            file will be deleted should it be infected by viruses or contain
            malicious bytecode and the user will be contacted via email and be
            informed about the incident.
        '400':
          description: Request did not match specification
          schema:
            $ref: '#/definitions/error-message'
        '401':
          description: Device could not be successfully authenticated.
        '402':
          description: >
            File can not be upload as extension to an existing contract is
            required. Further information is provided as error-message.
          schema:
            $ref: '#/definitions/error-message'
        '403':
          description: >
            File can not be imported because the device does not have the
            required permission. This can be caused by the device not having
            been granted the correct scopes or by a missing contract.
        '404':
          description: >
            The tenant corresponding to the given tenant-id could not be found.
            This might indicate that the tenant-id is wrong, incomplete or not
            valid anymore.
        '413':
          description: >
            File import failed as the file exceeds the maximum size additional
            information about the affected part and the maximum size is provided
            as error-message
          schema:
            $ref: '#/definitions/error-message'
        '422':
          description: >-
            File import failed because the provided data is not valid.
            Information about the invalid part is provided as error-message
          schema:
            $ref: '#/definitions/error-message'
        '423':
          description: >
            File can not be imported with the given serial-number as the
            corresponding folder has been deactivated. Please reactivate the
            folder in the web-ui, before attempting to upload the file again.
        default:
          description: Unexpected error occured
          schema:
            $ref: '#/definitions/error-message'
  /tenants/{tenant-id}/tselogs/{serial-number}:
    get:
      operationId: getTselogsInfo
      summary: >-
        Info about processed tselogs for one tse with serial_number of the given
        tenant, e.g. last processed signature counter
      description: >
        This call returns infos about uploaded tselogs, eg. the signature
        counter and the optional given custom field from the uploaded and
        processed tar files
      tags:
        - tselog_info
      parameters:
        - $ref: '#/parameters/tenant-id'
        - $ref: '#/parameters/serial-number'
        - $ref: '#/parameters/request-id'
      responses:
        '200':
          description: Infos about uploaded tselogs
          schema:
            $ref: '#/definitions/tseloginfo'
        '400':
          description: Request did not match specification
          schema:
            $ref: '#/definitions/error-message'
        '401':
          description: Authentication failed.
        '403':
          description: >
            Retrieval of info is not allowed, e.g. not granted the correct
            scopes.
        '404':
          description: |
            No data for serial_number available.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error-message'
definitions:
  tenant:
    title: Registered tenant
    type: object
    required:
      - id
    properties:
      id:
        type: string
        maxLength: 64
      name:
        type: string
        minLength: 0
        maxLength: 32
  metadata:
    title: Metadata corresponding to an import request
    type: object
    description: >
      Contains information about the imported file and the uploading
      cash-register

      In case of document_type being CASH_REGISTER_TRANSACTIONS,
      CASH_POINT_CLOSING or TSE the value date_to becomes mandatory
    required:
      - document_type
      - extensions
    properties:
      document_type:
        type: string
        enum:
          - CASH_REGISTER_TRANSACTIONS
          - CASH_POINT_CLOSING
          - CASH_REGISTER_MISC_DOCUMENT
          - TSE
        description: Type of imported file
      note:
        type: string
        description: |
          Notes for the imported file.

          Optional field.
      extensions:
        type: object
        description: >
          Additional required Information about the imported document.

          In case of document_type being CASH_REGISTER_TRANSACTIONS,
          CASH_POINT_CLOSING or TSE the value date_to becomes mandatory

          The property cash_register or tse_properties must be set
        required:
          - date_from
          - client_application
        properties:
          cash_register:
            $ref: '#/definitions/cash_register_metadata'
          tse_properties:
            $ref: '#/definitions/tse_properties'
          client_application:
            $ref: '#/definitions/client_application'
          date_from:
            type: string
            format: date
            description: >
              Date following JSON-Format e.g. 2017-09-18 (see ISO8601).

              Defines from which date onwards this file is valid and determines
              the first date covered by its contents
          date_to:
            type: string
            format: date
            description: >
              Date following JSON-Format e.g. 2017-09-18 (see ISO8601).

              Defines until which date this file is evalid and determines the
              last date covered by its contents.

              This field is mandatory for CASH_POINT_CLOSING, TRANSACTIONS and
              TSE.

              In case of MISC_DOCUMENT it can be left blank to signal that no
              date can be determined by which this file is not relevant anymore.
  cash_register_metadata:
    properties:
      manufacturer:
        type: string
        description: Manufacturer of the cash register
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\s]+.*$
      model_type:
        type: string
        description: Model
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\s]+.*$
      name:
        type: string
        maxLength: 40
        pattern: ^.*[^\s]+.*$
        description: |
          Name of the cash-register if known to the device
      description:
        type: string
        description: Free description text for individual comments of the user
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\\s]+.*$
      serial_number:
        type: string
        description: >
          Serial number of the cash register according to the manufacturer. To
          import data, the field must be filled
           and can then no longer be changed
        maxLength: 50
        minLength: 1
        pattern: ^.*[^\s]+.*$
      address:
        type: object
        title: CashRegisterAddress
        required:
          - street
          - country_code
          - postal_code
          - city
        properties:
          street:
            type: string
            description: Street name with street number
            maxLength: 41
            minLength: 1
            pattern: ^.*[^\s]+.*$
          postal_code:
            type: string
            description: Postal-Code of cash-register
            maxLength: 5
            minLength: 5
            pattern: ^\d{5}$
          city:
            type: string
            description: Name of city the cash-register is based in
            maxLength: 62
            minLength: 1
            pattern: ^.*[^\s]+.*$
          country_code:
            description: Country the cash-register is based in, following ISO3166-Alpha2
            type: string
            enum:
              - DE
    required:
      - address
      - serial_number
  tse_properties:
    properties:
      manufacturer:
        type: string
        description: Manufacturer of the cash register
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\s]+.*$
      model_type:
        type: string
        description: Model
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\s]+.*$
      name:
        type: string
        maxLength: 40
        pattern: ^.*[^\s]+.*$
        description: |
          Name of the cash-register if known to the device
      serial_number:
        type: string
        minLength: 64
        maxLength: 64
        pattern: ^.*[^\s]+.*$
        description: |
          Permanent identification of the tse that created the file.
          Must be unique in combination with manufacturer.
      connected_cash_registers:
        type: array
        minItems: 1
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
        description: >
          Serial number of the connected cash registers of the TSE. Maximum is
          50 items in the array with a length of 50.
      custom_field:
        type: string
        description: Custom information about the tse
        maxLength: 255
        minLength: 1
        pattern: ^.*[^\s]+.*$
    required:
      - manufacturer
      - serial_number
  client_application:
    type: object
    title: Metadata for the client software submitting data
    description: >
      Metadata containing information about the client software that is
      interacting with the server. This metadata refers to the software that
      requested the token from the authentication server and submitted (not
      necessarily created) the uploaded data.
    required:
      - client_application_vendor
      - client_application_name
      - client_application_version
    properties:
      client_application_vendor:
        type: string
        pattern: ^.*[^\s]+.*$
        maxLength: 255
        description: |
          The manufacturer of the software used to communicate with the server
      client_application_name:
        type: string
        pattern: ^.*[^\s]+.*$
        maxLength: 255
        description: |
          The name of the sofrware used to communicate with the server
      client_application_version:
        type: string
        pattern: ^.*[^\s]+.*$
        maxLength: 255
        description: |
          The version of the software used to communicate with the server
  tseloginfo:
    title: info about uploaded tselogs
    type: object
    required:
      - serial_number
    properties:
      serial_number:
        type: string
        maxLength: 64
        description: |
          serial number of tse
      max_signature_counter:
        type: integer
        format: int64
        description: >
          Highest signatur counter of all uploaded and processed tselogs for one
          tse. Can be empty if no tar files were finally successfully processed.
      custom_field:
        type: string
        maxLength: 255
        description: >
          Value of custom field uploaded with tar file which belongs to
          max_signature_counter. Can be empty if no tar files were finally
          successfully processed.

          Always the custom_field of the uploaded file with the highest
          signature_counter is used, independently of upload time.
  error-message:
    title: An error response
    type: object
    required:
      - error
    properties:
      error:
        description: Unique identifier of this error.
        type: string
      error_description:
        type: string
      error_uri:
        description: >-
          URL pointing to a resource which can provide additional information
          about this error.
        type: string
      request_id:
        type: string
      additional_messages:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: message id
            description:
              type: string
              description: message text
            severity:
              type: string
              description: error, warning, information
            help_uri:
              type: string
              description: http://www.datev.de/info-db/123456
            path:
              type: string
              description: Path information about affected resource.
            affected_fields:
              type: array
              items:
                type: string
                description: field name ( e.g. json field name )
          required:
            - id
            - severity
  report:
    type: object
    properties:
      taxpayer:
        type: object
        properties:
          tax_number:
            type: string
            maxLength: 13
            pattern: ([0-9]{4})0[0-9]{8}
            description: Tax number in ELSTER format
          vat_number:
            type: string
            maxLength: 14
            pattern: ^[A-Z]{2}[a-zA-Z0-9\+\*]*
            description: VAT ID number, if available
          address:
            $ref: '#/definitions/address'
          internet_address:
            type: string
            minLength: 1
            maxLength: 1000
          company:
            $ref: '#/definitions/company_full'
          person:
            $ref: '#/definitions/person_with_id'
      transmitter:
        type: object
        properties:
          address:
            $ref: '#/definitions/address'
          company:
            $ref: '#/definitions/company'
          person:
            $ref: '#/definitions/person'
      location:
        type: object
        properties:
          name:
            type: string
            minLength: 1
            maxLength: 200
          number_of_record_keeping_systems:
            type: integer
            minimum: 1
            maximum: 100000
          remarks:
            type: string
            minLength: 1
            maxLength: 1000
          closure_date:
            type: string
            format: date
          address:
            $ref: '#/definitions/address'
      record_keeping_systems:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - pc
                - tablet-app
                - cash-register
                - taximeter
                - odometer
            manufacturer:
              type: string
              minLength: 1
              maxLength: 1000
            model:
              type: string
              minLength: 1
              maxLength: 1000
            serial_number:
              type: string
              minLength: 1
              maxLength: 1000
            software:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 1000
                version:
                  type: string
                  minLength: 1
                  maxLength: 1000
            acquisition_date:
              type: string
              format: date
            commissioning_date:
              type: string
              format: date
            decommissioning_date:
              type: string
              format: date
            decomissioning_reason:
              type: string
              minLength: 1
              maxLength: 1000
            remarks:
              type: string
              minLength: 1
              maxLength: 1000
            tss:
              type: object
              properties:
                serial_number:
                  type: string
                  minLength: 1
                  maxLength: 256
                type:
                  type: string
                  enum:
                    - sd-card
                    - usb
                    - cloud
                manufacturer:
                  type: string
                  minLength: 1
                  maxLength: 1000
                acquisition_date:
                  type: string
                  format: date
                installation_date:
                  type: string
                  format: date
                commissioning_date:
                  type: string
                  format: date
                expiry_date:
                  type: string
                  format: date
                bsi_certification_id:
                  type: string
                  maxLength: 9
                  pattern: \d{4}-\d{4}
                bsi_certification_expiry_date:
                  type: string
                  format: date
  person:
    type: object
    properties:
      salutation:
        type: string
        enum:
          - mr
          - mrs
          - non-binary
      name:
        type: string
        minLength: 1
        maxLength: 72
      first_name:
        type: string
        minLength: 1
        maxLength: 72
      name_prefix:
        type: string
        minLength: 1
        maxLength: 30
      name_suffix:
        type: string
        minLength: 1
        maxLength: 25
      title:
        type: string
        minLength: 1
        maxLength: 30
  person_with_id:
    type: object
    allOf:
      - $ref: '#/definitions/person'
    properties:
      id_number:
        type: string
        pattern: '[0-9]{11}'
      birth_date:
        type: string
        format: date
  company:
    type: object
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 120
  company_full:
    type: object
    allOf:
      - $ref: '#/definitions/company'
    properties:
      legal_form:
        type: string
        enum:
          - 31
          - 25
          - 26
          - 49
          - 20
          - 91
          - 92
          - 34
          - 36
          - 28
          - 81
          - 27
          - 35
          - 23
          - 24
          - 33
          - 22
          - 32
          - 41
          - 43
          - 61
          - 21
          - 72
          - 82
          - 74
          - 16
          - 44
          - 45
          - 99
          - 59
          - 83
          - 39
          - 73
          - 29
          - 79
          - 71
          - 37
          - 51
          - 42
        description: >
          31: Aktiengesellschaft

          25: Aktiengesellschaft u. Co. KG

          26: Aktiengesellschaft u. Co. OHG

          49: Andere Erwerbs- oder Wirtschaftsgenossenschaft

          20: Atypische stille Gesellschaft

          91: Ausländische Körperschaft

          92: Ausländische Personengesellschaft

          34: Bergrechtliche Gewerkschaft

          36: Europäische Aktiengesellschaft

          28: Europäische wirtschaftliche Interessenvereinigung

          81: Gebietskörperschaft

          27: Gesellschaft des bürgerlichen Rechts

          35: Gesellschaft mit beschränkter Haftung

          23: GmbH u. Co. KG

          24: GmbH u. Co. OHG

          33: Kolonialgesellschaft

          22: Kommanditgesellschaft

          32: Kommanditgesellschaft auf Aktien

          41: Kreditgenossenschaft, die Kredite ausschließlich an ihre
          Mitglieder gewährt

          43: Landwirtschaftl. Nutzungs- oder Verwaltungsgenossenschaft

          61: Nichtrechtsfähiger Verein, Anstalt, Stiftung oder anderes
          Zweckvermögen

          21: Offene Handelsgesellschaft

          72: Öffentliche oder unter Staatsaufsicht stehende Sparkasse

          82: Öffentl.-rechtl. Religionsgesellschaft

          74: Öffentl.-rechtl. Versorgungs-, Verkehrs- oder Hafenbetrieb

          16: Person mit Beteiligungen an gewerbl. Personengesellschaften

          44: Realgemeinde

          45: SCE Europäische Genossenschaft

          99: Sonstige ausländische Rechtsform

          59: Sonstige juristische Person des privaten Rechts

          83: Sonstige juristische Personen des öffentlichen Rechts

          39: Sonstige Kapitalgesellschaft

          73: Sonstige Kreditanstalt des öffentlichen Rechts

          29: Sonstige Personengesellschaft (z.B. Grundstücksgemeinschaft o.Ä.)

          79: Sonstiger Betrieb gewerblicher Art von jur. Personen des
          öffentlichenRechts

          71: Staatsbank

          37: Unternehmergesellschaft (haftungsbeschränkt)

          51: Versicherungsverein auf Gegenseitigkeit

          42: Zentralkasse, die Kredite ausschließlich an ihre Mitglieder
          gewährt und sich auf genossenschaftl. Aufgaben beschränkt
  address:
    type: object
    properties:
      street:
        type: string
        maxLength: 72
        pattern: .{1,72}
        description: Straße
      house_number:
        type: string
        maxLength: 4
        pattern: ^(?=.{1,4}$)[0-9]+$
        description: Hausnummer
      house_number_addon:
        type: string
        minLength: 1
        maxLength: 20
      address_addon:
        type: string
        minLength: 1
        maxLength: 46
      city:
        type: string
        minLength: 1
        maxLength: 72
      country_code:
        type: string
        enum:
          - AF
          - EG
          - AX
          - AL
          - DZ
          - VI
          - UM
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - GQ
          - AR
          - AM
          - AW
          - AZ
          - ET
          - AU
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - VG
          - IO
          - BN
          - BG
          - BF
          - BI
          - CL
          - CN
          - CK
          - CR
          - CI
          - CW
          - DE
          - DK
          - DM
          - DO
          - DJ
          - EC
          - SV
          - ER
          - EE
          - FK
          - FO
          - FJ
          - FI
          - FR
          - TF
          - GF
          - PF
          - GA
          - GM
          - GE
          - GH
          - GI
          - GD
          - GR
          - GL
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - IN
          - ID
          - IM
          - IQ
          - IR
          - IE
          - IS
          - IL
          - IT
          - JM
          - JP
          - YE
          - JE
          - JO
          - KY
          - KH
          - CM
          - CA
          - CV
          - KZ
          - QA
          - KE
          - KG
          - KI
          - CC
          - CO
          - KM
          - CD
          - CG
          - SZ
          - KP
          - KR
          - KO
          - HR
          - CU
          - KW
          - LA
          - LS
          - LV
          - LB
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MP
          - MA
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NC
          - NZ
          - NI
          - NL
          - NE
          - NG
          - NU
          - MK
          - NF
          - 'NO'
          - OM
          - AT
          - PK
          - PS
          - PW
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - RE
          - RW
          - RO
          - RU
          - SB
          - ZM
          - WS
          - SM
          - ST
          - SA
          - SE
          - CH
          - SN
          - RS
          - SC
          - SL
          - ZW
          - SG
          - SX
          - SK
          - SI
          - SO
          - ES
          - LK
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - ZA
          - SD
          - GS
          - SS
          - SR
          - SJ
          - SY
          - TJ
          - TW
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TD
          - CZ
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - HU
          - UY
          - UZ
          - VU
          - VE
          - AE
          - GB
          - US
          - VN
          - WF
          - CX
          - EH
          - CF
          - CY
      postal_code:
        type: string
        maxLength: 12
        pattern: .{1,12}
        description: Postleitzahl
parameters:
  request-id:
    name: Request-Id
    description: >-
      Unique Id of incoming request. It should be a UUID in its canonical
      textual representation (For example 123e4567-e89b-12d3-a456-426655440000)
      and generated by manufacturer. The id will be used for tracing purposes.
      (Id-generating sample code (Java) String requestId =
      java.util.UUID.randomUUID().toString();)
    in: header
    required: true
    type: string
  tenant-id:
    type: string
    name: tenant-id
    in: path
    description: ID of the tenant associated with the file
    required: true
  serial-number:
    name: serial-number
    type: string
    maxLength: 64
    in: path
    description: serial number of tse.
    required: true
x-ibm-configuration:
  cors:
    enabled: true
    policy:
      - allow-credentials: true
        allow-origin:
          - https://datevdeveloper.datev.de
  type: rest
  phase: realized
  enforced: true
  testable: true
  application-authentication:
    certificate: false
  servers:
    - url: https://cashregister.api.datev.de/platform/v2
      description: ''
      type:
        - production
        - development
basePath: /platform/v2
