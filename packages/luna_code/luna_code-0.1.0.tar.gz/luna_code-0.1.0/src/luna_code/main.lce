env.update({
    'abs':     abs,
    'return':  lambda *x: x[0],
    'car':     lambda x: x[0],
    'cdr':     lambda x: x[1:], 
    'cons':    lambda x,y: [x] + y,
    'length':  len, 
    'list':    lambda *x: list(x), 
    'list?':   lambda x: isinstance(x,list), 
    'map':     lambda *x: list(map(*x)),
    'max':     max,
    'min':     min,
    'null?':   lambda x: x == [], 
    'number?': lambda x: isinstance(x, int),   
    'procedure?': callable,
    'round':   round,
    'symbol?': lambda x: isinstance(x, str),
    'print':   print,
    'True':    True,
    'False':   False,
    'quote':   lambda *x: ' '.join(list(x)),
    'space':   ' ',
    'range':   lambda *x: list(range(*x)),
    'int':     int,
    'ExecFile':lambda x: BantamParser(Lexer(open(x).read())).ParseExpression()(global_env),
})