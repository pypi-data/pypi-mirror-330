stages:
  - lint
  - test
  - deploy
  # - doc


black: 
  stage: lint
  image: continuumio/miniconda3
  script:
    - conda install -c conda-forge black==24.8.0
    - black --config pyproject.toml --check .


pytest:
  stage: test
  image: continuumio/miniconda3
  script:
    - conda create -n strataer -c conda-forge python=3.11 xarray numpy pandas dask netcdf4 click pytest pytest-cov
    - source activate base
    - conda activate strataer
    - pip install .
    - pytest --cov strataer --cov-report term --cov-report xml:coverage.xml --junitxml=report.xml
  coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


pypi:
  stage: deploy
  image: continuumio/miniconda3
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: $pypi
  script:
    - conda create -n strataer -c conda-forge python=3.11 xarray numpy pandas dask netcdf4 pytest pytest-cov
    - source activate base
    - conda activate strataer
    - pip install build twine
    - pip install .
    - python -m build
    - python -m twine upload --repository pypi dist/* --verbose


release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
