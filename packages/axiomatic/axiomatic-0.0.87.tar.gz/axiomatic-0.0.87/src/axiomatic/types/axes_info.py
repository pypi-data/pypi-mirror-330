# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AxesInfo(UniversalBaseModel):
    """
    Pydantic class for Axes Info
    """

    origin: typing.Optional[typing.List[typing.Optional[typing.Any]]] = None
    x_axis_len: typing.Optional[float] = None
    y_axis_len: typing.Optional[float] = None
    x_contour: typing.Optional[typing.List[typing.List[float]]] = None
    y_contour: typing.Optional[typing.List[typing.List[float]]] = None
    x_ticks: typing.Optional[typing.List[typing.List[typing.List[int]]]] = None
    y_ticks: typing.Optional[typing.List[typing.List[typing.List[int]]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
